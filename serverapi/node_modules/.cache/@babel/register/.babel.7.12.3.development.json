{
  "{\"sourceRoot\":\"E:\\\\boomadvertisement\\\\serverapi\\\\routes\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"E:\\\\boomadvertisement\\\\serverapi\",\"filename\":\"E:\\\\boomadvertisement\\\\serverapi\\\\routes\\\\promoters.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"E:\\\\boomadvertisement\\\\serverapi\",\"plugins\":[],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "E:\\boomadvertisement\\serverapi\\routes\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "E:\\boomadvertisement\\serverapi",
      "filename": "E:\\boomadvertisement\\serverapi\\routes\\promoters.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "E:\\boomadvertisement\\serverapi",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "E:\\boomadvertisement\\serverapi\\routes\\promoters.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "E:\\boomadvertisement\\serverapi\\routes\\promoters.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "E:\\boomadvertisement\\serverapi\\routes\\",
        "sourceFileName": "promoters.js"
      }
    },
    "ast": null,
    "code": "var express = require('express');\n\nvar router = express.Router();\n\nvar mongoose = require('mongoose');\n\nconst promoter = require('../models/promoters');\n\nconst email = require('../config/email');\n\nconst nodemailer = require('nodemailer');\n\nvar passwordHash = require('password-hash'); //process.env.NODE_TLS_REJECT_UNAUTHORIZED = \"1\";\n// Send Email Function \n\n\nvar sendEmail = function (to, subject, html) {\n  return new Promise(function (resolve, reject) {\n    var transporter = nodemailer.createTransport({\n      service: 'gmail',\n      port: 465,\n      auth: {\n        user: email.email,\n        pass: email.password\n      },\n      tls: {\n        // do not fail on invalid certs\n        rejectUnauthorized: false\n      }\n    });\n    var mailOptions = {\n      from: email.email + ' <http://boomadvertise.com/>',\n      to: to,\n      subject: subject,\n      html: html\n    };\n    transporter.sendMail(mailOptions, function (error, info) {\n      if (error) {\n        reject(error);\n      } else {\n        resolve(1);\n      }\n    });\n  });\n};\n\nrouter.post('/register', function (req, res) {\n  var promoterCreate = new promoter.promoters(req.body.promoter_signup);\n  var datetime = new Date();\n  let pass = passwordHash.generate(req.body.promoter_signup.password);\n  promoterCreate.joindate = datetime;\n  promoterCreate.password = pass;\n  promoter.promoters.findOne({\n    email: req.body.promoter_signup.email\n  }, function (err, promoters) {\n    if (err) res.json({\n      status: \"failure\",\n      statusCode: 100,\n      msg: err\n    });\n\n    if (promoters) {\n      res.json({\n        status: \"failure\",\n        statusCode: 100,\n        msg: \"Email already exists!!\"\n      });\n    } else {\n      promoter.promoters.findOne({\n        name: req.body.promoter_signup.name\n      }, function (err, promoters) {\n        if (err) res.json({\n          status: \"failure\",\n          statusCode: 100,\n          msg: err\n        });\n\n        if (promoters) {\n          res.json({\n            status: \"failure\",\n            statusCode: 100,\n            msg: \"Username already exists!!\"\n          });\n        } else {\n          promoterCreate.save(function (err, promoter) {\n            if (err) res.json({\n              status: \"failure\",\n              statusCode: 100,\n              msg: err\n            });\n            res.json({\n              status: \"success\",\n              statusCode: 200,\n              data: promoter,\n              msg: \"Signup & SignIn successfully!\"\n            });\n          });\n        }\n      });\n    }\n  });\n});\nrouter.post('/singlePromoter', function (req, res) {\n  promoter.promoters.find({\n    _id: req.body.id\n  }, function (err, promoter_data) {\n    if (err) res.json({\n      status: \"failure\",\n      statusCode: 100,\n      error: err\n    });\n    res.json({\n      status: \"success\",\n      statusCode: 200,\n      data: promoter_data\n    });\n  });\n});\nrouter.post('/send_request_quotes', function (req, res) {\n  let html_content = req.body.description;\n  let subject = \"Request Quotes\";\n  let to_email = req.body.email.trim();\n  var a = sendEmail(to_email, subject, html_content);\n  a.then(result => {\n    if (result) {\n      res.json({\n        status: \"success\",\n        statusCode: 100,\n        message: 'Email sent successfully...'\n      });\n    } else {\n      res.json({\n        status: \"failure\",\n        statusCode: 200,\n        message: \"There was some error in youyr request!!!\",\n        data: ''\n      });\n    }\n  }).catch(err => {\n    res.json({\n      status: \"failure\",\n      statusCode: 200,\n      message: \"Could Not Send Email!!!\",\n      data: err\n    });\n  });\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb21vdGVycy5qcyJdLCJuYW1lcyI6WyJleHByZXNzIiwicmVxdWlyZSIsInJvdXRlciIsIlJvdXRlciIsIm1vbmdvb3NlIiwicHJvbW90ZXIiLCJlbWFpbCIsIm5vZGVtYWlsZXIiLCJwYXNzd29yZEhhc2giLCJzZW5kRW1haWwiLCJ0byIsInN1YmplY3QiLCJodG1sIiwiUHJvbWlzZSIsInJlc29sdmUiLCJyZWplY3QiLCJ0cmFuc3BvcnRlciIsImNyZWF0ZVRyYW5zcG9ydCIsInNlcnZpY2UiLCJwb3J0IiwiYXV0aCIsInVzZXIiLCJwYXNzIiwicGFzc3dvcmQiLCJ0bHMiLCJyZWplY3RVbmF1dGhvcml6ZWQiLCJtYWlsT3B0aW9ucyIsImZyb20iLCJzZW5kTWFpbCIsImVycm9yIiwiaW5mbyIsInBvc3QiLCJyZXEiLCJyZXMiLCJwcm9tb3RlckNyZWF0ZSIsInByb21vdGVycyIsImJvZHkiLCJwcm9tb3Rlcl9zaWdudXAiLCJkYXRldGltZSIsIkRhdGUiLCJnZW5lcmF0ZSIsImpvaW5kYXRlIiwiZmluZE9uZSIsImVyciIsImpzb24iLCJzdGF0dXMiLCJzdGF0dXNDb2RlIiwibXNnIiwibmFtZSIsInNhdmUiLCJkYXRhIiwiZmluZCIsIl9pZCIsImlkIiwicHJvbW90ZXJfZGF0YSIsImh0bWxfY29udGVudCIsImRlc2NyaXB0aW9uIiwidG9fZW1haWwiLCJ0cmltIiwiYSIsInRoZW4iLCJyZXN1bHQiLCJtZXNzYWdlIiwiY2F0Y2giLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFDQSxJQUFNQSxPQUFPLEdBQVNDLE9BQU8sQ0FBQyxTQUFELENBQTdCOztBQUNBLElBQU1DLE1BQU0sR0FBVUYsT0FBTyxDQUFDRyxNQUFSLEVBQXRCOztBQUNBLElBQU1DLFFBQVEsR0FBUUgsT0FBTyxDQUFDLFVBQUQsQ0FBN0I7O0FBQ0EsTUFBTUksUUFBUSxHQUFRSixPQUFPLENBQUMscUJBQUQsQ0FBN0I7O0FBQ0EsTUFBTUssS0FBSyxHQUFXTCxPQUFPLENBQUMsaUJBQUQsQ0FBN0I7O0FBQ0EsTUFBTU0sVUFBVSxHQUFNTixPQUFPLENBQUMsWUFBRCxDQUE3Qjs7QUFDQSxJQUFNTyxZQUFZLEdBQUlQLE9BQU8sQ0FBQyxlQUFELENBQTdCLEMsQ0FFRTtBQUVBOzs7QUFFQSxJQUFJUSxTQUFTLEdBQUcsVUFBU0MsRUFBVCxFQUFZQyxPQUFaLEVBQW9CQyxJQUFwQixFQUEwQjtBQUd4QyxTQUFPLElBQUlDLE9BQUosQ0FBWSxVQUFTQyxPQUFULEVBQWtCQyxNQUFsQixFQUEwQjtBQUMzQyxRQUFJQyxXQUFXLEdBQUdULFVBQVUsQ0FBQ1UsZUFBWCxDQUEyQjtBQUUzQ0MsTUFBQUEsT0FBTyxFQUFFLE9BRmtDO0FBRzNDQyxNQUFBQSxJQUFJLEVBQUMsR0FIc0M7QUFJM0NDLE1BQUFBLElBQUksRUFBRTtBQUNKQyxRQUFBQSxJQUFJLEVBQUVmLEtBQUssQ0FBQ0EsS0FEUjtBQUVKZ0IsUUFBQUEsSUFBSSxFQUFFaEIsS0FBSyxDQUFDaUI7QUFGUixPQUpxQztBQVEzQ0MsTUFBQUEsR0FBRyxFQUFFO0FBQ0g7QUFDQUMsUUFBQUEsa0JBQWtCLEVBQUU7QUFGakI7QUFSc0MsS0FBM0IsQ0FBbEI7QUFjRixRQUFJQyxXQUFXLEdBQUc7QUFDaEJDLE1BQUFBLElBQUksRUFBRXJCLEtBQUssQ0FBQ0EsS0FBTixHQUFZLDhCQURGO0FBRWhCSSxNQUFBQSxFQUFFLEVBQUVBLEVBRlk7QUFHaEJDLE1BQUFBLE9BQU8sRUFBRUEsT0FITztBQUloQkMsTUFBQUEsSUFBSSxFQUFFQTtBQUpVLEtBQWxCO0FBT0VJLElBQUFBLFdBQVcsQ0FBQ1ksUUFBWixDQUFxQkYsV0FBckIsRUFBa0MsVUFBU0csS0FBVCxFQUFnQkMsSUFBaEIsRUFBcUI7QUFDdkQsVUFBSUQsS0FBSixFQUFXO0FBQ1RkLFFBQUFBLE1BQU0sQ0FBQ2MsS0FBRCxDQUFOO0FBQ0QsT0FGRCxNQUVPO0FBQ1BmLFFBQUFBLE9BQU8sQ0FBQyxDQUFELENBQVA7QUFDQztBQUNGLEtBTkM7QUFTSCxHQS9CUSxDQUFQO0FBaUNELENBcENEOztBQXNDRVosTUFBTSxDQUFDNkIsSUFBUCxDQUFZLFdBQVosRUFBeUIsVUFBU0MsR0FBVCxFQUFhQyxHQUFiLEVBQWtCO0FBRXJDLE1BQUlDLGNBQWMsR0FBSSxJQUFJN0IsUUFBUSxDQUFDOEIsU0FBYixDQUF1QkgsR0FBRyxDQUFDSSxJQUFKLENBQVNDLGVBQWhDLENBQXRCO0FBRUEsTUFBSUMsUUFBUSxHQUFHLElBQUlDLElBQUosRUFBZjtBQUNBLE1BQUlqQixJQUFJLEdBQUdkLFlBQVksQ0FBQ2dDLFFBQWIsQ0FBc0JSLEdBQUcsQ0FBQ0ksSUFBSixDQUFTQyxlQUFULENBQXlCZCxRQUEvQyxDQUFYO0FBRUFXLEVBQUFBLGNBQWMsQ0FBQ08sUUFBZixHQUEwQkgsUUFBMUI7QUFDQUosRUFBQUEsY0FBYyxDQUFDWCxRQUFmLEdBQTBCRCxJQUExQjtBQUVBakIsRUFBQUEsUUFBUSxDQUFDOEIsU0FBVCxDQUFtQk8sT0FBbkIsQ0FBMkI7QUFBQ3BDLElBQUFBLEtBQUssRUFBQzBCLEdBQUcsQ0FBQ0ksSUFBSixDQUFTQyxlQUFULENBQXlCL0I7QUFBaEMsR0FBM0IsRUFBbUUsVUFBU3FDLEdBQVQsRUFBY1IsU0FBZCxFQUF5QjtBQUMxRixRQUFJUSxHQUFKLEVBQVVWLEdBQUcsQ0FBQ1csSUFBSixDQUFTO0FBQUNDLE1BQUFBLE1BQU0sRUFBQyxTQUFSO0FBQWtCQyxNQUFBQSxVQUFVLEVBQUMsR0FBN0I7QUFBaUNDLE1BQUFBLEdBQUcsRUFBQ0o7QUFBckMsS0FBVDs7QUFFVixRQUFHUixTQUFILEVBQWE7QUFFWEYsTUFBQUEsR0FBRyxDQUFDVyxJQUFKLENBQVM7QUFBQ0MsUUFBQUEsTUFBTSxFQUFDLFNBQVI7QUFBa0JDLFFBQUFBLFVBQVUsRUFBQyxHQUE3QjtBQUFpQ0MsUUFBQUEsR0FBRyxFQUFDO0FBQXJDLE9BQVQ7QUFDRCxLQUhELE1BR0s7QUFDRDFDLE1BQUFBLFFBQVEsQ0FBQzhCLFNBQVQsQ0FBbUJPLE9BQW5CLENBQTJCO0FBQUNNLFFBQUFBLElBQUksRUFBQ2hCLEdBQUcsQ0FBQ0ksSUFBSixDQUFTQyxlQUFULENBQXlCVztBQUEvQixPQUEzQixFQUFpRSxVQUFTTCxHQUFULEVBQWNSLFNBQWQsRUFBeUI7QUFDMUYsWUFBSVEsR0FBSixFQUFVVixHQUFHLENBQUNXLElBQUosQ0FBUztBQUFDQyxVQUFBQSxNQUFNLEVBQUMsU0FBUjtBQUFrQkMsVUFBQUEsVUFBVSxFQUFDLEdBQTdCO0FBQWlDQyxVQUFBQSxHQUFHLEVBQUNKO0FBQXJDLFNBQVQ7O0FBRVYsWUFBR1IsU0FBSCxFQUFhO0FBRVhGLFVBQUFBLEdBQUcsQ0FBQ1csSUFBSixDQUFTO0FBQUNDLFlBQUFBLE1BQU0sRUFBQyxTQUFSO0FBQWtCQyxZQUFBQSxVQUFVLEVBQUMsR0FBN0I7QUFBaUNDLFlBQUFBLEdBQUcsRUFBQztBQUFyQyxXQUFUO0FBQ0QsU0FIRCxNQUlJO0FBQ0FiLFVBQUFBLGNBQWMsQ0FBQ2UsSUFBZixDQUFvQixVQUFVTixHQUFWLEVBQWV0QyxRQUFmLEVBQXlCO0FBQzdDLGdCQUFJc0MsR0FBSixFQUFTVixHQUFHLENBQUNXLElBQUosQ0FBUztBQUFDQyxjQUFBQSxNQUFNLEVBQUMsU0FBUjtBQUFrQkMsY0FBQUEsVUFBVSxFQUFDLEdBQTdCO0FBQWlDQyxjQUFBQSxHQUFHLEVBQUNKO0FBQXJDLGFBQVQ7QUFFVFYsWUFBQUEsR0FBRyxDQUFDVyxJQUFKLENBQVM7QUFBQ0MsY0FBQUEsTUFBTSxFQUFDLFNBQVI7QUFBa0JDLGNBQUFBLFVBQVUsRUFBQyxHQUE3QjtBQUFpQ0ksY0FBQUEsSUFBSSxFQUFDN0MsUUFBdEM7QUFBK0MwQyxjQUFBQSxHQUFHLEVBQUM7QUFBbkQsYUFBVDtBQUNELFdBSkM7QUFLSDtBQUNGLE9BZEM7QUFlSDtBQUNGLEdBdkJEO0FBeUJELENBbkNMO0FBcUNBN0MsTUFBTSxDQUFDNkIsSUFBUCxDQUFZLGlCQUFaLEVBQStCLFVBQVNDLEdBQVQsRUFBY0MsR0FBZCxFQUFtQjtBQUNoRDVCLEVBQUFBLFFBQVEsQ0FBQzhCLFNBQVQsQ0FBbUJnQixJQUFuQixDQUF3QjtBQUFDQyxJQUFBQSxHQUFHLEVBQUNwQixHQUFHLENBQUNJLElBQUosQ0FBU2lCO0FBQWQsR0FBeEIsRUFBMkMsVUFBU1YsR0FBVCxFQUFjVyxhQUFkLEVBQTZCO0FBQ3RFLFFBQUlYLEdBQUosRUFBVVYsR0FBRyxDQUFDVyxJQUFKLENBQVM7QUFBQ0MsTUFBQUEsTUFBTSxFQUFDLFNBQVI7QUFBa0JDLE1BQUFBLFVBQVUsRUFBQyxHQUE3QjtBQUFpQ2pCLE1BQUFBLEtBQUssRUFBQ2M7QUFBdkMsS0FBVDtBQUNWVixJQUFBQSxHQUFHLENBQUNXLElBQUosQ0FBUztBQUFDQyxNQUFBQSxNQUFNLEVBQUMsU0FBUjtBQUFrQkMsTUFBQUEsVUFBVSxFQUFDLEdBQTdCO0FBQWlDSSxNQUFBQSxJQUFJLEVBQUNJO0FBQXRDLEtBQVQ7QUFDRCxHQUhEO0FBSUQsQ0FMRDtBQU9BcEQsTUFBTSxDQUFDNkIsSUFBUCxDQUFZLHNCQUFaLEVBQW1DLFVBQVNDLEdBQVQsRUFBZUMsR0FBZixFQUFtQjtBQUdwRCxNQUFJc0IsWUFBWSxHQUFJdkIsR0FBRyxDQUFDSSxJQUFKLENBQVNvQixXQUE3QjtBQUNBLE1BQUk3QyxPQUFPLEdBQVMsZ0JBQXBCO0FBQ0EsTUFBSThDLFFBQVEsR0FBUXpCLEdBQUcsQ0FBQ0ksSUFBSixDQUFTOUIsS0FBVCxDQUFlb0QsSUFBZixFQUFwQjtBQUVBLE1BQUlDLENBQUMsR0FBSWxELFNBQVMsQ0FBQ2dELFFBQUQsRUFBWTlDLE9BQVosRUFBb0I0QyxZQUFwQixDQUFsQjtBQUNFSSxFQUFBQSxDQUFDLENBQUNDLElBQUYsQ0FBUUMsTUFBRCxJQUFZO0FBRWpCLFFBQUdBLE1BQUgsRUFBVTtBQUVSNUIsTUFBQUEsR0FBRyxDQUFDVyxJQUFKLENBQVM7QUFBQ0MsUUFBQUEsTUFBTSxFQUFDLFNBQVI7QUFBa0JDLFFBQUFBLFVBQVUsRUFBQyxHQUE3QjtBQUFpQ2dCLFFBQUFBLE9BQU8sRUFBQztBQUF6QyxPQUFUO0FBQ0QsS0FIRCxNQUdPO0FBRUw3QixNQUFBQSxHQUFHLENBQUNXLElBQUosQ0FBUztBQUFDQyxRQUFBQSxNQUFNLEVBQUMsU0FBUjtBQUFrQkMsUUFBQUEsVUFBVSxFQUFDLEdBQTdCO0FBQWlDZ0IsUUFBQUEsT0FBTyxFQUFDLDBDQUF6QztBQUFvRlosUUFBQUEsSUFBSSxFQUFDO0FBQXpGLE9BQVQ7QUFDRDtBQUVGLEdBVkQsRUFVR2EsS0FWSCxDQVVVcEIsR0FBRCxJQUFTO0FBRWhCVixJQUFBQSxHQUFHLENBQUNXLElBQUosQ0FBUztBQUFDQyxNQUFBQSxNQUFNLEVBQUMsU0FBUjtBQUFrQkMsTUFBQUEsVUFBVSxFQUFDLEdBQTdCO0FBQWlDZ0IsTUFBQUEsT0FBTyxFQUFDLHlCQUF6QztBQUFtRVosTUFBQUEsSUFBSSxFQUFDUDtBQUF4RSxLQUFUO0FBQ0QsR0FiRDtBQWdCSCxDQXhCRDtBQTBCQXFCLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQi9ELE1BQWpCIiwic291cmNlUm9vdCI6IkU6XFxib29tYWR2ZXJ0aXNlbWVudFxcc2VydmVyYXBpXFxyb3V0ZXNcXCIsInNvdXJjZXNDb250ZW50IjpbIlxyXG52YXIgICBleHByZXNzICAgICAgID0gcmVxdWlyZSgnZXhwcmVzcycpO1xyXG52YXIgICByb3V0ZXIgICAgICAgID0gZXhwcmVzcy5Sb3V0ZXIoKTtcclxudmFyICAgbW9uZ29vc2UgICAgICA9IHJlcXVpcmUoJ21vbmdvb3NlJyk7XHJcbmNvbnN0IHByb21vdGVyICAgICAgPSByZXF1aXJlKCcuLi9tb2RlbHMvcHJvbW90ZXJzJyk7XHJcbmNvbnN0IGVtYWlsICAgICAgICAgPSByZXF1aXJlKCcuLi9jb25maWcvZW1haWwnKTtcclxuY29uc3Qgbm9kZW1haWxlciAgICA9IHJlcXVpcmUoJ25vZGVtYWlsZXInKTtcclxudmFyICAgcGFzc3dvcmRIYXNoICA9IHJlcXVpcmUoJ3Bhc3N3b3JkLWhhc2gnKTtcclxuXHJcbiAgLy9wcm9jZXNzLmVudi5OT0RFX1RMU19SRUpFQ1RfVU5BVVRIT1JJWkVEID0gXCIxXCI7XHJcblxyXG4gIC8vIFNlbmQgRW1haWwgRnVuY3Rpb24gXHJcblxyXG4gIHZhciBzZW5kRW1haWwgPSBmdW5jdGlvbih0byxzdWJqZWN0LGh0bWwpIHtcclxuXHJcbiAgICBcclxuICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbihyZXNvbHZlLCByZWplY3QpIHtcclxuICAgICAgdmFyIHRyYW5zcG9ydGVyID0gbm9kZW1haWxlci5jcmVhdGVUcmFuc3BvcnQoe1xyXG4gICAgICAgIFxyXG4gICAgICAgIHNlcnZpY2U6ICdnbWFpbCcsIFxyXG4gICAgICAgIHBvcnQ6NDY1LFxyXG4gICAgICAgIGF1dGg6IHsgXHJcbiAgICAgICAgICB1c2VyOiBlbWFpbC5lbWFpbCxcclxuICAgICAgICAgIHBhc3M6IGVtYWlsLnBhc3N3b3JkXHJcbiAgICAgICAgfSAsXHJcbiAgICAgICAgdGxzOiB7XHJcbiAgICAgICAgICAvLyBkbyBub3QgZmFpbCBvbiBpbnZhbGlkIGNlcnRzXHJcbiAgICAgICAgICByZWplY3RVbmF1dGhvcml6ZWQ6IGZhbHNlXHJcbiAgICAgICAgfVxyXG4gICAgICB9KTtcclxuICAgIFxyXG4gICAgdmFyIG1haWxPcHRpb25zID0ge1xyXG4gICAgICBmcm9tOiBlbWFpbC5lbWFpbCsnIDxodHRwOi8vYm9vbWFkdmVydGlzZS5jb20vPicsXHJcbiAgICAgIHRvOiB0byxcclxuICAgICAgc3ViamVjdDogc3ViamVjdCxcclxuICAgICAgaHRtbDogaHRtbFxyXG4gICAgfTtcclxuXHJcbiAgICAgIHRyYW5zcG9ydGVyLnNlbmRNYWlsKG1haWxPcHRpb25zLCBmdW5jdGlvbihlcnJvciwgaW5mbyl7XHJcbiAgICAgIGlmIChlcnJvcikge1xyXG4gICAgICAgIHJlamVjdChlcnJvcik7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgIHJlc29sdmUoMSlcclxuICAgICAgfVxyXG4gICAgfSk7XHJcblxyXG4gICAgXHJcbiAgfSk7XHJcblxyXG4gIH1cclxuXHJcbiAgICByb3V0ZXIucG9zdCgnL3JlZ2lzdGVyJywgZnVuY3Rpb24ocmVxLHJlcykge1xyXG4gICAgICAgICAgXHJcbiAgICAgICAgICB2YXIgcHJvbW90ZXJDcmVhdGUgPSAgbmV3IHByb21vdGVyLnByb21vdGVycyhyZXEuYm9keS5wcm9tb3Rlcl9zaWdudXApO1xyXG5cclxuICAgICAgICAgIHZhciBkYXRldGltZSA9IG5ldyBEYXRlKCk7XHJcbiAgICAgICAgICBsZXQgcGFzcyA9IHBhc3N3b3JkSGFzaC5nZW5lcmF0ZShyZXEuYm9keS5wcm9tb3Rlcl9zaWdudXAucGFzc3dvcmQpXHJcblxyXG4gICAgICAgICAgcHJvbW90ZXJDcmVhdGUuam9pbmRhdGUgPSBkYXRldGltZVxyXG4gICAgICAgICAgcHJvbW90ZXJDcmVhdGUucGFzc3dvcmQgPSBwYXNzXHJcbiAgICAgICAgICBcclxuICAgICAgICAgIHByb21vdGVyLnByb21vdGVycy5maW5kT25lKHtlbWFpbDpyZXEuYm9keS5wcm9tb3Rlcl9zaWdudXAuZW1haWx9LCBmdW5jdGlvbihlcnIsIHByb21vdGVycykge1xyXG4gICAgICAgICAgICBpZiAoZXJyKSAgcmVzLmpzb24oe3N0YXR1czpcImZhaWx1cmVcIixzdGF0dXNDb2RlOjEwMCxtc2c6ZXJyfSk7XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgICAgICBpZihwcm9tb3RlcnMpe1xyXG4gICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgcmVzLmpzb24oe3N0YXR1czpcImZhaWx1cmVcIixzdGF0dXNDb2RlOjEwMCxtc2c6XCJFbWFpbCBhbHJlYWR5IGV4aXN0cyEhXCJ9KTtcclxuICAgICAgICAgICAgfWVsc2V7XHJcbiAgICAgICAgICAgICAgICBwcm9tb3Rlci5wcm9tb3RlcnMuZmluZE9uZSh7bmFtZTpyZXEuYm9keS5wcm9tb3Rlcl9zaWdudXAubmFtZX0sIGZ1bmN0aW9uKGVyciwgcHJvbW90ZXJzKSB7XHJcbiAgICAgICAgICAgICAgICBpZiAoZXJyKSAgcmVzLmpzb24oe3N0YXR1czpcImZhaWx1cmVcIixzdGF0dXNDb2RlOjEwMCxtc2c6ZXJyfSk7XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgaWYocHJvbW90ZXJzKXtcclxuICAgICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICAgIHJlcy5qc29uKHtzdGF0dXM6XCJmYWlsdXJlXCIsc3RhdHVzQ29kZToxMDAsbXNnOlwiVXNlcm5hbWUgYWxyZWFkeSBleGlzdHMhIVwifSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBlbHNle1xyXG4gICAgICAgICAgICAgICAgICAgIHByb21vdGVyQ3JlYXRlLnNhdmUoZnVuY3Rpb24gKGVyciwgcHJvbW90ZXIpIHtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoZXJyKSByZXMuanNvbih7c3RhdHVzOlwiZmFpbHVyZVwiLHN0YXR1c0NvZGU6MTAwLG1zZzplcnJ9KTtcclxuICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgICAgIHJlcy5qc29uKHtzdGF0dXM6XCJzdWNjZXNzXCIsc3RhdHVzQ29kZToyMDAsZGF0YTpwcm9tb3Rlcixtc2c6XCJTaWdudXAgJiBTaWduSW4gc3VjY2Vzc2Z1bGx5IVwifSk7XHJcbiAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgIH0pOyBcclxuICAgICAgICAgIFxyXG4gICAgICAgIH0pO1xyXG5cclxuICAgIHJvdXRlci5wb3N0KCcvc2luZ2xlUHJvbW90ZXInLCBmdW5jdGlvbihyZXEsIHJlcykge1xyXG4gICAgICBwcm9tb3Rlci5wcm9tb3RlcnMuZmluZCh7X2lkOnJlcS5ib2R5LmlkfSwgZnVuY3Rpb24oZXJyLCBwcm9tb3Rlcl9kYXRhKSB7XHJcbiAgICAgICAgaWYgKGVycikgIHJlcy5qc29uKHtzdGF0dXM6XCJmYWlsdXJlXCIsc3RhdHVzQ29kZToxMDAsZXJyb3I6ZXJyfSk7XHJcbiAgICAgICAgcmVzLmpzb24oe3N0YXR1czpcInN1Y2Nlc3NcIixzdGF0dXNDb2RlOjIwMCxkYXRhOnByb21vdGVyX2RhdGF9KTtcclxuICAgICAgfSk7XHJcbiAgICB9KTtcclxuXHJcbiAgICByb3V0ZXIucG9zdCgnL3NlbmRfcmVxdWVzdF9xdW90ZXMnLGZ1bmN0aW9uKHJlcSAsIHJlcyl7XHJcblxyXG4gICAgICBcclxuICAgICAgbGV0IGh0bWxfY29udGVudCAgPSByZXEuYm9keS5kZXNjcmlwdGlvbjtcclxuICAgICAgbGV0IHN1YmplY3QgICAgICAgPSBcIlJlcXVlc3QgUXVvdGVzXCI7XHJcbiAgICAgIGxldCB0b19lbWFpbCAgICAgID0gcmVxLmJvZHkuZW1haWwudHJpbSgpO1xyXG4gICAgICBcclxuICAgICAgdmFyIGEgPSAgc2VuZEVtYWlsKHRvX2VtYWlsICwgc3ViamVjdCxodG1sX2NvbnRlbnQpXHJcbiAgICAgICAgYS50aGVuKChyZXN1bHQpID0+IHsgXHJcblxyXG4gICAgICAgICAgaWYocmVzdWx0KXtcclxuICAgICAgICAgIFxyXG4gICAgICAgICAgICByZXMuanNvbih7c3RhdHVzOlwic3VjY2Vzc1wiLHN0YXR1c0NvZGU6MTAwLG1lc3NhZ2U6J0VtYWlsIHNlbnQgc3VjY2Vzc2Z1bGx5Li4uJ30pO1xyXG4gICAgICAgICAgfSBlbHNlIHtcclxuXHJcbiAgICAgICAgICAgIHJlcy5qc29uKHtzdGF0dXM6XCJmYWlsdXJlXCIsc3RhdHVzQ29kZToyMDAsbWVzc2FnZTpcIlRoZXJlIHdhcyBzb21lIGVycm9yIGluIHlvdXlyIHJlcXVlc3QhISFcIixkYXRhOicnfSk7XHJcbiAgICAgICAgICB9XHJcblxyXG4gICAgICAgIH0pLmNhdGNoKChlcnIpID0+IHtcclxuICAgICAgICAgIFxyXG4gICAgICAgICAgcmVzLmpzb24oe3N0YXR1czpcImZhaWx1cmVcIixzdGF0dXNDb2RlOjIwMCxtZXNzYWdlOlwiQ291bGQgTm90IFNlbmQgRW1haWwhISFcIixkYXRhOmVycn0pO1xyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICBcclxuICAgIH0pO1xyXG5cclxuICAgIG1vZHVsZS5leHBvcnRzID0gcm91dGVyOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "promoters.js"
      ],
      "names": [
        "express",
        "require",
        "router",
        "Router",
        "mongoose",
        "promoter",
        "email",
        "nodemailer",
        "passwordHash",
        "sendEmail",
        "to",
        "subject",
        "html",
        "Promise",
        "resolve",
        "reject",
        "transporter",
        "createTransport",
        "service",
        "port",
        "auth",
        "user",
        "pass",
        "password",
        "tls",
        "rejectUnauthorized",
        "mailOptions",
        "from",
        "sendMail",
        "error",
        "info",
        "post",
        "req",
        "res",
        "promoterCreate",
        "promoters",
        "body",
        "promoter_signup",
        "datetime",
        "Date",
        "generate",
        "joindate",
        "findOne",
        "err",
        "json",
        "status",
        "statusCode",
        "msg",
        "name",
        "save",
        "data",
        "find",
        "_id",
        "id",
        "promoter_data",
        "html_content",
        "description",
        "to_email",
        "trim",
        "a",
        "then",
        "result",
        "message",
        "catch",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "E:\\boomadvertisement\\serverapi\\routes\\",
      "sourcesContent": [
        "\r\nvar   express       = require('express');\r\nvar   router        = express.Router();\r\nvar   mongoose      = require('mongoose');\r\nconst promoter      = require('../models/promoters');\r\nconst email         = require('../config/email');\r\nconst nodemailer    = require('nodemailer');\r\nvar   passwordHash  = require('password-hash');\r\n\r\n  //process.env.NODE_TLS_REJECT_UNAUTHORIZED = \"1\";\r\n\r\n  // Send Email Function \r\n\r\n  var sendEmail = function(to,subject,html) {\r\n\r\n    \r\n    return new Promise(function(resolve, reject) {\r\n      var transporter = nodemailer.createTransport({\r\n        \r\n        service: 'gmail', \r\n        port:465,\r\n        auth: { \r\n          user: email.email,\r\n          pass: email.password\r\n        } ,\r\n        tls: {\r\n          // do not fail on invalid certs\r\n          rejectUnauthorized: false\r\n        }\r\n      });\r\n    \r\n    var mailOptions = {\r\n      from: email.email+' <http://boomadvertise.com/>',\r\n      to: to,\r\n      subject: subject,\r\n      html: html\r\n    };\r\n\r\n      transporter.sendMail(mailOptions, function(error, info){\r\n      if (error) {\r\n        reject(error);\r\n      } else {\r\n      resolve(1)\r\n      }\r\n    });\r\n\r\n    \r\n  });\r\n\r\n  }\r\n\r\n    router.post('/register', function(req,res) {\r\n          \r\n          var promoterCreate =  new promoter.promoters(req.body.promoter_signup);\r\n\r\n          var datetime = new Date();\r\n          let pass = passwordHash.generate(req.body.promoter_signup.password)\r\n\r\n          promoterCreate.joindate = datetime\r\n          promoterCreate.password = pass\r\n          \r\n          promoter.promoters.findOne({email:req.body.promoter_signup.email}, function(err, promoters) {\r\n            if (err)  res.json({status:\"failure\",statusCode:100,msg:err});\r\n            \r\n            if(promoters){\r\n             \r\n              res.json({status:\"failure\",statusCode:100,msg:\"Email already exists!!\"});\r\n            }else{\r\n                promoter.promoters.findOne({name:req.body.promoter_signup.name}, function(err, promoters) {\r\n                if (err)  res.json({status:\"failure\",statusCode:100,msg:err});\r\n            \r\n                if(promoters){\r\n                  \r\n                  res.json({status:\"failure\",statusCode:100,msg:\"Username already exists!!\"});\r\n                }\r\n                else{\r\n                    promoterCreate.save(function (err, promoter) {\r\n                    if (err) res.json({status:\"failure\",statusCode:100,msg:err});\r\n                \r\n                    res.json({status:\"success\",statusCode:200,data:promoter,msg:\"Signup & SignIn successfully!\"});\r\n                  });\r\n                }\r\n              })\r\n            }\r\n          }); \r\n          \r\n        });\r\n\r\n    router.post('/singlePromoter', function(req, res) {\r\n      promoter.promoters.find({_id:req.body.id}, function(err, promoter_data) {\r\n        if (err)  res.json({status:\"failure\",statusCode:100,error:err});\r\n        res.json({status:\"success\",statusCode:200,data:promoter_data});\r\n      });\r\n    });\r\n\r\n    router.post('/send_request_quotes',function(req , res){\r\n\r\n      \r\n      let html_content  = req.body.description;\r\n      let subject       = \"Request Quotes\";\r\n      let to_email      = req.body.email.trim();\r\n      \r\n      var a =  sendEmail(to_email , subject,html_content)\r\n        a.then((result) => { \r\n\r\n          if(result){\r\n          \r\n            res.json({status:\"success\",statusCode:100,message:'Email sent successfully...'});\r\n          } else {\r\n\r\n            res.json({status:\"failure\",statusCode:200,message:\"There was some error in youyr request!!!\",data:''});\r\n          }\r\n\r\n        }).catch((err) => {\r\n          \r\n          res.json({status:\"failure\",statusCode:200,message:\"Could Not Send Email!!!\",data:err});\r\n        });\r\n\r\n     \r\n    });\r\n\r\n    module.exports = router;"
      ]
    },
    "sourceType": "module",
    "mtime": 1615198122129
  },
  "{\"sourceRoot\":\"E:\\\\boomadvertisement\\\\serverapi\\\\models\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"E:\\\\boomadvertisement\\\\serverapi\",\"filename\":\"E:\\\\boomadvertisement\\\\serverapi\\\\models\\\\promoters.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"E:\\\\boomadvertisement\\\\serverapi\",\"plugins\":[],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "E:\\boomadvertisement\\serverapi\\models\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "E:\\boomadvertisement\\serverapi",
      "filename": "E:\\boomadvertisement\\serverapi\\models\\promoters.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "E:\\boomadvertisement\\serverapi",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "E:\\boomadvertisement\\serverapi\\models\\promoters.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "E:\\boomadvertisement\\serverapi\\models\\promoters.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "E:\\boomadvertisement\\serverapi\\models\\",
        "sourceFileName": "promoters.js"
      }
    },
    "ast": null,
    "code": "var mongoose = require('mongoose');\n\nconst Schema = mongoose.Schema;\nconst promotersSchema = new Schema({\n  id: Boolean,\n  // String is shorthand for {type: String}\n  name: String,\n  email: String,\n  password: String,\n  joindate: Date\n});\nconst promoters = mongoose.model('promoters', promotersSchema);\nmodule.exports = {\n  promoters,\n  promotersSchema\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb21vdGVycy5qcyJdLCJuYW1lcyI6WyJtb25nb29zZSIsInJlcXVpcmUiLCJTY2hlbWEiLCJwcm9tb3RlcnNTY2hlbWEiLCJpZCIsIkJvb2xlYW4iLCJuYW1lIiwiU3RyaW5nIiwiZW1haWwiLCJwYXNzd29yZCIsImpvaW5kYXRlIiwiRGF0ZSIsInByb21vdGVycyIsIm1vZGVsIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsSUFBSUEsUUFBUSxHQUFHQyxPQUFPLENBQUMsVUFBRCxDQUF0Qjs7QUFDQSxNQUFNQyxNQUFNLEdBQUdGLFFBQVEsQ0FBQ0UsTUFBeEI7QUFFQSxNQUFNQyxlQUFlLEdBQUcsSUFBSUQsTUFBSixDQUFXO0FBQ2pDRSxFQUFBQSxFQUFFLEVBQUdDLE9BRDRCO0FBQ25CO0FBQ2RDLEVBQUFBLElBQUksRUFBRUMsTUFGMkI7QUFHakNDLEVBQUFBLEtBQUssRUFBSUQsTUFId0I7QUFJakNFLEVBQUFBLFFBQVEsRUFBSUYsTUFKcUI7QUFLakNHLEVBQUFBLFFBQVEsRUFBSUM7QUFMcUIsQ0FBWCxDQUF4QjtBQU9BLE1BQU9DLFNBQVMsR0FBR1osUUFBUSxDQUFDYSxLQUFULENBQWUsV0FBZixFQUE0QlYsZUFBNUIsQ0FBbkI7QUFDQVcsTUFBTSxDQUFDQyxPQUFQLEdBQWlCO0FBQUVILEVBQUFBLFNBQUY7QUFBWVQsRUFBQUE7QUFBWixDQUFqQiIsInNvdXJjZVJvb3QiOiJFOlxcYm9vbWFkdmVydGlzZW1lbnRcXHNlcnZlcmFwaVxcbW9kZWxzXFwiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgbW9uZ29vc2UgPSByZXF1aXJlKCdtb25nb29zZScpO1xyXG5jb25zdCBTY2hlbWEgPSBtb25nb29zZS5TY2hlbWE7XHJcblxyXG5jb25zdCBwcm9tb3RlcnNTY2hlbWEgPSBuZXcgU2NoZW1hKHtcclxuICBpZDogIEJvb2xlYW4sIC8vIFN0cmluZyBpcyBzaG9ydGhhbmQgZm9yIHt0eXBlOiBTdHJpbmd9XHJcbiAgbmFtZTogU3RyaW5nLFxyXG4gIGVtYWlsOiAgIFN0cmluZyxcclxuICBwYXNzd29yZDogICBTdHJpbmcsXHJcbiAgam9pbmRhdGU6ICAgRGF0ZVxyXG59KTtcclxuY29uc3QgIHByb21vdGVycyA9IG1vbmdvb3NlLm1vZGVsKCdwcm9tb3RlcnMnLCBwcm9tb3RlcnNTY2hlbWEpO1xyXG5tb2R1bGUuZXhwb3J0cyA9IHsgcHJvbW90ZXJzLHByb21vdGVyc1NjaGVtYSB9IDsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "promoters.js"
      ],
      "names": [
        "mongoose",
        "require",
        "Schema",
        "promotersSchema",
        "id",
        "Boolean",
        "name",
        "String",
        "email",
        "password",
        "joindate",
        "Date",
        "promoters",
        "model",
        "module",
        "exports"
      ],
      "mappings": "AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAtB;;AACA,MAAMC,MAAM,GAAGF,QAAQ,CAACE,MAAxB;AAEA,MAAMC,eAAe,GAAG,IAAID,MAAJ,CAAW;AACjCE,EAAAA,EAAE,EAAGC,OAD4B;AACnB;AACdC,EAAAA,IAAI,EAAEC,MAF2B;AAGjCC,EAAAA,KAAK,EAAID,MAHwB;AAIjCE,EAAAA,QAAQ,EAAIF,MAJqB;AAKjCG,EAAAA,QAAQ,EAAIC;AALqB,CAAX,CAAxB;AAOA,MAAOC,SAAS,GAAGZ,QAAQ,CAACa,KAAT,CAAe,WAAf,EAA4BV,eAA5B,CAAnB;AACAW,MAAM,CAACC,OAAP,GAAiB;AAAEH,EAAAA,SAAF;AAAYT,EAAAA;AAAZ,CAAjB",
      "sourceRoot": "E:\\boomadvertisement\\serverapi\\models\\",
      "sourcesContent": [
        "var mongoose = require('mongoose');\r\nconst Schema = mongoose.Schema;\r\n\r\nconst promotersSchema = new Schema({\r\n  id:  Boolean, // String is shorthand for {type: String}\r\n  name: String,\r\n  email:   String,\r\n  password:   String,\r\n  joindate:   Date\r\n});\r\nconst  promoters = mongoose.model('promoters', promotersSchema);\r\nmodule.exports = { promoters,promotersSchema } ;"
      ]
    },
    "sourceType": "module",
    "mtime": 1608315962000
  },
  "{\"sourceRoot\":\"E:\\\\boomadvertisement\\\\serverapi\\\\routes\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"E:\\\\boomadvertisement\\\\serverapi\",\"filename\":\"E:\\\\boomadvertisement\\\\serverapi\\\\routes\\\\workers.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"E:\\\\boomadvertisement\\\\serverapi\",\"plugins\":[],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "E:\\boomadvertisement\\serverapi\\routes\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "E:\\boomadvertisement\\serverapi",
      "filename": "E:\\boomadvertisement\\serverapi\\routes\\workers.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "E:\\boomadvertisement\\serverapi",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "E:\\boomadvertisement\\serverapi\\routes\\workers.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "E:\\boomadvertisement\\serverapi\\routes\\workers.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "E:\\boomadvertisement\\serverapi\\routes\\",
        "sourceFileName": "workers.js"
      }
    },
    "ast": null,
    "code": "var express = require('express');\n\nvar router = express.Router();\n\nvar mongoose = require('mongoose');\n\nconst worker = require('../models/workers');\n\nconst email = require('../config/email');\n\nconst nodemailer = require('nodemailer');\n\nvar passwordHash = require('password-hash'); //process.env.NODE_TLS_REJECT_UNAUTHORIZED = \"1\";\n\n\nvar sendEmail = function (to, subject, html) {\n  return new Promise(function (resolve, reject) {\n    var transporter = nodemailer.createTransport({\n      service: 'gmail',\n      port: 465,\n      auth: {\n        user: email.email,\n        pass: email.password\n      },\n      tls: {\n        // do not fail on invalid certs\n        rejectUnauthorized: false\n      }\n    });\n    var mailOptions = {\n      from: 'faanmanagement@gmail.com  <http://boomadvertise.com/>',\n      to: to,\n      subject: subject,\n      html: html\n    };\n    transporter.sendMail(mailOptions, function (error, info) {\n      if (error) {\n        reject(error);\n      } else {\n        resolve(1);\n      }\n    });\n  });\n};\n\nrouter.post('/register', function (req, res) {\n  var coupon_code = Math.random().toString(36).slice(2);\n  var workerCreate = new worker.workers(req.body.worker_signup);\n  var datetime = new Date();\n  let pass = passwordHash.generate(req.body.worker_signup.password);\n  workerCreate.joindate = datetime;\n  workerCreate.password = pass;\n  workerCreate.coupon_code = coupon_code;\n  worker.workers.findOne({\n    email: req.body.worker_signup.email\n  }, function (err, workers) {\n    if (err) res.json({\n      status: \"failure\",\n      statusCode: 100,\n      msg: err\n    });\n\n    if (workers) {\n      res.json({\n        status: \"failure\",\n        statusCode: 100,\n        msg: \"Email already exists!!\"\n      });\n    } else {\n      worker.workers.findOne({\n        name: req.body.worker_signup.name\n      }, function (err, workers) {\n        if (err) res.json({\n          status: \"failure\",\n          statusCode: 100,\n          msg: err\n        });\n\n        if (workers) {\n          res.json({\n            status: \"failure\",\n            statusCode: 100,\n            msg: \"Username already exists!!\"\n          });\n        } else {\n          workerCreate.save(function (err, worker) {\n            sendEmail('vsingh@codenomad.net', \"my subject\", \"Your login account!\", \"You have been added as a Worker on <b>http://boomadvertise.com/</b><br> Here are your login credentials along with other details. <br> Username: \" + req.body.worker_signup.name + \"<br> Email: \" + req.body.worker_signup.email + \"<br> Password: \" + req.body.worker_signup.password + \" Promo code: fjhdgggdffg <br> Sharaeble Urls with others : http://boomadvertise.com/\" + worker['_id']);\n            if (err) res.json({\n              status: \"failure\",\n              statusCode: 100,\n              msg: error\n            });\n            res.json({\n              status: \"success\",\n              statusCode: 200,\n              data: worker,\n              msg: \"Worker added successfully and an email has been sent to the worker.\"\n            });\n          });\n        }\n      });\n    }\n  });\n});\nrouter.post('/email', function (req, res) {\n  /******Send email***** */\n  var a = sendEmail('vsingh@codenomad.net', \"Your login account!\", 'You have been added as a Worker on <b>http://boomadvertise.com/</b><br> Here are your login credentials along with other details. <br> Promo code: fjhdgggdffg <br> Sharaeble Urls with others : http://boomadvertise.com/');\n  a.then(result => {\n    if (result) {\n      res.json({\n        status: \"success\",\n        statusCode: 200,\n        data: 'hii sent email...'\n      });\n    } else {\n      res.json({\n        status: \"failure\",\n        statusCode: 100,\n        message: \"There was some error in youyr request!!!\",\n        data: []\n      });\n    }\n  }).catch(err => {\n    res.json({\n      status: \"failure\",\n      statusCode: 100,\n      message: \"Could Not Send Email!!!\",\n      data: err\n    });\n  });\n  /******Send email end***** */\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "workers.js"
      ],
      "names": [
        "express",
        "require",
        "router",
        "Router",
        "mongoose",
        "worker",
        "email",
        "nodemailer",
        "passwordHash",
        "sendEmail",
        "to",
        "subject",
        "html",
        "Promise",
        "resolve",
        "reject",
        "transporter",
        "createTransport",
        "service",
        "port",
        "auth",
        "user",
        "pass",
        "password",
        "tls",
        "rejectUnauthorized",
        "mailOptions",
        "from",
        "sendMail",
        "error",
        "info",
        "post",
        "req",
        "res",
        "coupon_code",
        "Math",
        "random",
        "toString",
        "slice",
        "workerCreate",
        "workers",
        "body",
        "worker_signup",
        "datetime",
        "Date",
        "generate",
        "joindate",
        "findOne",
        "err",
        "json",
        "status",
        "statusCode",
        "msg",
        "name",
        "save",
        "data",
        "a",
        "then",
        "result",
        "message",
        "catch",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "E:\\boomadvertisement\\serverapi\\routes\\",
      "sourcesContent": [
        "\r\nvar express = require('express');\r\nvar router = express.Router();\r\nvar mongoose = require('mongoose');\r\nconst worker = require('../models/workers');\r\nconst email = require('../config/email');\r\nconst nodemailer = require('nodemailer');\r\nvar passwordHash = require('password-hash');\r\n\r\n//process.env.NODE_TLS_REJECT_UNAUTHORIZED = \"1\";\r\n\r\nvar sendEmail = function(to,subject,html) {\r\n  return new Promise(function(resolve, reject) {\r\n    var transporter = nodemailer.createTransport({\r\n        \r\n      service: 'gmail', \r\n      port:465,\r\n      auth: { \r\n        user: email.email,\r\n        pass: email.password\r\n      } ,\r\n      tls: {\r\n        // do not fail on invalid certs\r\n        rejectUnauthorized: false\r\n      }\r\n    });\r\n  \r\n  var mailOptions = {\r\n    from: 'faanmanagement@gmail.com  <http://boomadvertise.com/>',\r\n    to: to,\r\n    subject: subject,\r\n    html: html\r\n  };\r\n\r\n    transporter.sendMail(mailOptions, function(error, info){\r\n    if (error) {\r\n      reject(error);\r\n    } else {\r\n     resolve(1)\r\n    }\r\n  });\r\n\r\n  \r\n});\r\n\r\n}\r\n\r\n\r\nrouter.post('/register', function(req,res) {\r\n  var coupon_code  = Math.random().toString(36).slice(2)\r\n\r\n      var workerCreate =  new worker.workers(req.body.worker_signup);\r\n\r\n      var datetime = new Date();\r\n      let pass = passwordHash.generate(req.body.worker_signup.password)\r\n\r\n      workerCreate.joindate = datetime\r\n      workerCreate.password = pass\r\n      workerCreate.coupon_code = coupon_code\r\n      \r\n      worker.workers.findOne({email:req.body.worker_signup.email}, function(err, workers) {\r\n        if (err)  res.json({status:\"failure\",statusCode:100,msg:err});\r\n        \r\n        if(workers){\r\n          res.json({status:\"failure\",statusCode:100,msg:\"Email already exists!!\"});\r\n        }else{\r\n            worker.workers.findOne({name:req.body.worker_signup.name}, function(err, workers) {\r\n            if (err)  res.json({status:\"failure\",statusCode:100,msg:err});\r\n        \r\n            if(workers){\r\n              \r\n              res.json({status:\"failure\",statusCode:100,msg:\"Username already exists!!\"});\r\n            }\r\n            else{\r\n                workerCreate.save(function (err, worker) {\r\n                  sendEmail('vsingh@codenomad.net',\"my subject\",\r\n                     \"Your login account!\",\"You have been added as a Worker on <b>http://boomadvertise.com/</b><br> Here are your login credentials along with other details. <br> Username: \" + req.body.worker_signup.name + \"<br> Email: \" +req.body.worker_signup.email +\"<br> Password: \" + req.body.worker_signup.password +\" Promo code: fjhdgggdffg <br> Sharaeble Urls with others : http://boomadvertise.com/\"+worker['_id']);\r\n                  if (err) res.json({status:\"failure\",statusCode:100,msg:error});\r\n                  res.json({status:\"success\",statusCode:200,data:worker,msg:\"Worker added successfully and an email has been sent to the worker.\"});\r\n                \r\n              });\r\n            }\r\n          })\r\n        }\r\n      }); \r\n      \r\n    });\r\n\r\n    \r\n    router.post('/email', function(req,res) { \r\n      /******Send email***** */\r\n     \r\n      \r\n      var a =  sendEmail('vsingh@codenomad.net',\r\n        \"Your login account!\",\r\n        'You have been added as a Worker on <b>http://boomadvertise.com/</b><br> Here are your login credentials along with other details. <br> Promo code: fjhdgggdffg <br> Sharaeble Urls with others : http://boomadvertise.com/')\r\n        a.then((result) => { \r\n       if(result){\r\n        res.json({status:\"success\",statusCode:200,data:'hii sent email...'});\r\n       }\r\n       else{\r\n        res.json({status:\"failure\",statusCode:100,message:\"There was some error in youyr request!!!\",data:[]});\r\n       }\r\n        }).catch((err) => {\r\n          res.json({status:\"failure\",statusCode:100,message:\"Could Not Send Email!!!\",data:err});\r\n        });\r\n     /******Send email end***** */\r\n      });\r\n\r\n\r\n\r\n\r\n    \r\n    \r\n    module.exports = router;\r\n\r\n\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1614846629700
  },
  "{\"sourceRoot\":\"E:\\\\boomadvertisement\\\\serverapi\\\\models\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"E:\\\\boomadvertisement\\\\serverapi\",\"filename\":\"E:\\\\boomadvertisement\\\\serverapi\\\\models\\\\workers.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"E:\\\\boomadvertisement\\\\serverapi\",\"plugins\":[],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "E:\\boomadvertisement\\serverapi\\models\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "E:\\boomadvertisement\\serverapi",
      "filename": "E:\\boomadvertisement\\serverapi\\models\\workers.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "E:\\boomadvertisement\\serverapi",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "E:\\boomadvertisement\\serverapi\\models\\workers.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "E:\\boomadvertisement\\serverapi\\models\\workers.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "E:\\boomadvertisement\\serverapi\\models\\",
        "sourceFileName": "workers.js"
      }
    },
    "ast": null,
    "code": "var mongoose = require('mongoose');\n\nconst Schema = mongoose.Schema;\nconst workersSchema = new Schema({\n  id: Boolean,\n  // String is shorthand for {type: String}\n  name: String,\n  email: String,\n  password: String,\n  coupon_code: String,\n  joindate: Date\n});\nconst workers = mongoose.model('workers', workersSchema);\nmodule.exports = {\n  workers,\n  workersSchema\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndvcmtlcnMuanMiXSwibmFtZXMiOlsibW9uZ29vc2UiLCJyZXF1aXJlIiwiU2NoZW1hIiwid29ya2Vyc1NjaGVtYSIsImlkIiwiQm9vbGVhbiIsIm5hbWUiLCJTdHJpbmciLCJlbWFpbCIsInBhc3N3b3JkIiwiY291cG9uX2NvZGUiLCJqb2luZGF0ZSIsIkRhdGUiLCJ3b3JrZXJzIiwibW9kZWwiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQSxJQUFJQSxRQUFRLEdBQUdDLE9BQU8sQ0FBQyxVQUFELENBQXRCOztBQUNBLE1BQU1DLE1BQU0sR0FBR0YsUUFBUSxDQUFDRSxNQUF4QjtBQUVBLE1BQU1DLGFBQWEsR0FBRyxJQUFJRCxNQUFKLENBQVc7QUFDL0JFLEVBQUFBLEVBQUUsRUFBR0MsT0FEMEI7QUFDakI7QUFDZEMsRUFBQUEsSUFBSSxFQUFFQyxNQUZ5QjtBQUcvQkMsRUFBQUEsS0FBSyxFQUFJRCxNQUhzQjtBQUkvQkUsRUFBQUEsUUFBUSxFQUFJRixNQUptQjtBQUsvQkcsRUFBQUEsV0FBVyxFQUFJSCxNQUxnQjtBQU0vQkksRUFBQUEsUUFBUSxFQUFJQztBQU5tQixDQUFYLENBQXRCO0FBUUEsTUFBTUMsT0FBTyxHQUFHYixRQUFRLENBQUNjLEtBQVQsQ0FBZSxTQUFmLEVBQTBCWCxhQUExQixDQUFoQjtBQUNBWSxNQUFNLENBQUNDLE9BQVAsR0FBaUI7QUFBRUgsRUFBQUEsT0FBRjtBQUFVVixFQUFBQTtBQUFWLENBQWpCIiwic291cmNlUm9vdCI6IkU6XFxib29tYWR2ZXJ0aXNlbWVudFxcc2VydmVyYXBpXFxtb2RlbHNcXCIsInNvdXJjZXNDb250ZW50IjpbInZhciBtb25nb29zZSA9IHJlcXVpcmUoJ21vbmdvb3NlJyk7XHJcbmNvbnN0IFNjaGVtYSA9IG1vbmdvb3NlLlNjaGVtYTtcclxuXHJcbmNvbnN0IHdvcmtlcnNTY2hlbWEgPSBuZXcgU2NoZW1hKHtcclxuICBpZDogIEJvb2xlYW4sIC8vIFN0cmluZyBpcyBzaG9ydGhhbmQgZm9yIHt0eXBlOiBTdHJpbmd9XHJcbiAgbmFtZTogU3RyaW5nLFxyXG4gIGVtYWlsOiAgIFN0cmluZyxcclxuICBwYXNzd29yZDogICBTdHJpbmcsXHJcbiAgY291cG9uX2NvZGU6ICAgU3RyaW5nLFxyXG4gIGpvaW5kYXRlOiAgIERhdGVcclxufSk7XHJcbmNvbnN0IHdvcmtlcnMgPSBtb25nb29zZS5tb2RlbCgnd29ya2VycycsIHdvcmtlcnNTY2hlbWEpO1xyXG5tb2R1bGUuZXhwb3J0cyA9IHsgd29ya2Vycyx3b3JrZXJzU2NoZW1hIH0gOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "workers.js"
      ],
      "names": [
        "mongoose",
        "require",
        "Schema",
        "workersSchema",
        "id",
        "Boolean",
        "name",
        "String",
        "email",
        "password",
        "coupon_code",
        "joindate",
        "Date",
        "workers",
        "model",
        "module",
        "exports"
      ],
      "mappings": "AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAtB;;AACA,MAAMC,MAAM,GAAGF,QAAQ,CAACE,MAAxB;AAEA,MAAMC,aAAa,GAAG,IAAID,MAAJ,CAAW;AAC/BE,EAAAA,EAAE,EAAGC,OAD0B;AACjB;AACdC,EAAAA,IAAI,EAAEC,MAFyB;AAG/BC,EAAAA,KAAK,EAAID,MAHsB;AAI/BE,EAAAA,QAAQ,EAAIF,MAJmB;AAK/BG,EAAAA,WAAW,EAAIH,MALgB;AAM/BI,EAAAA,QAAQ,EAAIC;AANmB,CAAX,CAAtB;AAQA,MAAMC,OAAO,GAAGb,QAAQ,CAACc,KAAT,CAAe,SAAf,EAA0BX,aAA1B,CAAhB;AACAY,MAAM,CAACC,OAAP,GAAiB;AAAEH,EAAAA,OAAF;AAAUV,EAAAA;AAAV,CAAjB",
      "sourceRoot": "E:\\boomadvertisement\\serverapi\\models\\",
      "sourcesContent": [
        "var mongoose = require('mongoose');\r\nconst Schema = mongoose.Schema;\r\n\r\nconst workersSchema = new Schema({\r\n  id:  Boolean, // String is shorthand for {type: String}\r\n  name: String,\r\n  email:   String,\r\n  password:   String,\r\n  coupon_code:   String,\r\n  joindate:   Date\r\n});\r\nconst workers = mongoose.model('workers', workersSchema);\r\nmodule.exports = { workers,workersSchema } ;"
      ]
    },
    "sourceType": "module",
    "mtime": 1608803440000
  },
  "{\"sourceRoot\":\"E:\\\\boomadvertisement\\\\serverapi\\\\config\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"E:\\\\boomadvertisement\\\\serverapi\",\"filename\":\"E:\\\\boomadvertisement\\\\serverapi\\\\config\\\\email.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"E:\\\\boomadvertisement\\\\serverapi\",\"plugins\":[],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "E:\\boomadvertisement\\serverapi\\config\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "E:\\boomadvertisement\\serverapi",
      "filename": "E:\\boomadvertisement\\serverapi\\config\\email.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "E:\\boomadvertisement\\serverapi",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "E:\\boomadvertisement\\serverapi\\config\\email.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "E:\\boomadvertisement\\serverapi\\config\\email.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "E:\\boomadvertisement\\serverapi\\config\\",
        "sourceFileName": "email.js"
      }
    },
    "ast": null,
    "code": "var config = {}; // config.email = 'deligoch@gmail.com'\n// config.password= 'deey5old4rhus_GEEN'\n\nconfig.email = 'vsingh@codenomad.net';\nconfig.password = '1502252504';\nconfig.adminemail = 'deligoch@gmail.com';\nconfig.url = 'http://boomadvertise.com/';\nconfig.adminurl = 'http://boomadvertise.com/';\nmodule.exports = config; // MAIL_DRIVER=smtp\n// MAIL_HOST=email-smtp.ap-south-1.amazonaws.com\n// MAIL_PORT=587\n// MAIL_ENCRYPTION=tls\n// MAIL_USERNAME=AKIAREDTCB4G4N4SJUKF\n// MAIL_PASSWORD=BFz7nWPoZc0jAYpUr5FkCeZsYpVYyTwjnuILc0vE3EaP\n// host : smtp.gmail.com\n// email port :587\n// email : deligoch@gmail.com\n// MAIL_ENCRYPTION : tls\n// email_username : deligoch@gmail.com\n// email pass : ifwmxlltkurvvctb\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImVtYWlsLmpzIl0sIm5hbWVzIjpbImNvbmZpZyIsImVtYWlsIiwicGFzc3dvcmQiLCJhZG1pbmVtYWlsIiwidXJsIiwiYWRtaW51cmwiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQSxJQUFJQSxNQUFNLEdBQUcsRUFBYixDLENBR0E7QUFDQTs7QUFDQUEsTUFBTSxDQUFDQyxLQUFQLEdBQWUsc0JBQWY7QUFDQUQsTUFBTSxDQUFDRSxRQUFQLEdBQWlCLFlBQWpCO0FBRUFGLE1BQU0sQ0FBQ0csVUFBUCxHQUFrQixvQkFBbEI7QUFDQUgsTUFBTSxDQUFDSSxHQUFQLEdBQVcsMkJBQVg7QUFDQUosTUFBTSxDQUFDSyxRQUFQLEdBQWdCLDJCQUFoQjtBQUNBQyxNQUFNLENBQUNDLE9BQVAsR0FBaUJQLE1BQWpCLEMsQ0FHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiRTpcXGJvb21hZHZlcnRpc2VtZW50XFxzZXJ2ZXJhcGlcXGNvbmZpZ1xcIiwic291cmNlc0NvbnRlbnQiOlsidmFyIGNvbmZpZyA9IHt9O1xyXG5cclxuXHJcbi8vIGNvbmZpZy5lbWFpbCA9ICdkZWxpZ29jaEBnbWFpbC5jb20nXHJcbi8vIGNvbmZpZy5wYXNzd29yZD0gJ2RlZXk1b2xkNHJodXNfR0VFTidcclxuY29uZmlnLmVtYWlsID0gJ3ZzaW5naEBjb2Rlbm9tYWQubmV0J1xyXG5jb25maWcucGFzc3dvcmQ9ICcxNTAyMjUyNTA0J1xyXG5cclxuY29uZmlnLmFkbWluZW1haWw9J2RlbGlnb2NoQGdtYWlsLmNvbSdcclxuY29uZmlnLnVybD0naHR0cDovL2Jvb21hZHZlcnRpc2UuY29tLydcclxuY29uZmlnLmFkbWludXJsPSdodHRwOi8vYm9vbWFkdmVydGlzZS5jb20vJ1xyXG5tb2R1bGUuZXhwb3J0cyA9IGNvbmZpZztcclxuXHJcblxyXG4vLyBNQUlMX0RSSVZFUj1zbXRwXHJcbi8vIE1BSUxfSE9TVD1lbWFpbC1zbXRwLmFwLXNvdXRoLTEuYW1hem9uYXdzLmNvbVxyXG4vLyBNQUlMX1BPUlQ9NTg3XHJcbi8vIE1BSUxfRU5DUllQVElPTj10bHNcclxuLy8gTUFJTF9VU0VSTkFNRT1BS0lBUkVEVENCNEc0TjRTSlVLRlxyXG4vLyBNQUlMX1BBU1NXT1JEPUJGejduV1BvWmMwakFZcFVyNUZrQ2Vac1lwVll5VHdqbnVJTGMwdkUzRWFQXHJcbi8vIGhvc3QgOiBzbXRwLmdtYWlsLmNvbVxyXG4vLyBlbWFpbCBwb3J0IDo1ODdcclxuLy8gZW1haWwgOiBkZWxpZ29jaEBnbWFpbC5jb21cclxuLy8gTUFJTF9FTkNSWVBUSU9OIDogdGxzXHJcbi8vIGVtYWlsX3VzZXJuYW1lIDogZGVsaWdvY2hAZ21haWwuY29tXHJcbi8vIGVtYWlsIHBhc3MgOiBpZndteGxsdGt1cnZ2Y3RiXHJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "email.js"
      ],
      "names": [
        "config",
        "email",
        "password",
        "adminemail",
        "url",
        "adminurl",
        "module",
        "exports"
      ],
      "mappings": "AAAA,IAAIA,MAAM,GAAG,EAAb,C,CAGA;AACA;;AACAA,MAAM,CAACC,KAAP,GAAe,sBAAf;AACAD,MAAM,CAACE,QAAP,GAAiB,YAAjB;AAEAF,MAAM,CAACG,UAAP,GAAkB,oBAAlB;AACAH,MAAM,CAACI,GAAP,GAAW,2BAAX;AACAJ,MAAM,CAACK,QAAP,GAAgB,2BAAhB;AACAC,MAAM,CAACC,OAAP,GAAiBP,MAAjB,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA",
      "sourceRoot": "E:\\boomadvertisement\\serverapi\\config\\",
      "sourcesContent": [
        "var config = {};\r\n\r\n\r\n// config.email = 'deligoch@gmail.com'\r\n// config.password= 'deey5old4rhus_GEEN'\r\nconfig.email = 'vsingh@codenomad.net'\r\nconfig.password= '1502252504'\r\n\r\nconfig.adminemail='deligoch@gmail.com'\r\nconfig.url='http://boomadvertise.com/'\r\nconfig.adminurl='http://boomadvertise.com/'\r\nmodule.exports = config;\r\n\r\n\r\n// MAIL_DRIVER=smtp\r\n// MAIL_HOST=email-smtp.ap-south-1.amazonaws.com\r\n// MAIL_PORT=587\r\n// MAIL_ENCRYPTION=tls\r\n// MAIL_USERNAME=AKIAREDTCB4G4N4SJUKF\r\n// MAIL_PASSWORD=BFz7nWPoZc0jAYpUr5FkCeZsYpVYyTwjnuILc0vE3EaP\r\n// host : smtp.gmail.com\r\n// email port :587\r\n// email : deligoch@gmail.com\r\n// MAIL_ENCRYPTION : tls\r\n// email_username : deligoch@gmail.com\r\n// email pass : ifwmxlltkurvvctb\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1614753437810
  },
  "{\"sourceRoot\":\"E:\\\\boomadvertisement\\\\serverapi\\\\routes\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"E:\\\\boomadvertisement\\\\serverapi\",\"filename\":\"E:\\\\boomadvertisement\\\\serverapi\\\\routes\\\\influencers.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"E:\\\\boomadvertisement\\\\serverapi\",\"plugins\":[],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "E:\\boomadvertisement\\serverapi\\routes\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "E:\\boomadvertisement\\serverapi",
      "filename": "E:\\boomadvertisement\\serverapi\\routes\\influencers.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "E:\\boomadvertisement\\serverapi",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "E:\\boomadvertisement\\serverapi\\routes\\influencers.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "E:\\boomadvertisement\\serverapi\\routes\\influencers.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "E:\\boomadvertisement\\serverapi\\routes\\",
        "sourceFileName": "influencers.js"
      }
    },
    "ast": null,
    "code": "var express = require('express');\n\nvar router = express.Router();\n\nvar mongoose = require('mongoose');\n\nconst influencer = require('../models/influencers');\n\nconst influencers_data = require('../models/influencers_data');\n\nconst influencer_posts = require('../models/influencers_posts'); //const email = require('../config/email');\n//const nodemailer = require('nodemailer');\n\n\nvar passwordHash = require('password-hash');\n\nconst {\n  ObjectId\n} = require('mongodb');\n\nconst multer = require('multer');\n\nvar fileExtension = require('file-extension');\n\nvar fs = require('fs');\n\nconst path = require('path'); //process.env.NODE_TLS_REJECT_UNAUTHORIZED = \"1\";\n\n\nvar storage = multer.diskStorage({\n  // Setting directory on disk to save uploaded files\n  destination: function (req, file, cb) {\n    //cb(null, './uploads')\n    cb(null, path.join(__dirname, '../uploads'));\n  },\n  // Setting name of file saved\n  filename: function (req, file, cb) {\n    cb(null, file.fieldname + '-' + Date.now() + '.' + fileExtension(file.originalname));\n  }\n});\nvar upload = multer({\n  storage: storage,\n  limits: {\n    fileSize: 200000000 // Setting Image Size Limit to 2MBs\n\n  },\n\n  fileFilter(req, file, cb) {\n    // if (!file.originalname.match(/\\.(jpg|jpeg|png)$/)) {\n    //     //Error \n    //     cb(new Error('Please upload JPG and PNG images only!'))\n    // }\n    //Success \n    cb(undefined, true);\n  }\n\n});\nrouter.post('/register', async function (req, res) {\n  var influencerCreate = new influencer.influencers(req.body.influencer_signup);\n  var influencerData = new influencers_data.influencers_data(req.body.influencer_signup);\n  var datetime = new Date();\n  let pass = passwordHash.generate(req.body.influencer_signup.password);\n  influencerCreate.joindate = datetime;\n  influencerCreate.password = pass;\n  influencerCreate.tiktok = req.body.influencer_signup.tiktok;\n  influencerCreate.instagram = req.body.influencer_signup.insta;\n  influencerCreate.facebook = req.body.influencer_signup.fb;\n  influencerCreate.twitter = req.body.influencer_signup.twitter;\n  influencerData.twitterfollowers = req.body.influencer_signup.twitter_followers;\n  influencerData.tiktokfollowers = req.body.influencer_signup.tiktok_followers;\n  influencerData.facebookfollowers = req.body.influencer_signup.fb_followers;\n  influencerData.instagramfollowers = req.body.influencer_signup.insta_followers;\n  influencer.influencers.findOne({\n    email: req.body.influencer_signup.email\n  }, function (err, influencers) {\n    if (err) res.json({\n      status: \"failure\",\n      statusCode: 100,\n      msg: err\n    });\n\n    if (influencers) {\n      res.json({\n        status: \"failure\",\n        statusCode: 100,\n        msg: \"Email already exists!!\"\n      });\n    } else {\n      influencer.influencers.findOne({\n        name: req.body.influencer_signup.name\n      }, function (err, influencers) {\n        if (err) res.json({\n          status: \"failure\",\n          statusCode: 100,\n          msg: err\n        });\n\n        if (influencers) {\n          res.json({\n            status: \"failure\",\n            statusCode: 100,\n            msg: \"Username already exists!!\"\n          });\n        } else {\n          influencerCreate.save(function (err, influencer_res) {\n            influencerData.influencerid = influencer_res['_id'];\n            influencerData.influencermatchid = influencer_res['_id'];\n            influencerData.save(function (err1, influ_data_res) {\n              if (err || err1) res.json({\n                status: \"failure\",\n                statusCode: 100,\n                msg: err\n              });\n              res.json({\n                status: \"success\",\n                statusCode: 200,\n                data: influencer_res,\n                msg: \"Signup & SignIn successfully!\"\n              });\n            });\n          });\n        }\n      });\n    }\n  });\n});\nrouter.get('/test', function (req, res) {\n  res.json(\"it worked vijay\");\n});\nrouter.get('/getInfluencers', function (req, res, next) {\n  influencers_data.influencers_data.aggregate([{\n    \"$lookup\": {\n      \"from\": \"influencers\",\n      \"localField\": \"influencerid\",\n      \"foreignField\": \"_id\",\n      \"as\": \"vals\"\n    }\n  }], function (err, res_data) {\n    if (err) res.json({\n      status: \"failure\",\n      statusCode: 100,\n      error: err\n    });\n\n    for (var i = 0; i < res_data.length; i++) {\n      res_data[i].tiktok_story_price = res_data[i].tiktok_story_price ? res_data[i].tiktok_story_price : 0;\n      res_data[i].tiktok_post_price = res_data[i].tiktok_post_price ? res_data[i].tiktok_post_price : 0;\n      res_data[i].twitter_tweet_price = res_data[i].twitter_tweet_price ? res_data[i].twitter_tweet_price : 0;\n      res_data[i].twitter_retweet_price = res_data[i].twitter_retweet_price ? res_data[i].twitter_retweet_price : 0;\n      res_data[i].twitter_like_price = res_data[i].twitter_like_price ? res_data[i].twitter_like_price : 0;\n      res_data[i].twitter_follow_price = res_data[i].twitter_follow_price ? res_data[i].twitter_follow_price : 0;\n      res_data[i].twitter_comment_price = res_data[i].twitter_comment_price ? res_data[i].twitter_comment_price : 0;\n      res_data[i].instagram_post_price = res_data[i].instagram_post_price ? res_data[i].instagram_post_price : 0;\n      res_data[i].instagram_story_price = res_data[i].instagram_story_price ? res_data[i].instagram_story_price : 0;\n      res_data[i].instagram_comment_price = res_data[i].instagram_comment_price ? res_data[i].instagram_comment_price : 0;\n      res_data[i].instagram_follow_price = res_data[i].instagram_follow_price ? res_data[i].instagram_follow_price : 0;\n      res_data[i].instagram_like_price = res_data[i].instagram_like_price ? res_data[i].instagram_like_price : 0;\n      res_data[i].facebook_post_price = res_data[i].facebook_post_price ? res_data[i].facebook_post_price : 0;\n      res_data[i].facebook_like_price = res_data[i].facebook_like_price ? res_data[i].facebook_like_price : 0;\n      res_data[i].facebook_friend_price = res_data[i].facebook_friend_price ? res_data[i].facebook_friend_price : 0;\n      res_data[i].facebook_comment_price = res_data[i].facebook_comment_price ? res_data[i].facebook_comment_price : 0;\n    }\n\n    res.json({\n      status: \"success\",\n      statusCode: 200,\n      data: res_data\n    });\n  });\n});\n/**** Trying to get all influencers data as first table influencers ***/\n\nrouter.get('/getInfluencers1', function (req, res, next) {\n  influencer.influencers.aggregate([{\n    \"$lookup\": {\n      \"from\": \"influencers_data\",\n      \"localField\": \"_id\",\n      \"foreignField\": \"influencerid\",\n      \"as\": \"vals\"\n    }\n  }], function (err, res_data) {\n    if (err) res.json({\n      status: \"failure\",\n      statusCode: 100,\n      error: err\n    });\n    res.json({\n      status: \"success\",\n      statusCode: 200,\n      data: res_data\n    });\n  });\n});\nrouter.get('/singleInfluencer', function (req, res) {\n  var user_id = req.query.user_id;\n  influencers_data.influencers_data.aggregate([{\n    \"$lookup\": {\n      \"from\": \"influencers\",\n      \"localField\": \"influencerid\",\n      \"foreignField\": \"_id\",\n      \"as\": \"vals\"\n    }\n  }, {\n    \"$match\": {\n      \"influencermatchid\": user_id\n    }\n  }], function (err, influencer_data) {\n    if (err) res.json({\n      status: \"failure\",\n      statusCode: 100,\n      error: err\n    });\n    var return_data = {\n      price_data: {\n        tiktok: {\n          post_price: 0,\n          story_price: 0\n        },\n        instagram: {\n          post_price: 0,\n          story_price: 0,\n          comment_price: 10,\n          like_price: 20,\n          follow_price: 30\n        },\n        facebook: {\n          post_price: 0,\n          friend_price: 40,\n          comment_price: 50,\n          like_price: 60\n        },\n        twitter: {\n          tweet_price: 70,\n          retweet_price: 80,\n          comment_price: 90,\n          like_price: 70,\n          follow_price: 80\n        }\n      },\n      profile_data: \"\",\n      followers: 0,\n      posts: []\n    };\n\n    if (influencer_data[0]) {\n      return_data.price_data.tiktok.post_price = influencer_data[0].tiktok_post_price ? influencer_data[0].tiktok_post_price : 0;\n      return_data.price_data.tiktok.story_price = influencer_data[0].tiktok_story_price ? influencer_data[0].tiktok_story_price : 0;\n      return_data.price_data.facebook.post_price = influencer_data[0].facebook_post_price ? influencer_data[0].facebook_post_price : 0;\n      return_data.price_data.facebook.friend_price = influencer_data[0].facebook_friend_price ? influencer_data[0].facebook_friend_price : 0;\n      return_data.price_data.facebook.comment_price = influencer_data[0].facebook_comment_price ? influencer_data[0].facebook_comment_price : 0;\n      return_data.price_data.facebook.like_price = influencer_data[0].facebook_like_price ? influencer_data[0].facebook_like_price : 0;\n      return_data.price_data.instagram.post_price = influencer_data[0].instagram_post_price ? influencer_data[0].instagram_post_price : 0;\n      return_data.price_data.instagram.story_price = influencer_data[0].instagram_story_price ? influencer_data[0].instagram_story_price : 0;\n      return_data.price_data.instagram.comment_price = influencer_data[0].instagram_comment_price ? influencer_data[0].instagram_comment_price : 0;\n      return_data.price_data.instagram.like_price = influencer_data[0].instagram_follow_price ? influencer_data[0].instagram_follow_price : 0;\n      return_data.price_data.instagram.follow_price = influencer_data[0].instagram_like_price ? influencer_data[0].instagram_like_price : 0;\n      return_data.price_data.twitter.tweet_price = influencer_data[0].twitter_tweet_price ? influencer_data[0].twitter_tweet_price : 0;\n      return_data.price_data.twitter.retweet_price = influencer_data[0].twitter_retweet_price ? influencer_data[0].twitter_retweet_price : 0;\n      return_data.price_data.twitter.comment_price = influencer_data[0].twitter_comment_price ? influencer_data[0].twitter_comment_price : 0;\n      return_data.price_data.twitter.like_price = influencer_data[0].twitter_like_price ? influencer_data[0].twitter_like_price : 0;\n      return_data.price_data.twitter.follow_price = influencer_data[0].twitter_follow_price ? influencer_data[0].twitter_follow_price : 0;\n      return_data.followers = influencer_data[0] ? influencer_data[0] : 0;\n      return_data.profile_data = influencer_data[0].vals ? influencer_data[0].vals[0] : \"\";\n    }\n\n    influencer.influencers.findOne({\n      _id: user_id\n    }, function (err, profile_data) {\n      if (err) res.json({\n        status: \"failure\",\n        statusCode: 100,\n        msg: err\n      });\n\n      if (profile_data) {\n        profile_data.profile_picture = profile_data.profile_picture ? \"http://\" + req.headers.host + \"/\" + profile_data.profile_picture : \"/assets/images/man-avatar-profile.jpg\";\n      }\n\n      return_data.profile_data = profile_data;\n      influencer_posts.influencer_posts.find({\n        influencerid: user_id\n      }, function (post_error, posts) {\n        if (post_error) res.json({\n          status: \"failure\",\n          statusCode: 100,\n          msg: post_error\n        });\n\n        if (posts) {\n          for (var i = 0; i < posts.length; i++) {\n            var post_value = {\n              id: posts[i]._id,\n              influencer_id: posts[i].influencerid,\n              image: \"http://\" + req.headers.host + \"/\" + posts[i].post_name,\n              upload_type: posts[i].upload_type ? posts[i].upload_type : 'image',\n              //text_name     : \"@lorengray \"+posts[i].media_type+i,\n              description: posts[i].description,\n              price: posts[i].price,\n              likes_count: \"50.8K\",\n              comments_count: \"20.8K\"\n            };\n            return_data.posts[i] = post_value;\n          } //return_data.posts=posts;\n\n\n          res.json({\n            status: \"success\",\n            statusCode: 200,\n            data: influencer_data,\n            mydata: return_data\n          });\n        } else {\n          res.json({\n            status: \"success\",\n            statusCode: 200,\n            data: influencer_data,\n            mydata: return_data\n          });\n        }\n      });\n    });\n  });\n});\nrouter.post('/update_price', function (req, res) {\n  var user_data = req.body;\n\n  if (user_data.media_type == \"tiktok\") {\n    var update_data = {\n      tiktok_post_price: user_data.post_price,\n      tiktok_story_price: user_data.story_price\n    };\n  } else if (user_data.media_type == \"facebook\") {\n    var update_data = {\n      facebook_post_price: user_data.post_price,\n      facebook_friend_price: user_data.friend_price,\n      facebook_comment_price: user_data.comment_price,\n      facebook_like_price: user_data.like_price\n    };\n  } else if (user_data.media_type == \"instagram\") {\n    var update_data = {\n      instagram_post_price: user_data.post_price,\n      instagram_story_price: user_data.story_price,\n      instagram_comment_price: user_data.comment_price,\n      instagram_like_price: user_data.like_price,\n      instagram_follow_price: user_data.follow_price\n    };\n  } else if (user_data.media_type == \"twitter\") {\n    var update_data = {\n      twitter_tweet_price: user_data.tweet_price,\n      twitter_retweet_price: user_data.retweet_price,\n      twitter_comment_price: user_data.comment_price,\n      twitter_like_price: user_data.like_price,\n      twitter_follow_price: user_data.follow_price\n    };\n  }\n\n  influencers_data.influencers_data.updateOne({\n    influencerid: new ObjectId(user_data.user_id)\n  }, {\n    $set: update_data\n  }, function (err, data) {\n    if (err) {\n      res.json({\n        status: \"failure\",\n        statusCode: 100,\n        data: err\n      });\n    } else {\n      res.json({\n        status: \"success\",\n        statusCode: 200,\n        data: data\n      });\n    }\n  });\n});\nrouter.post('/update_profile', function (req, res) {\n  let user_data = req.body;\n  var update_data = {\n    name: user_data.name //email:user_data.email,\n\n  };\n  influencer.influencers.updateOne({\n    _id: user_data.user_id\n  }, {\n    $set: update_data\n  }, function (err, data) {\n    if (err) {\n      res.json({\n        status: \"failure\",\n        statusCode: 100,\n        data: err\n      });\n    } else {\n      res.json({\n        status: \"success\",\n        statusCode: 200,\n        data: data\n      });\n    }\n  });\n});\nrouter.post('/upload_post', upload.single('uploadedImage'), (req, res, next) => {\n  const file = req.file;\n  var user_data = req.body;\n\n  if (!file) {\n    const error = new Error('Please upload a file');\n    error.httpStatusCode = 400;\n    return next(error);\n  }\n\n  var post_create = new influencer_posts.influencer_posts();\n  post_create.post_name = file.filename;\n  post_create.influencerid = user_data.user_id; // post_create.media_type    = user_data.media_type;\n  // post_create.post_type     = user_data.post_type;\n\n  post_create.price = user_data.price;\n  post_create.description = user_data.description;\n  post_create.upload_type = user_data.upload_type;\n  post_create.save(function (err, data) {\n    if (err) res.json({\n      status: \"failure\",\n      statusCode: 100,\n      msg: err\n    });\n    res.status(200).send({\n      statusCode: 200,\n      status: 'success',\n      data: file\n    });\n  });\n}, (error, req, res, next) => {\n  res.status(400).send({\n    error: error.message\n  });\n});\nrouter.get(\"/delete_post\", function (req, res) {\n  var post_id = req.query.post_id;\n  influencer_posts.influencer_posts.deleteOne({\n    _id: post_id\n  }, function (error, data) {\n    if (error) res.json({\n      status: \"failure\",\n      statusCode: 100,\n      data: error\n    });\n    res.json({\n      statusCode: 200,\n      status: 'success',\n      data: data\n    });\n  });\n});\nrouter.post('/upload_profile_image', upload.single('profileImage'), (req, res, next) => {\n  const file = req.file;\n  var user_data = req.body;\n\n  if (!file) {\n    const error = new Error('Please upload a file');\n    error.httpStatusCode = 400;\n    return next(error);\n  }\n\n  let update_data = {\n    profile_picture: file.filename\n  };\n  influencer.influencers.updateOne({\n    _id: user_data.user_id\n  }, {\n    $set: update_data\n  }, function (err, update_dta) {\n    if (err) {\n      res.json({\n        status: \"failure\",\n        statusCode: 100,\n        data: err\n      });\n    } else {\n      res.json({\n        status: \"success\",\n        statusCode: 200,\n        data: update_dta\n      });\n    }\n  });\n}, (error, req, res, next) => {\n  res.status(400).send({\n    error: error.message\n  });\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "influencers.js"
      ],
      "names": [
        "express",
        "require",
        "router",
        "Router",
        "mongoose",
        "influencer",
        "influencers_data",
        "influencer_posts",
        "passwordHash",
        "ObjectId",
        "multer",
        "fileExtension",
        "fs",
        "path",
        "storage",
        "diskStorage",
        "destination",
        "req",
        "file",
        "cb",
        "join",
        "__dirname",
        "filename",
        "fieldname",
        "Date",
        "now",
        "originalname",
        "upload",
        "limits",
        "fileSize",
        "fileFilter",
        "undefined",
        "post",
        "res",
        "influencerCreate",
        "influencers",
        "body",
        "influencer_signup",
        "influencerData",
        "datetime",
        "pass",
        "generate",
        "password",
        "joindate",
        "tiktok",
        "instagram",
        "insta",
        "facebook",
        "fb",
        "twitter",
        "twitterfollowers",
        "twitter_followers",
        "tiktokfollowers",
        "tiktok_followers",
        "facebookfollowers",
        "fb_followers",
        "instagramfollowers",
        "insta_followers",
        "findOne",
        "email",
        "err",
        "json",
        "status",
        "statusCode",
        "msg",
        "name",
        "save",
        "influencer_res",
        "influencerid",
        "influencermatchid",
        "err1",
        "influ_data_res",
        "data",
        "get",
        "next",
        "aggregate",
        "res_data",
        "error",
        "i",
        "length",
        "tiktok_story_price",
        "tiktok_post_price",
        "twitter_tweet_price",
        "twitter_retweet_price",
        "twitter_like_price",
        "twitter_follow_price",
        "twitter_comment_price",
        "instagram_post_price",
        "instagram_story_price",
        "instagram_comment_price",
        "instagram_follow_price",
        "instagram_like_price",
        "facebook_post_price",
        "facebook_like_price",
        "facebook_friend_price",
        "facebook_comment_price",
        "user_id",
        "query",
        "influencer_data",
        "return_data",
        "price_data",
        "post_price",
        "story_price",
        "comment_price",
        "like_price",
        "follow_price",
        "friend_price",
        "tweet_price",
        "retweet_price",
        "profile_data",
        "followers",
        "posts",
        "vals",
        "_id",
        "profile_picture",
        "headers",
        "host",
        "find",
        "post_error",
        "post_value",
        "id",
        "influencer_id",
        "image",
        "post_name",
        "upload_type",
        "description",
        "price",
        "likes_count",
        "comments_count",
        "mydata",
        "user_data",
        "media_type",
        "update_data",
        "updateOne",
        "$set",
        "single",
        "Error",
        "httpStatusCode",
        "post_create",
        "send",
        "message",
        "post_id",
        "deleteOne",
        "update_dta",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "E:\\boomadvertisement\\serverapi\\routes\\",
      "sourcesContent": [
        "\r\nvar express = require('express');\r\nvar router = express.Router();\r\nvar mongoose = require('mongoose');\r\nconst influencer = require('../models/influencers');\r\nconst influencers_data = require('../models/influencers_data');\r\nconst influencer_posts = require('../models/influencers_posts');\r\n//const email = require('../config/email');\r\n//const nodemailer = require('nodemailer');\r\nvar passwordHash = require('password-hash');\r\nconst {ObjectId} = require('mongodb'); \r\nconst multer = require('multer');\r\nvar fileExtension = require('file-extension')\r\nvar fs = require('fs');\r\nconst path = require('path');\r\n//process.env.NODE_TLS_REJECT_UNAUTHORIZED = \"1\";\r\n\r\nvar storage = multer.diskStorage({\r\n                                  // Setting directory on disk to save uploaded files\r\n                                  destination: function (req, file, cb) {\r\n                                      \r\n                                    //cb(null, './uploads')\r\n                                    cb(null, path.join(__dirname, '../uploads'))\r\n                                  },\r\n                                  // Setting name of file saved\r\n                                  filename: function (req, file, cb) {\r\n                                      \r\n                                    cb(null, file.fieldname + '-' + Date.now() + '.' + fileExtension(file.originalname))\r\n                                  }\r\n                                });\r\n\r\nvar upload = multer({\r\n  storage : storage,\r\n  limits  : {\r\n              fileSize: 200000000 // Setting Image Size Limit to 2MBs\r\n            },\r\n  fileFilter(req, file, cb) {\r\n      \r\n      // if (!file.originalname.match(/\\.(jpg|jpeg|png)$/)) {\r\n      //     //Error \r\n      //     cb(new Error('Please upload JPG and PNG images only!'))\r\n      // }\r\n      //Success \r\n      cb(undefined, true)\r\n  }\r\n})\r\n\r\n\r\nrouter.post('/register', async function(req,res) {\r\n\r\n      \r\n      var influencerCreate =  new influencer.influencers(req.body.influencer_signup);\r\n      var influencerData =  new influencers_data.influencers_data(req.body.influencer_signup);\r\n\r\n      var datetime = new Date();\r\n      let pass = passwordHash.generate(req.body.influencer_signup.password)\r\n\r\n      influencerCreate.joindate = datetime\r\n      influencerCreate.password = pass\r\n      influencerCreate.tiktok = req.body.influencer_signup.tiktok\r\n      influencerCreate.instagram = req.body.influencer_signup.insta\r\n      influencerCreate.facebook = req.body.influencer_signup.fb\r\n      influencerCreate.twitter = req.body.influencer_signup.twitter\r\n\r\n      influencerData.twitterfollowers = req.body.influencer_signup.twitter_followers\r\n      influencerData.tiktokfollowers = req.body.influencer_signup.tiktok_followers\r\n      influencerData.facebookfollowers = req.body.influencer_signup.fb_followers\r\n      influencerData.instagramfollowers = req.body.influencer_signup.insta_followers\r\n      \r\n      influencer.influencers.findOne({email:req.body.influencer_signup.email}, function(err, influencers) {\r\n        if (err)  res.json({status:\"failure\",statusCode:100,msg:err});\r\n        \r\n        if(influencers){\r\n         \r\n          res.json({status:\"failure\",statusCode:100,msg:\"Email already exists!!\"});\r\n        }else{\r\n            influencer.influencers.findOne({name:req.body.influencer_signup.name}, function(err, influencers) {\r\n            if (err)  res.json({status:\"failure\",statusCode:100,msg:err});\r\n        \r\n            if(influencers){\r\n              \r\n              res.json({status:\"failure\",statusCode:100,msg:\"Username already exists!!\"});\r\n            }\r\n            else{\r\n              \r\n                influencerCreate.save(function (err, influencer_res) {\r\n                  influencerData.influencerid = influencer_res['_id']\r\n                  influencerData.influencermatchid = influencer_res['_id']\r\n                  influencerData.save(function (err1, influ_data_res) {\r\n                    if (err || err1) res.json({status:\"failure\",statusCode:100,msg:err});\r\n                    res.json({status:\"success\",statusCode:200,data:influencer_res,msg:\"Signup & SignIn successfully!\"});\r\n                  });\r\n                });\r\n            }\r\n          })\r\n        }\r\n      }); \r\n      \r\n    });\r\n\r\n    router.get('/test', function(req,res) {\r\n      res.json(\"it worked vijay\");\r\n    });\r\n\r\n    router.get('/getInfluencers', function(req, res, next) {\r\n        influencers_data.influencers_data.aggregate([\r\n            { \"$lookup\": {\r\n                    \"from\": \"influencers\",\r\n                    \"localField\": \"influencerid\",\r\n                    \"foreignField\": \"_id\",\r\n                    \"as\": \"vals\"\r\n                  }\r\n            }\r\n\r\n            ], function(err, res_data) {\r\n\r\n\r\n              \r\n              if (err)  res.json({status:\"failure\",statusCode:100,error:err});\r\n\r\n\r\n\r\n                for(var i = 0; i < res_data.length; i++){\r\n\r\n                  res_data[i].tiktok_story_price    = res_data[i].tiktok_story_price ? res_data[i].tiktok_story_price : 0;\r\n                  res_data[i].tiktok_post_price     = res_data[i].tiktok_post_price ? res_data[i].tiktok_post_price : 0;\r\n\r\n                  res_data[i].twitter_tweet_price       = res_data[i].twitter_tweet_price ? res_data[i].twitter_tweet_price : 0;\r\n                  res_data[i].twitter_retweet_price     = res_data[i].twitter_retweet_price ? res_data[i].twitter_retweet_price : 0;\r\n                  res_data[i].twitter_like_price        = res_data[i].twitter_like_price ? res_data[i].twitter_like_price : 0;\r\n                  res_data[i].twitter_follow_price      = res_data[i].twitter_follow_price ? res_data[i].twitter_follow_price : 0;\r\n                  res_data[i].twitter_comment_price     = res_data[i].twitter_comment_price ? res_data[i].twitter_comment_price : 0;\r\n\r\n                  res_data[i].instagram_post_price      = res_data[i].instagram_post_price ? res_data[i].instagram_post_price : 0;\r\n                  res_data[i].instagram_story_price     = res_data[i].instagram_story_price ? res_data[i].instagram_story_price : 0;\r\n                  res_data[i].instagram_comment_price   = res_data[i].instagram_comment_price ? res_data[i].instagram_comment_price : 0;\r\n                  res_data[i].instagram_follow_price    = res_data[i].instagram_follow_price ? res_data[i].instagram_follow_price : 0;\r\n                  res_data[i].instagram_like_price      = res_data[i].instagram_like_price ? res_data[i].instagram_like_price : 0;\r\n                  \r\n                  res_data[i].facebook_post_price       = res_data[i].facebook_post_price ? res_data[i].facebook_post_price : 0;\r\n                  res_data[i].facebook_like_price       = res_data[i].facebook_like_price ? res_data[i].facebook_like_price : 0;\r\n                  res_data[i].facebook_friend_price     = res_data[i].facebook_friend_price ? res_data[i].facebook_friend_price : 0;\r\n                  res_data[i].facebook_comment_price    = res_data[i].facebook_comment_price ? res_data[i].facebook_comment_price : 0;\r\n\r\n                }\r\n\r\n                res.json({status:\"success\",statusCode:200,data:res_data});\r\n            })\r\n\r\n    });\r\n\r\n    /**** Trying to get all influencers data as first table influencers ***/\r\n      router.get('/getInfluencers1', function(req, res, next) {\r\n            influencer.influencers.aggregate([\r\n              { \"$lookup\": {\r\n                      \"from\": \"influencers_data\",\r\n                      \"localField\": \"_id\",\r\n                      \"foreignField\": \"influencerid\",\r\n                      \"as\": \"vals\"\r\n                    }\r\n              }\r\n              ], function(err, res_data) {\r\n                  if (err)  res.json({status:\"failure\",statusCode:100,error:err});\r\n                    res.json({status:\"success\",statusCode:200,data:res_data});\r\n                  })\r\n      });\r\n\r\n     router.get('/singleInfluencer', function(req, res) {\r\n\r\n      var  user_id = req.query.user_id;\r\n      \r\n        influencers_data.influencers_data.aggregate(\r\n            [\r\n              {\r\n                \"$lookup\":{\r\n\r\n                  \"from\": \"influencers\",\r\n                  \"localField\": \"influencerid\",\r\n                  \"foreignField\": \"_id\",\r\n                  \"as\": \"vals\"\r\n              }}\r\n              ,\r\n              {\r\n                \"$match\":{\r\n                  \"influencermatchid\" : user_id\r\n                }\r\n              }\r\n          ]\r\n            ,function(err,influencer_data){\r\n            if(err) res.json({status:\"failure\",statusCode:100,error:err});\r\n\r\n            \r\n            \r\n            var return_data = {\r\n                                price_data:{\r\n                                  tiktok      : { post_price : 0, story_price : 0},\r\n                                  instagram   : { post_price : 0, story_price : 0, comment_price :10 , like_price : 20 , follow_price : 30},\r\n                                  facebook    : { post_price : 0, friend_price : 40 , comment_price : 50 ,like_price : 60},\r\n                                  twitter     : { tweet_price : 70, retweet_price : 80 , comment_price : 90 , like_price : 70 ,follow_price : 80},\r\n                                },\r\n                                profile_data  :\"\",\r\n                                followers   : 0,\r\n                                posts         :[],\r\n                              };\r\n            \r\n            \r\n\r\n            if(influencer_data[0]){\r\n              \r\n              return_data.price_data.tiktok.post_price      = influencer_data[0].tiktok_post_price ? influencer_data[0].tiktok_post_price : 0;\r\n              return_data.price_data.tiktok.story_price     = influencer_data[0].tiktok_story_price ? influencer_data[0].tiktok_story_price: 0;\r\n\r\n              return_data.price_data.facebook.post_price    = influencer_data[0].facebook_post_price ? influencer_data[0].facebook_post_price: 0;\r\n              return_data.price_data.facebook.friend_price  = influencer_data[0].facebook_friend_price ? influencer_data[0].facebook_friend_price : 0;\r\n              return_data.price_data.facebook.comment_price = influencer_data[0].facebook_comment_price ? influencer_data[0].facebook_comment_price : 0;\r\n              return_data.price_data.facebook.like_price    = influencer_data[0].facebook_like_price ? influencer_data[0].facebook_like_price : 0;\r\n              \r\n              return_data.price_data.instagram.post_price     = influencer_data[0].instagram_post_price ? influencer_data[0].instagram_post_price: 0;\r\n              return_data.price_data.instagram.story_price    = influencer_data[0].instagram_story_price ? influencer_data[0].instagram_story_price: 0;\r\n              return_data.price_data.instagram.comment_price  = influencer_data[0].instagram_comment_price ? influencer_data[0].instagram_comment_price: 0;\r\n              return_data.price_data.instagram.like_price     = influencer_data[0].instagram_follow_price ? influencer_data[0].instagram_follow_price: 0;\r\n              return_data.price_data.instagram.follow_price   = influencer_data[0].instagram_like_price ? influencer_data[0].instagram_like_price: 0;\r\n              \r\n              return_data.price_data.twitter.tweet_price    = influencer_data[0].twitter_tweet_price ? influencer_data[0].twitter_tweet_price: 0;\r\n              return_data.price_data.twitter.retweet_price  = influencer_data[0].twitter_retweet_price ? influencer_data[0].twitter_retweet_price: 0;\r\n              return_data.price_data.twitter.comment_price  = influencer_data[0].twitter_comment_price ? influencer_data[0].twitter_comment_price: 0;\r\n              return_data.price_data.twitter.like_price     = influencer_data[0].twitter_like_price ? influencer_data[0].twitter_like_price: 0;\r\n              return_data.price_data.twitter.follow_price   = influencer_data[0].twitter_follow_price ? influencer_data[0].twitter_follow_price: 0;\r\n              \r\n              return_data.followers     = influencer_data[0] ? influencer_data[0] : 0;\r\n              return_data.profile_data  = influencer_data[0].vals ? influencer_data[0].vals[0] : \"\";\r\n              \r\n            }\r\n\r\n            influencer.influencers.findOne({_id : user_id},function(err , profile_data){\r\n\r\n              if (err)  res.json({status:\"failure\",statusCode:100,msg:err});\r\n              \r\n              if(profile_data){\r\n                \r\n                \r\n                profile_data.profile_picture =  profile_data.profile_picture ? \"http://\"+req.headers.host+\"/\"+profile_data.profile_picture : \"/assets/images/man-avatar-profile.jpg\";\r\n                \r\n              } \r\n              \r\n              return_data.profile_data = profile_data;\r\n              \r\n              influencer_posts.influencer_posts.find({influencerid:user_id}, function(post_error, posts) {\r\n                if (post_error)  res.json({status:\"failure\",statusCode:100,msg:post_error});\r\n                \r\n                \r\n                if(posts){\r\n                  \r\n                \r\n                  for(var i = 0 ; i < posts.length;i++){\r\n\r\n                    var post_value = { \r\n                                        id            : posts[i]._id ,\r\n                                        influencer_id : posts[i].influencerid ,\r\n                                        image         : \"http://\"+req.headers.host+\"/\"+posts[i].post_name,\r\n                                        upload_type   : posts[i].upload_type ? posts[i].upload_type : 'image',\r\n                                        //text_name     : \"@lorengray \"+posts[i].media_type+i,\r\n                                        description   : posts[i].description,\r\n                                        price         : posts[i].price,\r\n                                        likes_count   : \"50.8K\",\r\n                                        comments_count: \"20.8K\"\r\n                                      };\r\n    \r\n                    return_data.posts[i] = post_value; \r\n                    \r\n                  }\r\n\r\n                  //return_data.posts=posts;\r\n                  \r\n\r\n                  res.json({status:\"success\",statusCode:200,data:influencer_data,mydata:return_data});\r\n                } else {\r\n                  res.json({status:\"success\",statusCode:200,data:influencer_data,mydata:return_data});\r\n                }\r\n  \r\n              })\r\n\r\n            });\r\n\r\n            \r\n\r\n            \r\n             \r\n            \r\n          });\r\n      });\r\n\r\n      router.post('/update_price', function(req , res){\r\n\r\n        var user_data = req.body;\r\n        \r\n        if(user_data.media_type == \"tiktok\"){\r\n          var update_data = {\r\n                              tiktok_post_price : user_data.post_price,\r\n                              tiktok_story_price : user_data.story_price,\r\n                              \r\n                            }\r\n        }else if(user_data.media_type == \"facebook\"){\r\n\r\n          var update_data = {\r\n                              facebook_post_price     : user_data.post_price,\r\n                              facebook_friend_price   : user_data.friend_price,\r\n                              facebook_comment_price  : user_data.comment_price,\r\n                              facebook_like_price     : user_data.like_price,\r\n                            }\r\n\r\n        }else if(user_data.media_type == \"instagram\"){\r\n\r\n          var update_data = {\r\n                              instagram_post_price : user_data.post_price,\r\n                              instagram_story_price : user_data.story_price,\r\n                              instagram_comment_price : user_data.comment_price,\r\n                              instagram_like_price : user_data.like_price,\r\n                              instagram_follow_price : user_data.follow_price,\r\n                            }\r\n\r\n        }else if(user_data.media_type == \"twitter\"){\r\n\r\n          var update_data = {\r\n                              twitter_tweet_price   : user_data.tweet_price,\r\n                              twitter_retweet_price : user_data.retweet_price,\r\n                              twitter_comment_price : user_data.comment_price,\r\n                              twitter_like_price    : user_data.like_price,\r\n                              twitter_follow_price  : user_data.follow_price,\r\n                            }\r\n\r\n        }\r\n\r\n        influencers_data.influencers_data.updateOne({influencerid : new ObjectId(user_data.user_id)} , {$set:update_data},function(err , data){\r\n\r\n          if(err){\r\n            res.json({status:\"failure\",statusCode:100,data:err});\r\n          }else{\r\n\r\n            res.json({status:\"success\",statusCode:200,data:data});\r\n          }\r\n        })\r\n\r\n\r\n        \r\n      });\r\n\r\n      router.post('/update_profile',function(req , res){\r\n\r\n        let user_data = req.body;\r\n        var update_data = {\r\n                              name:user_data.name,\r\n                              //email:user_data.email,\r\n                          };\r\n        \r\n        influencer.influencers.updateOne({_id : user_data.user_id} , {$set:update_data},function(err , data){\r\n\r\n          if(err){\r\n            res.json({status:\"failure\",statusCode:100,data:err});\r\n          }else{\r\n\r\n            res.json({status:\"success\",statusCode:200,data:data});\r\n          }\r\n        });\r\n      });\r\n\r\n\r\n      router.post('/upload_post', upload.single('uploadedImage'), (req, res, next) => {\r\n        \r\n        const file = req.file\r\n        var user_data = req.body;\r\n        \r\n        if (!file) {\r\n            const error = new Error('Please upload a file')\r\n            error.httpStatusCode = 400\r\n            return next(error)\r\n        }\r\n\r\n        var post_create = new influencer_posts.influencer_posts();\r\n        \r\n        post_create.post_name     = file.filename;\r\n        post_create.influencerid  = user_data.user_id;\r\n        // post_create.media_type    = user_data.media_type;\r\n        // post_create.post_type     = user_data.post_type;\r\n        post_create.price         = user_data.price;\r\n        post_create.description   = user_data.description;\r\n        post_create.upload_type   = user_data.upload_type;\r\n        \r\n        \r\n        post_create.save(function(err ,data){\r\n\r\n          if (err)  res.json({status:\"failure\",statusCode:100,msg:err});\r\n          res.status(200).send({ statusCode: 200, status: 'success', data: file, })\r\n        });\r\n      \r\n      }, (error, req, res, next) => {\r\n        \r\n        res.status(400).send({ error: error.message })\r\n      });\r\n\r\n      router.get(\"/delete_post\",function(req , res){ \r\n\r\n        var  post_id = req.query.post_id;\r\n\r\n        influencer_posts.influencer_posts.deleteOne({_id:post_id},function(error , data){\r\n          if(error) res.json({status:\"failure\",statusCode:100,data:error});\r\n          res.json({statusCode: 200, status: 'success', data: data});\r\n        })\r\n      });\r\n\r\n\r\n      router.post('/upload_profile_image', upload.single('profileImage'), (req, res, next) => {\r\n        const file = req.file\r\n        var user_data = req.body;\r\n        \r\n        if (!file) {\r\n            const error = new Error('Please upload a file')\r\n            error.httpStatusCode = 400\r\n            return next(error)\r\n        }\r\n\r\n        let update_data = { profile_picture : file.filename };\r\n\r\n        influencer.influencers.updateOne({_id : user_data.user_id},{$set:update_data},function(err , update_dta){\r\n\r\n          if(err){\r\n            res.json({status:\"failure\",statusCode:100,data:err});\r\n          }else{\r\n\r\n            res.json({status:\"success\",statusCode:200,data:update_dta});\r\n          }\r\n        });\r\n        \r\n      \r\n      }, (error, req, res, next) => {\r\n        res.status(400).send({ error: error.message })\r\n      });\r\n\r\n  \r\n    module.exports = router;"
      ]
    },
    "sourceType": "module",
    "mtime": 1615196908027
  },
  "{\"sourceRoot\":\"E:\\\\boomadvertisement\\\\serverapi\\\\models\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"E:\\\\boomadvertisement\\\\serverapi\",\"filename\":\"E:\\\\boomadvertisement\\\\serverapi\\\\models\\\\influencers.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"E:\\\\boomadvertisement\\\\serverapi\",\"plugins\":[],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "E:\\boomadvertisement\\serverapi\\models\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "E:\\boomadvertisement\\serverapi",
      "filename": "E:\\boomadvertisement\\serverapi\\models\\influencers.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "E:\\boomadvertisement\\serverapi",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "E:\\boomadvertisement\\serverapi\\models\\influencers.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "E:\\boomadvertisement\\serverapi\\models\\influencers.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "E:\\boomadvertisement\\serverapi\\models\\",
        "sourceFileName": "influencers.js"
      }
    },
    "ast": null,
    "code": "var mongoose = require('mongoose');\n\nconst Schema = mongoose.Schema;\nconst influencersSchema = new Schema({\n  id: String,\n  // String is shorthand for {type: String}\n  name: String,\n  email: String,\n  password: String,\n  profile_picture: String,\n  tiktok: Boolean,\n  instagram: Boolean,\n  facebook: Boolean,\n  twitter: Boolean,\n  joindate: Date\n});\nconst influencers = mongoose.model('influencers', influencersSchema);\nmodule.exports = {\n  influencers,\n  influencersSchema\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZmx1ZW5jZXJzLmpzIl0sIm5hbWVzIjpbIm1vbmdvb3NlIiwicmVxdWlyZSIsIlNjaGVtYSIsImluZmx1ZW5jZXJzU2NoZW1hIiwiaWQiLCJTdHJpbmciLCJuYW1lIiwiZW1haWwiLCJwYXNzd29yZCIsInByb2ZpbGVfcGljdHVyZSIsInRpa3RvayIsIkJvb2xlYW4iLCJpbnN0YWdyYW0iLCJmYWNlYm9vayIsInR3aXR0ZXIiLCJqb2luZGF0ZSIsIkRhdGUiLCJpbmZsdWVuY2VycyIsIm1vZGVsIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsSUFBSUEsUUFBUSxHQUFHQyxPQUFPLENBQUMsVUFBRCxDQUF0Qjs7QUFDQSxNQUFNQyxNQUFNLEdBQUdGLFFBQVEsQ0FBQ0UsTUFBeEI7QUFFQSxNQUFNQyxpQkFBaUIsR0FBRyxJQUFJRCxNQUFKLENBQVc7QUFDbkNFLEVBQUFBLEVBQUUsRUFBa0JDLE1BRGU7QUFDUDtBQUM1QkMsRUFBQUEsSUFBSSxFQUFnQkQsTUFGZTtBQUduQ0UsRUFBQUEsS0FBSyxFQUFlRixNQUhlO0FBSW5DRyxFQUFBQSxRQUFRLEVBQVlILE1BSmU7QUFLbkNJLEVBQUFBLGVBQWUsRUFBS0osTUFMZTtBQU1uQ0ssRUFBQUEsTUFBTSxFQUFjQyxPQU5lO0FBT25DQyxFQUFBQSxTQUFTLEVBQVdELE9BUGU7QUFRbkNFLEVBQUFBLFFBQVEsRUFBWUYsT0FSZTtBQVNuQ0csRUFBQUEsT0FBTyxFQUFhSCxPQVRlO0FBVW5DSSxFQUFBQSxRQUFRLEVBQVlDO0FBVmUsQ0FBWCxDQUExQjtBQWFBLE1BQU9DLFdBQVcsR0FBR2pCLFFBQVEsQ0FBQ2tCLEtBQVQsQ0FBZSxhQUFmLEVBQThCZixpQkFBOUIsQ0FBckI7QUFDQWdCLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQjtBQUFFSCxFQUFBQSxXQUFGO0FBQWNkLEVBQUFBO0FBQWQsQ0FBakIiLCJzb3VyY2VSb290IjoiRTpcXGJvb21hZHZlcnRpc2VtZW50XFxzZXJ2ZXJhcGlcXG1vZGVsc1xcIiwic291cmNlc0NvbnRlbnQiOlsidmFyIG1vbmdvb3NlID0gcmVxdWlyZSgnbW9uZ29vc2UnKTtcclxuY29uc3QgU2NoZW1hID0gbW9uZ29vc2UuU2NoZW1hO1xyXG5cclxuY29uc3QgaW5mbHVlbmNlcnNTY2hlbWEgPSBuZXcgU2NoZW1hKHtcclxuICBpZCAgICAgICAgICAgICAgOiAgIFN0cmluZywgLy8gU3RyaW5nIGlzIHNob3J0aGFuZCBmb3Ige3R5cGU6IFN0cmluZ31cclxuICBuYW1lICAgICAgICAgICAgOiAgIFN0cmluZyxcclxuICBlbWFpbCAgICAgICAgICAgOiAgIFN0cmluZyxcclxuICBwYXNzd29yZCAgICAgICAgOiAgIFN0cmluZyxcclxuICBwcm9maWxlX3BpY3R1cmUgOiAgIFN0cmluZyxcclxuICB0aWt0b2sgICAgICAgICAgOiAgIEJvb2xlYW4sXHJcbiAgaW5zdGFncmFtICAgICAgIDogICBCb29sZWFuLFxyXG4gIGZhY2Vib29rICAgICAgICA6ICAgQm9vbGVhbixcclxuICB0d2l0dGVyICAgICAgICAgOiAgIEJvb2xlYW4sXHJcbiAgam9pbmRhdGUgICAgICAgIDogICBEYXRlLFxyXG59XHJcbik7XHJcbmNvbnN0ICBpbmZsdWVuY2VycyA9IG1vbmdvb3NlLm1vZGVsKCdpbmZsdWVuY2VycycsIGluZmx1ZW5jZXJzU2NoZW1hKTtcclxubW9kdWxlLmV4cG9ydHMgPSB7IGluZmx1ZW5jZXJzLGluZmx1ZW5jZXJzU2NoZW1hIH0gOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "influencers.js"
      ],
      "names": [
        "mongoose",
        "require",
        "Schema",
        "influencersSchema",
        "id",
        "String",
        "name",
        "email",
        "password",
        "profile_picture",
        "tiktok",
        "Boolean",
        "instagram",
        "facebook",
        "twitter",
        "joindate",
        "Date",
        "influencers",
        "model",
        "module",
        "exports"
      ],
      "mappings": "AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAtB;;AACA,MAAMC,MAAM,GAAGF,QAAQ,CAACE,MAAxB;AAEA,MAAMC,iBAAiB,GAAG,IAAID,MAAJ,CAAW;AACnCE,EAAAA,EAAE,EAAkBC,MADe;AACP;AAC5BC,EAAAA,IAAI,EAAgBD,MAFe;AAGnCE,EAAAA,KAAK,EAAeF,MAHe;AAInCG,EAAAA,QAAQ,EAAYH,MAJe;AAKnCI,EAAAA,eAAe,EAAKJ,MALe;AAMnCK,EAAAA,MAAM,EAAcC,OANe;AAOnCC,EAAAA,SAAS,EAAWD,OAPe;AAQnCE,EAAAA,QAAQ,EAAYF,OARe;AASnCG,EAAAA,OAAO,EAAaH,OATe;AAUnCI,EAAAA,QAAQ,EAAYC;AAVe,CAAX,CAA1B;AAaA,MAAOC,WAAW,GAAGjB,QAAQ,CAACkB,KAAT,CAAe,aAAf,EAA8Bf,iBAA9B,CAArB;AACAgB,MAAM,CAACC,OAAP,GAAiB;AAAEH,EAAAA,WAAF;AAAcd,EAAAA;AAAd,CAAjB",
      "sourceRoot": "E:\\boomadvertisement\\serverapi\\models\\",
      "sourcesContent": [
        "var mongoose = require('mongoose');\r\nconst Schema = mongoose.Schema;\r\n\r\nconst influencersSchema = new Schema({\r\n  id              :   String, // String is shorthand for {type: String}\r\n  name            :   String,\r\n  email           :   String,\r\n  password        :   String,\r\n  profile_picture :   String,\r\n  tiktok          :   Boolean,\r\n  instagram       :   Boolean,\r\n  facebook        :   Boolean,\r\n  twitter         :   Boolean,\r\n  joindate        :   Date,\r\n}\r\n);\r\nconst  influencers = mongoose.model('influencers', influencersSchema);\r\nmodule.exports = { influencers,influencersSchema } ;"
      ]
    },
    "sourceType": "module",
    "mtime": 1611739716615
  },
  "{\"sourceRoot\":\"E:\\\\boomadvertisement\\\\serverapi\\\\models\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"E:\\\\boomadvertisement\\\\serverapi\",\"filename\":\"E:\\\\boomadvertisement\\\\serverapi\\\\models\\\\influencers_data.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"E:\\\\boomadvertisement\\\\serverapi\",\"plugins\":[],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "E:\\boomadvertisement\\serverapi\\models\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "E:\\boomadvertisement\\serverapi",
      "filename": "E:\\boomadvertisement\\serverapi\\models\\influencers_data.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "E:\\boomadvertisement\\serverapi",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "E:\\boomadvertisement\\serverapi\\models\\influencers_data.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "E:\\boomadvertisement\\serverapi\\models\\influencers_data.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "E:\\boomadvertisement\\serverapi\\models\\",
        "sourceFileName": "influencers_data.js"
      }
    },
    "ast": null,
    "code": "var mongoose = require('mongoose');\n\nconst Schema = mongoose.Schema;\nconst influencers_dataSchema = new Schema({\n  id: String,\n  // String is shorthand for {type: String}\n  influencerid: {\n    type: mongoose.Schema.ObjectId\n  },\n  influencermatchid: String,\n  tiktokfollowers: String,\n  instagramfollowers: String,\n  facebookfollowers: String,\n  twitterfollowers: String,\n  tiktok_post_price: String,\n  tiktok_story_price: String,\n  facebook_post_price: String,\n  facebook_friend_price: String,\n  facebook_comment_price: String,\n  facebook_like_price: String,\n  twitter_tweet_price: String,\n  twitter_retweet_price: String,\n  twitter_comment_price: String,\n  twitter_like_price: String,\n  twitter_follow_price: String,\n  instagram_post_price: String,\n  instagram_story_price: String,\n  instagram_comment_price: String,\n  instagram_like_price: String,\n  instagram_follow_price: String\n});\nconst influencers_data = mongoose.model('influencers_data', influencers_dataSchema);\nmodule.exports = {\n  influencers_data,\n  influencers_dataSchema\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZmx1ZW5jZXJzX2RhdGEuanMiXSwibmFtZXMiOlsibW9uZ29vc2UiLCJyZXF1aXJlIiwiU2NoZW1hIiwiaW5mbHVlbmNlcnNfZGF0YVNjaGVtYSIsImlkIiwiU3RyaW5nIiwiaW5mbHVlbmNlcmlkIiwidHlwZSIsIk9iamVjdElkIiwiaW5mbHVlbmNlcm1hdGNoaWQiLCJ0aWt0b2tmb2xsb3dlcnMiLCJpbnN0YWdyYW1mb2xsb3dlcnMiLCJmYWNlYm9va2ZvbGxvd2VycyIsInR3aXR0ZXJmb2xsb3dlcnMiLCJ0aWt0b2tfcG9zdF9wcmljZSIsInRpa3Rva19zdG9yeV9wcmljZSIsImZhY2Vib29rX3Bvc3RfcHJpY2UiLCJmYWNlYm9va19mcmllbmRfcHJpY2UiLCJmYWNlYm9va19jb21tZW50X3ByaWNlIiwiZmFjZWJvb2tfbGlrZV9wcmljZSIsInR3aXR0ZXJfdHdlZXRfcHJpY2UiLCJ0d2l0dGVyX3JldHdlZXRfcHJpY2UiLCJ0d2l0dGVyX2NvbW1lbnRfcHJpY2UiLCJ0d2l0dGVyX2xpa2VfcHJpY2UiLCJ0d2l0dGVyX2ZvbGxvd19wcmljZSIsImluc3RhZ3JhbV9wb3N0X3ByaWNlIiwiaW5zdGFncmFtX3N0b3J5X3ByaWNlIiwiaW5zdGFncmFtX2NvbW1lbnRfcHJpY2UiLCJpbnN0YWdyYW1fbGlrZV9wcmljZSIsImluc3RhZ3JhbV9mb2xsb3dfcHJpY2UiLCJpbmZsdWVuY2Vyc19kYXRhIiwibW9kZWwiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQSxJQUFJQSxRQUFRLEdBQUdDLE9BQU8sQ0FBQyxVQUFELENBQXRCOztBQUNBLE1BQU1DLE1BQU0sR0FBR0YsUUFBUSxDQUFDRSxNQUF4QjtBQUVBLE1BQU1DLHNCQUFzQixHQUFHLElBQUlELE1BQUosQ0FBVztBQUN4Q0UsRUFBQUEsRUFBRSxFQUFHQyxNQURtQztBQUMzQjtBQUNiQyxFQUFBQSxZQUFZLEVBQUU7QUFBRUMsSUFBQUEsSUFBSSxFQUFFUCxRQUFRLENBQUNFLE1BQVQsQ0FBZ0JNO0FBQXhCLEdBRjBCO0FBR3hDQyxFQUFBQSxpQkFBaUIsRUFBRUosTUFIcUI7QUFJeENLLEVBQUFBLGVBQWUsRUFBSUwsTUFKcUI7QUFLeENNLEVBQUFBLGtCQUFrQixFQUFJTixNQUxrQjtBQU14Q08sRUFBQUEsaUJBQWlCLEVBQUlQLE1BTm1CO0FBT3hDUSxFQUFBQSxnQkFBZ0IsRUFBSVIsTUFQb0I7QUFReENTLEVBQUFBLGlCQUFpQixFQUFHVCxNQVJvQjtBQVN4Q1UsRUFBQUEsa0JBQWtCLEVBQUdWLE1BVG1CO0FBVXhDVyxFQUFBQSxtQkFBbUIsRUFBR1gsTUFWa0I7QUFXeENZLEVBQUFBLHFCQUFxQixFQUFHWixNQVhnQjtBQVl4Q2EsRUFBQUEsc0JBQXNCLEVBQUdiLE1BWmU7QUFheENjLEVBQUFBLG1CQUFtQixFQUFHZCxNQWJrQjtBQWN4Q2UsRUFBQUEsbUJBQW1CLEVBQUdmLE1BZGtCO0FBZXhDZ0IsRUFBQUEscUJBQXFCLEVBQUdoQixNQWZnQjtBQWdCeENpQixFQUFBQSxxQkFBcUIsRUFBR2pCLE1BaEJnQjtBQWlCeENrQixFQUFBQSxrQkFBa0IsRUFBR2xCLE1BakJtQjtBQWtCeENtQixFQUFBQSxvQkFBb0IsRUFBR25CLE1BbEJpQjtBQW1CeENvQixFQUFBQSxvQkFBb0IsRUFBR3BCLE1BbkJpQjtBQW9CeENxQixFQUFBQSxxQkFBcUIsRUFBR3JCLE1BcEJnQjtBQXFCeENzQixFQUFBQSx1QkFBdUIsRUFBR3RCLE1BckJjO0FBc0J4Q3VCLEVBQUFBLG9CQUFvQixFQUFHdkIsTUF0QmlCO0FBdUJ4Q3dCLEVBQUFBLHNCQUFzQixFQUFHeEI7QUF2QmUsQ0FBWCxDQUEvQjtBQXlCQSxNQUFPeUIsZ0JBQWdCLEdBQUc5QixRQUFRLENBQUMrQixLQUFULENBQWUsa0JBQWYsRUFBbUM1QixzQkFBbkMsQ0FBMUI7QUFDQTZCLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQjtBQUFFSCxFQUFBQSxnQkFBRjtBQUFtQjNCLEVBQUFBO0FBQW5CLENBQWpCIiwic291cmNlUm9vdCI6IkU6XFxib29tYWR2ZXJ0aXNlbWVudFxcc2VydmVyYXBpXFxtb2RlbHNcXCIsInNvdXJjZXNDb250ZW50IjpbInZhciBtb25nb29zZSA9IHJlcXVpcmUoJ21vbmdvb3NlJyk7XHJcbmNvbnN0IFNjaGVtYSA9IG1vbmdvb3NlLlNjaGVtYTtcclxuXHJcbmNvbnN0IGluZmx1ZW5jZXJzX2RhdGFTY2hlbWEgPSBuZXcgU2NoZW1hKHtcclxuICBpZDogIFN0cmluZywgLy8gU3RyaW5nIGlzIHNob3J0aGFuZCBmb3Ige3R5cGU6IFN0cmluZ31cclxuICBpbmZsdWVuY2VyaWQ6IHsgdHlwZTogbW9uZ29vc2UuU2NoZW1hLk9iamVjdElkfSxcclxuICBpbmZsdWVuY2VybWF0Y2hpZDogU3RyaW5nLFxyXG4gIHRpa3Rva2ZvbGxvd2VyczogICBTdHJpbmcsXHJcbiAgaW5zdGFncmFtZm9sbG93ZXJzOiAgIFN0cmluZyxcclxuICBmYWNlYm9va2ZvbGxvd2VyczogICBTdHJpbmcsXHJcbiAgdHdpdHRlcmZvbGxvd2VyczogICBTdHJpbmcsXHJcbiAgdGlrdG9rX3Bvc3RfcHJpY2UgOiBTdHJpbmcsXHJcbiAgdGlrdG9rX3N0b3J5X3ByaWNlIDogU3RyaW5nLFxyXG4gIGZhY2Vib29rX3Bvc3RfcHJpY2UgOiBTdHJpbmcsXHJcbiAgZmFjZWJvb2tfZnJpZW5kX3ByaWNlIDogU3RyaW5nLFxyXG4gIGZhY2Vib29rX2NvbW1lbnRfcHJpY2UgOiBTdHJpbmcsXHJcbiAgZmFjZWJvb2tfbGlrZV9wcmljZSA6IFN0cmluZyxcclxuICB0d2l0dGVyX3R3ZWV0X3ByaWNlIDogU3RyaW5nLFxyXG4gIHR3aXR0ZXJfcmV0d2VldF9wcmljZSA6IFN0cmluZyxcclxuICB0d2l0dGVyX2NvbW1lbnRfcHJpY2UgOiBTdHJpbmcsXHJcbiAgdHdpdHRlcl9saWtlX3ByaWNlIDogU3RyaW5nLFxyXG4gIHR3aXR0ZXJfZm9sbG93X3ByaWNlIDogU3RyaW5nLFxyXG4gIGluc3RhZ3JhbV9wb3N0X3ByaWNlIDogU3RyaW5nLFxyXG4gIGluc3RhZ3JhbV9zdG9yeV9wcmljZSA6IFN0cmluZyxcclxuICBpbnN0YWdyYW1fY29tbWVudF9wcmljZSA6IFN0cmluZyxcclxuICBpbnN0YWdyYW1fbGlrZV9wcmljZSA6IFN0cmluZyxcclxuICBpbnN0YWdyYW1fZm9sbG93X3ByaWNlIDogU3RyaW5nLFxyXG59KTtcclxuY29uc3QgIGluZmx1ZW5jZXJzX2RhdGEgPSBtb25nb29zZS5tb2RlbCgnaW5mbHVlbmNlcnNfZGF0YScsIGluZmx1ZW5jZXJzX2RhdGFTY2hlbWEpO1xyXG5tb2R1bGUuZXhwb3J0cyA9IHsgaW5mbHVlbmNlcnNfZGF0YSxpbmZsdWVuY2Vyc19kYXRhU2NoZW1hIH0gOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "influencers_data.js"
      ],
      "names": [
        "mongoose",
        "require",
        "Schema",
        "influencers_dataSchema",
        "id",
        "String",
        "influencerid",
        "type",
        "ObjectId",
        "influencermatchid",
        "tiktokfollowers",
        "instagramfollowers",
        "facebookfollowers",
        "twitterfollowers",
        "tiktok_post_price",
        "tiktok_story_price",
        "facebook_post_price",
        "facebook_friend_price",
        "facebook_comment_price",
        "facebook_like_price",
        "twitter_tweet_price",
        "twitter_retweet_price",
        "twitter_comment_price",
        "twitter_like_price",
        "twitter_follow_price",
        "instagram_post_price",
        "instagram_story_price",
        "instagram_comment_price",
        "instagram_like_price",
        "instagram_follow_price",
        "influencers_data",
        "model",
        "module",
        "exports"
      ],
      "mappings": "AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAtB;;AACA,MAAMC,MAAM,GAAGF,QAAQ,CAACE,MAAxB;AAEA,MAAMC,sBAAsB,GAAG,IAAID,MAAJ,CAAW;AACxCE,EAAAA,EAAE,EAAGC,MADmC;AAC3B;AACbC,EAAAA,YAAY,EAAE;AAAEC,IAAAA,IAAI,EAAEP,QAAQ,CAACE,MAAT,CAAgBM;AAAxB,GAF0B;AAGxCC,EAAAA,iBAAiB,EAAEJ,MAHqB;AAIxCK,EAAAA,eAAe,EAAIL,MAJqB;AAKxCM,EAAAA,kBAAkB,EAAIN,MALkB;AAMxCO,EAAAA,iBAAiB,EAAIP,MANmB;AAOxCQ,EAAAA,gBAAgB,EAAIR,MAPoB;AAQxCS,EAAAA,iBAAiB,EAAGT,MARoB;AASxCU,EAAAA,kBAAkB,EAAGV,MATmB;AAUxCW,EAAAA,mBAAmB,EAAGX,MAVkB;AAWxCY,EAAAA,qBAAqB,EAAGZ,MAXgB;AAYxCa,EAAAA,sBAAsB,EAAGb,MAZe;AAaxCc,EAAAA,mBAAmB,EAAGd,MAbkB;AAcxCe,EAAAA,mBAAmB,EAAGf,MAdkB;AAexCgB,EAAAA,qBAAqB,EAAGhB,MAfgB;AAgBxCiB,EAAAA,qBAAqB,EAAGjB,MAhBgB;AAiBxCkB,EAAAA,kBAAkB,EAAGlB,MAjBmB;AAkBxCmB,EAAAA,oBAAoB,EAAGnB,MAlBiB;AAmBxCoB,EAAAA,oBAAoB,EAAGpB,MAnBiB;AAoBxCqB,EAAAA,qBAAqB,EAAGrB,MApBgB;AAqBxCsB,EAAAA,uBAAuB,EAAGtB,MArBc;AAsBxCuB,EAAAA,oBAAoB,EAAGvB,MAtBiB;AAuBxCwB,EAAAA,sBAAsB,EAAGxB;AAvBe,CAAX,CAA/B;AAyBA,MAAOyB,gBAAgB,GAAG9B,QAAQ,CAAC+B,KAAT,CAAe,kBAAf,EAAmC5B,sBAAnC,CAA1B;AACA6B,MAAM,CAACC,OAAP,GAAiB;AAAEH,EAAAA,gBAAF;AAAmB3B,EAAAA;AAAnB,CAAjB",
      "sourceRoot": "E:\\boomadvertisement\\serverapi\\models\\",
      "sourcesContent": [
        "var mongoose = require('mongoose');\r\nconst Schema = mongoose.Schema;\r\n\r\nconst influencers_dataSchema = new Schema({\r\n  id:  String, // String is shorthand for {type: String}\r\n  influencerid: { type: mongoose.Schema.ObjectId},\r\n  influencermatchid: String,\r\n  tiktokfollowers:   String,\r\n  instagramfollowers:   String,\r\n  facebookfollowers:   String,\r\n  twitterfollowers:   String,\r\n  tiktok_post_price : String,\r\n  tiktok_story_price : String,\r\n  facebook_post_price : String,\r\n  facebook_friend_price : String,\r\n  facebook_comment_price : String,\r\n  facebook_like_price : String,\r\n  twitter_tweet_price : String,\r\n  twitter_retweet_price : String,\r\n  twitter_comment_price : String,\r\n  twitter_like_price : String,\r\n  twitter_follow_price : String,\r\n  instagram_post_price : String,\r\n  instagram_story_price : String,\r\n  instagram_comment_price : String,\r\n  instagram_like_price : String,\r\n  instagram_follow_price : String,\r\n});\r\nconst  influencers_data = mongoose.model('influencers_data', influencers_dataSchema);\r\nmodule.exports = { influencers_data,influencers_dataSchema } ;"
      ]
    },
    "sourceType": "module",
    "mtime": 1614003019389
  },
  "{\"sourceRoot\":\"E:\\\\boomadvertisement\\\\serverapi\\\\routes\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"E:\\\\boomadvertisement\\\\serverapi\",\"filename\":\"E:\\\\boomadvertisement\\\\serverapi\\\\routes\\\\login.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"E:\\\\boomadvertisement\\\\serverapi\",\"plugins\":[],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "E:\\boomadvertisement\\serverapi\\routes\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "E:\\boomadvertisement\\serverapi",
      "filename": "E:\\boomadvertisement\\serverapi\\routes\\login.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "E:\\boomadvertisement\\serverapi",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "E:\\boomadvertisement\\serverapi\\routes\\login.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "E:\\boomadvertisement\\serverapi\\routes\\login.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "E:\\boomadvertisement\\serverapi\\routes\\",
        "sourceFileName": "login.js"
      }
    },
    "ast": null,
    "code": "var express = require('express');\n\nvar router = express.Router();\n\nvar mongoose = require('mongoose');\n\nconst promoters = require('../models/promoters');\n\nconst influencers = require('../models/influencers');\n\nvar passwordHash = require('password-hash');\n\nconst email = require('../config/email');\n\nconst nodemailer = require('nodemailer');\n\nconst path = require('path');\n\nvar Publishable_Key = 'pk_test_51HI9qMEXA7xfj1nHVxgdLB9TapBg5XlzSdvp991XoqXlLhePzY4I8l54WyzzRyDpMfWG8ubnIqUq7llRkahqiOsi00BDEFDLGg';\nvar Secret_Key = 'sk_test_51HI9qMEXA7xfj1nHePxD4KlYqi9nUUlpjvpDmwNQhMEyQCeTMCiUGw6AFWuJ4YytCyVgr9Br1BkqohBvFJGG3skO00THMGx9Fv';\n\nconst stripe = require('stripe')(Secret_Key);\n\nrouter.get(\"/email\", function (req, res) {\n  let mailTransporter = nodemailer.createTransport({\n    service: 'gmail',\n    port: 465,\n    auth: {\n      user: email.email,\n      pass: email.password\n    },\n    tls: {\n      // do not fail on invalid certs\n      rejectUnauthorized: false\n    }\n  });\n  mailTransporter.verify(function (error, success) {\n    if (error) {\n      console.log(error);\n    } else {\n      console.log(\"Server is ready to take our messages\");\n    }\n  });\n  let mailDetails = {\n    from: email.email,\n    to: email.email,\n    subject: 'Test mail',\n    text: 'Node.js testing mail for GeeksforGeeks'\n  };\n  mailTransporter.sendMail(mailDetails, function (err, data) {\n    if (err) {\n      console.log('Error Occurs');\n      console.log(err);\n    } else {\n      console.log('Email sent successfully');\n    }\n  }); // transporter.sendMail(mailOptions, function(error, info){\n  //   if (error) {\n  //     res.json({status:\"failure\",statusCode:200,errorssss:error,message:\"Could Not Send Email!!!\",auth: {\n  //       user: email.email,\n  //       pass: email.password\n  //     }});\n  //   } else {\n  //     console.log('Email sent: ' + info.response);\n  //     res.json({status:\"failure\",statusCode:100,message: info.response,auth: {\n  //       user: email.email,\n  //       pass: email.password\n  //     }});\n  //   }\n  // });\n});\nrouter.post('/', function (req, res) {\n  if (req.body.signin.user_type == 0) {\n    if (!passwordHash.isHashed(req.body.signin.password)) {\n      var hashedPassword = passwordHash.generate(req.body.signin.password);\n      influencers.influencers.find({\n        $or: [{\n          name: req.body.signin.email\n        }, {\n          'email': req.body.signin.email\n        }]\n      }, function (err, influencers) {\n        if (err) {\n          res.json({\n            status: \"failure\",\n            statusCode: 600,\n            msg: err\n          });\n        } else if (influencers.length == 0) {\n          res.json({\n            status: \"failure\",\n            statusCode: 500,\n            msg: \"Invalid Credentials!!!\"\n          });\n        } else {\n          if (passwordHash.verify(req.body.signin.password, influencers[0].password)) {\n            res.json({\n              status: \"success\",\n              statusCode: 200,\n              data: influencers,\n              msg: \"Login successfully...\"\n            });\n          } else {\n            res.json({\n              status: \"failure\",\n              statusCode: 100,\n              msg: \"Invalid Credentials!!!\"\n            });\n          }\n        }\n      });\n    }\n  } else {\n    if (!passwordHash.isHashed(req.body.signin.password)) {\n      var hashedPassword = passwordHash.generate(req.body.signin.password);\n      promoters.promoters.find({\n        $or: [{\n          name: req.body.signin.email\n        }, {\n          'email': req.body.signin.email\n        }]\n      }, function (err, promoters) {\n        if (err) {\n          res.json({\n            status: \"failure\",\n            statusCode: 100,\n            msg: err\n          });\n        } else if (promoters.length == 0) {\n          res.json({\n            status: \"failure\",\n            statusCode: 100,\n            msg: \"Invalid Credentials!!!\"\n          });\n        } else {\n          if (passwordHash.verify(req.body.signin.password, promoters[0].password)) {\n            res.json({\n              status: \"success\",\n              statusCode: 200,\n              data: promoters,\n              msg: \"Login successfully...\"\n            });\n          } else {\n            res.json({\n              status: \"failure\",\n              statusCode: 100,\n              msg: \"Invalid Credentials!!!\"\n            });\n          }\n        }\n      });\n    }\n  } // else{\n  // promoters.promoters\n  // .find({ $or : [{name:req.body.signin.email},{'email':req.body.signin.email}]},function (err, promoters) {\n  //     if (err) {\n  //         res.json({status:\"failure\",statusCode:100,data:err});\n  //     }else if(promoters.length==0){\n  //       res.json({status:\"failure\",statusCode:100,data:\"Invalid Credentials!!!\"});\n  //       }\n  //       else{\n  //         if(passwordHash.verify(req.body.signin.password, promoters[0].password)){\n  //         \n  //           res.json({status:\"success\",statusCode:200,data:promoters});\n  //         }\n  //       }\n  //   });\n  // } \n\n});\nrouter.post(\"/payment\", async function (req, res) {\n  let email = req.body.email;\n  let name = req.body.name;\n  let password = req.body.password;\n  let phone = req.body.phone;\n  let description = req.body.description;\n  let total_amount = req.body.total_amount;\n  let stripe_email = req.body.stripe_email;\n  let stripe_username = req.body.stripe_username;\n  let card_number = req.body.stripe_cardnumber;\n  let card_cvc = req.body.stripe_cvc;\n  let stripe_zipcode = req.body.stripe_zipcode;\n  let month_year = req.body.stripe_month_year.split('/');\n  let exp_month = month_year[0];\n  let exp_year = month_year[1] ? month_year[1] : '';\n  const token = await stripe.tokens.create({\n    card: {\n      number: card_number,\n      exp_month: exp_month,\n      exp_year: exp_year,\n      cvc: card_cvc\n    }\n  }).then(token => {\n    //res.send(token)  // If no error occurs \n    let token_id = token.id;\n    stripe.customers.create({\n      email: stripe_email,\n      source: token_id,\n      name: stripe_username,\n      address: {\n        line1: 'TC 9/4 Old MES colony',\n        postal_code: stripe_zipcode,\n        city: 'Indore',\n        state: 'Madhya Pradesh',\n        country: 'India'\n      }\n    }).then(customer => {\n      return stripe.charges.create({\n        amount: total_amount * 100,\n        // Charing Rs 25 \n        description: 'Web Development Product',\n        currency: 'INR',\n        customer: customer.id\n      });\n    }).then(charge => {\n      res.send({\n        code: 100,\n        message: \"$\" + total_amount + \" payment has been successfully completed.\"\n      }); // If no error occurs \n    }).catch(err => {\n      res.send({\n        code: 200,\n        message: err\n      }); // If some error occurs \n    });\n  }).catch(err => {\n    res.send({\n      code: 200,\n      message: err\n    }); // If some error occurs \n  });\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "login.js"
      ],
      "names": [
        "express",
        "require",
        "router",
        "Router",
        "mongoose",
        "promoters",
        "influencers",
        "passwordHash",
        "email",
        "nodemailer",
        "path",
        "Publishable_Key",
        "Secret_Key",
        "stripe",
        "get",
        "req",
        "res",
        "mailTransporter",
        "createTransport",
        "service",
        "port",
        "auth",
        "user",
        "pass",
        "password",
        "tls",
        "rejectUnauthorized",
        "verify",
        "error",
        "success",
        "console",
        "log",
        "mailDetails",
        "from",
        "to",
        "subject",
        "text",
        "sendMail",
        "err",
        "data",
        "post",
        "body",
        "signin",
        "user_type",
        "isHashed",
        "hashedPassword",
        "generate",
        "find",
        "$or",
        "name",
        "json",
        "status",
        "statusCode",
        "msg",
        "length",
        "phone",
        "description",
        "total_amount",
        "stripe_email",
        "stripe_username",
        "card_number",
        "stripe_cardnumber",
        "card_cvc",
        "stripe_cvc",
        "stripe_zipcode",
        "month_year",
        "stripe_month_year",
        "split",
        "exp_month",
        "exp_year",
        "token",
        "tokens",
        "create",
        "card",
        "number",
        "cvc",
        "then",
        "token_id",
        "id",
        "customers",
        "source",
        "address",
        "line1",
        "postal_code",
        "city",
        "state",
        "country",
        "customer",
        "charges",
        "amount",
        "currency",
        "charge",
        "send",
        "code",
        "message",
        "catch",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "E:\\boomadvertisement\\serverapi\\routes\\",
      "sourcesContent": [
        "\r\nvar express         = require('express');\r\nvar router          = express.Router();\r\nvar   mongoose      = require('mongoose');\r\nconst promoters     = require('../models/promoters');\r\nconst influencers   = require('../models/influencers');\r\nvar   passwordHash  = require('password-hash');\r\nconst email         = require('../config/email');\r\nconst nodemailer    = require('nodemailer');\r\nconst path = require('path') \r\n\r\nvar Publishable_Key = 'pk_test_51HI9qMEXA7xfj1nHVxgdLB9TapBg5XlzSdvp991XoqXlLhePzY4I8l54WyzzRyDpMfWG8ubnIqUq7llRkahqiOsi00BDEFDLGg'\r\nvar Secret_Key = 'sk_test_51HI9qMEXA7xfj1nHePxD4KlYqi9nUUlpjvpDmwNQhMEyQCeTMCiUGw6AFWuJ4YytCyVgr9Br1BkqohBvFJGG3skO00THMGx9Fv'\r\nconst stripe = require('stripe')(Secret_Key);\r\n\r\n  router.get(\"/email\",function(req , res){\r\n\r\n    \r\n    let mailTransporter = nodemailer.createTransport({ \r\n      service: 'gmail', \r\n      port:465,\r\n      auth: { \r\n        user: email.email,\r\n        pass: email.password\r\n      } ,\r\n      tls: {\r\n        // do not fail on invalid certs\r\n        rejectUnauthorized: false\r\n      }\r\n  });\r\n\r\n  mailTransporter.verify(function(error, success) {\r\n    if (error) {\r\n      \r\n      console.log(error);\r\n    } else {\r\n      console.log(\"Server is ready to take our messages\");\r\n    }\r\n  });\r\n    \r\n  let mailDetails = { \r\n    from: email.email, \r\n    to: email.email, \r\n    subject: 'Test mail', \r\n    text: 'Node.js testing mail for GeeksforGeeks'\r\n}; \r\n\r\nmailTransporter.sendMail(mailDetails, function(err, data) { \r\n  if(err) { \r\n      console.log('Error Occurs'); \r\n      console.log(err); \r\n  } else { \r\n      console.log('Email sent successfully'); \r\n  } \r\n}); \r\n    \r\n    // transporter.sendMail(mailOptions, function(error, info){\r\n    //   if (error) {\r\n    //     res.json({status:\"failure\",statusCode:200,errorssss:error,message:\"Could Not Send Email!!!\",auth: {\r\n    //       user: email.email,\r\n    //       pass: email.password\r\n    //     }});\r\n    //   } else {\r\n    //     console.log('Email sent: ' + info.response);\r\n    //     res.json({status:\"failure\",statusCode:100,message: info.response,auth: {\r\n    //       user: email.email,\r\n    //       pass: email.password\r\n    //     }});\r\n    //   }\r\n    // });\r\n\r\n    \r\n\r\n  }); \r\n\r\nrouter.post('/', function(req, res) {\r\n  \r\n  if(req.body.signin.user_type == 0){\r\n\r\n    if(!passwordHash.isHashed(req.body.signin.password)){\r\n      var hashedPassword = passwordHash.generate(req.body.signin.password);\r\n     \r\n      influencers.influencers\r\n        .find({ $or : [{name:req.body.signin.email},{'email':req.body.signin.email}]},function (err, influencers) {\r\n        if (err) {\r\n            res.json({status:\"failure\",statusCode:600,msg:err});\r\n        }else if(influencers.length==0){\r\n          \r\n          res.json({status:\"failure\",statusCode:500,msg:\"Invalid Credentials!!!\"});\r\n        }\r\n          else{\r\n            if(passwordHash.verify(req.body.signin.password, influencers[0].password)){\r\n             \r\n              res.json({status:\"success\",statusCode:200,data:influencers,msg:\"Login successfully...\"});\r\n            }else{\r\n              res.json({status:\"failure\",statusCode:100,msg:\"Invalid Credentials!!!\"});\r\n            }\r\n          }\r\n      });\r\n    }\r\n\r\n  }else{\r\n    if(!passwordHash.isHashed(req.body.signin.password)){\r\n      var hashedPassword = passwordHash.generate(req.body.signin.password);\r\n      \r\n      promoters.promoters\r\n        .find({ $or : [{name:req.body.signin.email},{'email':req.body.signin.email}]},function (err, promoters) {\r\n        if (err) {\r\n            res.json({status:\"failure\",statusCode:100,msg:err});\r\n        }else if(promoters.length==0){\r\n          res.json({status:\"failure\",statusCode:100,msg:\"Invalid Credentials!!!\"});\r\n        }\r\n          else{\r\n            if(passwordHash.verify(req.body.signin.password, promoters[0].password)){\r\n             \r\n              res.json({status:\"success\",statusCode:200,data:promoters,msg:\"Login successfully...\"});\r\n            }else{\r\n              res.json({status:\"failure\",statusCode:100,msg:\"Invalid Credentials!!!\"});\r\n            }\r\n          }\r\n      });\r\n    }\r\n  }\r\n    // else{\r\n    // promoters.promoters\r\n    // .find({ $or : [{name:req.body.signin.email},{'email':req.body.signin.email}]},function (err, promoters) {\r\n      \r\n    //     if (err) {\r\n    //         res.json({status:\"failure\",statusCode:100,data:err});\r\n    //     }else if(promoters.length==0){\r\n    //       res.json({status:\"failure\",statusCode:100,data:\"Invalid Credentials!!!\"});\r\n    //       }\r\n    //       else{\r\n    //         if(passwordHash.verify(req.body.signin.password, promoters[0].password)){\r\n    //         \r\n    //           res.json({status:\"success\",statusCode:200,data:promoters});\r\n    //         }\r\n    //       }\r\n    //   });\r\n    // } \r\n\r\n    \r\n  });\r\n\r\n  router.post(\"/payment\",async function(req , res){\r\n\r\n    \r\n    let email = req.body.email;\r\n    let name = req.body.name;\r\n    let password = req.body.password;\r\n    let phone = req.body.phone;\r\n    let description = req.body.description;\r\n    let total_amount = req.body.total_amount;\r\n    let stripe_email = req.body.stripe_email;\r\n    let stripe_username = req.body.stripe_username;\r\n    let card_number = req.body.stripe_cardnumber;\r\n    let card_cvc = req.body.stripe_cvc;\r\n    let stripe_zipcode = req.body.stripe_zipcode;\r\n    let month_year = req.body.stripe_month_year.split('/');\r\n\r\n    let exp_month = month_year[0];\r\n    let exp_year  = month_year[1] ? month_year[1]: '';\r\n\r\n    \r\n  \r\n\r\n    const token = await stripe.tokens.create({\r\n        card: {\r\n          number: card_number,\r\n          exp_month: exp_month,\r\n          exp_year: exp_year,\r\n          cvc: card_cvc,\r\n        },\r\n    })\r\n    .then((token) => { \r\n        //res.send(token)  // If no error occurs \r\n        let token_id = token.id;\r\n        stripe.customers.create({ \r\n          email: stripe_email, \r\n          source: token_id, \r\n          name: stripe_username, \r\n          address: { \r\n              line1: 'TC 9/4 Old MES colony', \r\n              postal_code: stripe_zipcode, \r\n              city: 'Indore', \r\n              state: 'Madhya Pradesh', \r\n              country: 'India', \r\n          } \r\n      }) \r\n      .then((customer) => { \r\n        \r\n        \r\n          return stripe.charges.create({ \r\n              amount: total_amount * 100,     // Charing Rs 25 \r\n              description: 'Web Development Product', \r\n              currency: 'INR', \r\n              customer: customer.id \r\n          }); \r\n      }) \r\n      .then((charge) => { \r\n          res.send({code:100,message: \"$\"+total_amount+\" payment has been successfully completed.\"});  // If no error occurs \r\n      }) \r\n      .catch((err) => {\r\n        res.send({code:200,message:err})\r\n            // If some error occurs \r\n      });\r\n    }) \r\n    .catch((err) => {\r\n      res.send({code:200,message:err})      // If some error occurs \r\n    });\r\n\r\n\r\n  });\r\n\r\n  module.exports = router;"
      ]
    },
    "sourceType": "module",
    "mtime": 1615211643385
  },
  "{\"sourceRoot\":\"E:\\\\boomadvertisement\\\\serverapi\\\\routes\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"E:\\\\boomadvertisement\\\\serverapi\",\"filename\":\"E:\\\\boomadvertisement\\\\serverapi\\\\routes\\\\sessionsController.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"E:\\\\boomadvertisement\\\\serverapi\",\"plugins\":[],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "E:\\boomadvertisement\\serverapi\\routes\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "E:\\boomadvertisement\\serverapi",
      "filename": "E:\\boomadvertisement\\serverapi\\routes\\sessionsController.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "E:\\boomadvertisement\\serverapi",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "E:\\boomadvertisement\\serverapi\\routes\\sessionsController.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "E:\\boomadvertisement\\serverapi\\routes\\sessionsController.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "E:\\boomadvertisement\\serverapi\\routes\\",
        "sourceFileName": "sessionsController.js"
      }
    },
    "ast": null,
    "code": "const express = require('express');\n\nconst router = express.Router();\n\nconst CryptoJS = require(\"crypto-js\");\n\nconst oauth = require('oauth');\n\nconst _twitterConsumerKey = process.env.TWITTER_CONSUMER_KEY;\nconst _twitterConsumerSecret = process.env.TWITTER_CONSUMER_SECRET;\nconst twitterCallbackUrl = process.env.TWITTER_CALLBACK_URL;\nconst consumer = new oauth.OAuth(\"https://twitter.com/oauth/request_token\", \"https://twitter.com/oauth/access_token\", _twitterConsumerKey, _twitterConsumerSecret, \"1.0A\", twitterCallbackUrl, \"HMAC-SHA1\");\n\nconst influencers_data = require('../models/influencers_data');\n\nconst Twitter = require('twit');\n\nvar ObjectID = require('mongodb').ObjectID; //var url = require('url');\n//var url_parts = url.parse(request.url, true);\n//var query = url_parts.query;\n\n\nrouter.get('/connect', (req, res) => {\n  consumer.getOAuthRequestToken(function (error, oauthToken, oauthTokenSecret, results) {\n    if (error) {\n      res.send(error, 500);\n    } else {\n      req.session.oauthRequestToken = oauthToken;\n      req.session.oauthRequestTokenSecret = oauthTokenSecret;\n      const redirect = {\n        redirectUrl: `https://twitter.com/oauth/authorize?oauth_token=${req.session.oauthRequestToken}`\n      };\n      res.send(redirect);\n    }\n  });\n});\nrouter.post('/saveAccessTokens', (req, res) => {\n  consumer.getOAuthAccessToken(req.body.oauth_token, req.session.oauthRequestTokenSecret, req.body.oauth_verifier, (error, oauthAccessToken, oauthAccessTokenSecret, results) => {\n    if (error) {\n      // logger.error(error);\n      res.send(error, 500);\n    } else {\n      // req.session.oauthAccessToken = oauthAccessToken;\n      //req.session.oauthAccessTokenSecret = oauthAccessTokenSecret\n      // return res.send({ message: 'token saved' });\n      const client = new Twitter({\n        consumer_key: _twitterConsumerKey,\n        consumer_secret: _twitterConsumerSecret,\n        access_token: oauthAccessToken,\n        access_token_secret: oauthAccessTokenSecret\n      });\n      client.get('account/verify_credentials').then(user => {\n        //  res.send(user)\n        live_twitter_follower = user.data.followers_count;\n        /*******update twitter data */\n\n        influencers_data.influencers_data.updateOne({\n          \"influencerid\": new ObjectID(req.body._id)\n        }, {\n          $set: {\n            \"twitterfollowers\": live_twitter_follower\n          }\n        }, function (err, result) {\n          if (err) {\n            res.json({\n              status: \"failure\",\n              statusCode: 100,\n              error: 'could not save data'\n            });\n          } else {\n            res.json({\n              status: \"success\",\n              statusCode: 200,\n              data: result,\n              twt: user\n            });\n          }\n        });\n        /*******update twitter data */\n      }).catch(error => {\n        res.send(error);\n      });\n    }\n  });\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "sessionsController.js"
      ],
      "names": [
        "express",
        "require",
        "router",
        "Router",
        "CryptoJS",
        "oauth",
        "_twitterConsumerKey",
        "process",
        "env",
        "TWITTER_CONSUMER_KEY",
        "_twitterConsumerSecret",
        "TWITTER_CONSUMER_SECRET",
        "twitterCallbackUrl",
        "TWITTER_CALLBACK_URL",
        "consumer",
        "OAuth",
        "influencers_data",
        "Twitter",
        "ObjectID",
        "get",
        "req",
        "res",
        "getOAuthRequestToken",
        "error",
        "oauthToken",
        "oauthTokenSecret",
        "results",
        "send",
        "session",
        "oauthRequestToken",
        "oauthRequestTokenSecret",
        "redirect",
        "redirectUrl",
        "post",
        "getOAuthAccessToken",
        "body",
        "oauth_token",
        "oauth_verifier",
        "oauthAccessToken",
        "oauthAccessTokenSecret",
        "client",
        "consumer_key",
        "consumer_secret",
        "access_token",
        "access_token_secret",
        "then",
        "user",
        "live_twitter_follower",
        "data",
        "followers_count",
        "updateOne",
        "_id",
        "$set",
        "err",
        "result",
        "json",
        "status",
        "statusCode",
        "twt",
        "catch",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "E:\\boomadvertisement\\serverapi\\routes\\",
      "sourcesContent": [
        "const express = require('express');\r\nconst router = express.Router();\r\nconst CryptoJS = require(\"crypto-js\");\r\nconst oauth = require('oauth');\r\nconst _twitterConsumerKey = process.env.TWITTER_CONSUMER_KEY;\r\nconst _twitterConsumerSecret = process.env.TWITTER_CONSUMER_SECRET;\r\nconst twitterCallbackUrl = process.env.TWITTER_CALLBACK_URL;\r\nconst consumer = new oauth.OAuth(\"https://twitter.com/oauth/request_token\", \"https://twitter.com/oauth/access_token\",_twitterConsumerKey, _twitterConsumerSecret, \"1.0A\", twitterCallbackUrl, \"HMAC-SHA1\");\r\nconst influencers_data = require('../models/influencers_data');\r\nconst Twitter = require('twit');\r\nvar ObjectID = require('mongodb').ObjectID;\r\n\r\n\r\n//var url = require('url');\r\n//var url_parts = url.parse(request.url, true);\r\n//var query = url_parts.query;\r\n\r\nrouter.get('/connect', (req, res) => {\r\n  \r\n  \r\n\r\n  consumer.getOAuthRequestToken(function (error, oauthToken,   oauthTokenSecret, results) {\r\n    \r\n    if (error) {\r\n      res.send(error, 500);\r\n    } else {\r\n      req.session.oauthRequestToken = oauthToken;\r\n      req.session.oauthRequestTokenSecret = oauthTokenSecret;\r\n      const redirect = { \r\nredirectUrl: `https://twitter.com/oauth/authorize?oauth_token=${req.session.oauthRequestToken}`\r\n    }\r\n      res.send(redirect);\r\n    }\r\n  });\r\n});\r\nrouter.post('/saveAccessTokens', (req, res) => {\r\n  consumer.getOAuthAccessToken(\r\n  req.body.oauth_token,\r\n  req.session.oauthRequestTokenSecret,\r\n  req.body.oauth_verifier,\r\n  (error, oauthAccessToken, oauthAccessTokenSecret, results) => {\r\n    if (error) {\r\n     // logger.error(error);\r\n      res.send(error, 500);\r\n    }\r\n    else {\r\n     // req.session.oauthAccessToken = oauthAccessToken;\r\n      //req.session.oauthAccessTokenSecret = oauthAccessTokenSecret\r\n     // return res.send({ message: 'token saved' });\r\n\r\n      const client = new Twitter({\r\n        consumer_key: _twitterConsumerKey,\r\n        consumer_secret: _twitterConsumerSecret,\r\n        access_token: oauthAccessToken,\r\n        access_token_secret: oauthAccessTokenSecret\r\n      });\r\n\r\n      client.get('account/verify_credentials').then(user => {\r\n      //  res.send(user)\r\n            \r\n            live_twitter_follower = user.data.followers_count;\r\n\r\n                        /*******update twitter data */\r\n                influencers_data.influencers_data.updateOne(\r\n                  { \"influencerid\": new ObjectID(req.body._id) },\r\n                  {\r\n                    $set: { \"twitterfollowers\" : live_twitter_follower },\r\n                  },\r\n                  function(err,result){ \r\n                    if (err) {\r\n                      \r\n                      res.json({status:\"failure\",statusCode:100,error:'could not save data'});\r\n                    }\r\n                    else{\r\n                      \r\n                    res.json({status:\"success\",statusCode:200,data:result,twt:user});\r\n                    }\r\n                  });\r\n                /*******update twitter data */\r\n\r\n      }).catch(error => {\r\n        res.send(error);\r\n      });\r\n\r\n\r\n\r\n    }\r\n  });\r\n});\r\nmodule.exports = router;"
      ]
    },
    "sourceType": "module",
    "mtime": 1613986002344
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Codenomad\\\\Desktop\\\\boom-advertise\\\\boom-advertise\\\\serverapi\\\\routes\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Codenomad\\\\Desktop\\\\boom-advertise\\\\boom-advertise\\\\serverapi\",\"filename\":\"C:\\\\Users\\\\Codenomad\\\\Desktop\\\\boom-advertise\\\\boom-advertise\\\\serverapi\\\\routes\\\\promoters.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Codenomad\\\\Desktop\\\\boom-advertise\\\\boom-advertise\\\\serverapi\",\"plugins\":[],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi\\routes\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi",
      "filename": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi\\routes\\promoters.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi\\routes\\promoters.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi\\routes\\promoters.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi\\routes\\",
        "sourceFileName": "promoters.js"
      }
    },
    "ast": null,
    "code": "var express = require('express');\n\nvar router = express.Router();\n\nvar mongoose = require('mongoose');\n\nconst promoter = require('../models/promoters'); //const email = require('../config/email');\n//const nodemailer = require('nodemailer');\n\n\nvar passwordHash = require('password-hash'); //process.env.NODE_TLS_REJECT_UNAUTHORIZED = \"1\";\n\n\nrouter.post('/register', function (req, res) {\n  console.log(req.body.promoter_signup);\n  var promoterCreate = new promoter.promoters(req.body.promoter_signup);\n  var datetime = new Date();\n  let pass = passwordHash.generate(req.body.promoter_signup.password);\n  promoterCreate.joindate = datetime;\n  promoterCreate.password = pass;\n  promoter.promoters.findOne({\n    email: req.body.promoter_signup.email\n  }, function (err, promoters) {\n    if (err) res.json({\n      status: \"failure\",\n      statusCode: 100,\n      msg: err\n    });\n\n    if (promoters) {\n      console.log(promoters);\n      res.json({\n        status: \"failure\",\n        statusCode: 100,\n        msg: \"Email already exists!!\"\n      });\n    } else {\n      promoter.promoters.findOne({\n        name: req.body.promoter_signup.name\n      }, function (err, promoters) {\n        if (err) res.json({\n          status: \"failure\",\n          statusCode: 100,\n          msg: err\n        });\n\n        if (promoters) {\n          console.log(promoters);\n          res.json({\n            status: \"failure\",\n            statusCode: 100,\n            msg: \"Username already exists!!\"\n          });\n        } else {\n          promoterCreate.save(function (err, promoter) {\n            if (err) res.json({\n              status: \"failure\",\n              statusCode: 100,\n              msg: err\n            });\n            res.json({\n              status: \"success\",\n              statusCode: 200,\n              data: promoter,\n              msg: \"Signup & SignIn successfully!\"\n            });\n          });\n        }\n      });\n    }\n  });\n});\nrouter.post('/singlePromoter', function (req, res) {\n  promoter.promoters.find({\n    _id: req.body.id\n  }, function (err, promoter_data) {\n    if (err) res.json({\n      status: \"failure\",\n      statusCode: 100,\n      error: err\n    });\n    res.json({\n      status: \"success\",\n      statusCode: 200,\n      data: promoter_data\n    });\n  });\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb21vdGVycy5qcyJdLCJuYW1lcyI6WyJleHByZXNzIiwicmVxdWlyZSIsInJvdXRlciIsIlJvdXRlciIsIm1vbmdvb3NlIiwicHJvbW90ZXIiLCJwYXNzd29yZEhhc2giLCJwb3N0IiwicmVxIiwicmVzIiwiY29uc29sZSIsImxvZyIsImJvZHkiLCJwcm9tb3Rlcl9zaWdudXAiLCJwcm9tb3RlckNyZWF0ZSIsInByb21vdGVycyIsImRhdGV0aW1lIiwiRGF0ZSIsInBhc3MiLCJnZW5lcmF0ZSIsInBhc3N3b3JkIiwiam9pbmRhdGUiLCJmaW5kT25lIiwiZW1haWwiLCJlcnIiLCJqc29uIiwic3RhdHVzIiwic3RhdHVzQ29kZSIsIm1zZyIsIm5hbWUiLCJzYXZlIiwiZGF0YSIsImZpbmQiLCJfaWQiLCJpZCIsInByb21vdGVyX2RhdGEiLCJlcnJvciIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUNBLElBQUlBLE9BQU8sR0FBR0MsT0FBTyxDQUFDLFNBQUQsQ0FBckI7O0FBQ0EsSUFBSUMsTUFBTSxHQUFHRixPQUFPLENBQUNHLE1BQVIsRUFBYjs7QUFDQSxJQUFJQyxRQUFRLEdBQUdILE9BQU8sQ0FBQyxVQUFELENBQXRCOztBQUNBLE1BQU1JLFFBQVEsR0FBR0osT0FBTyxDQUFDLHFCQUFELENBQXhCLEMsQ0FDQTtBQUNBOzs7QUFDQSxJQUFJSyxZQUFZLEdBQUdMLE9BQU8sQ0FBQyxlQUFELENBQTFCLEMsQ0FFQTs7O0FBRUFDLE1BQU0sQ0FBQ0ssSUFBUCxDQUFZLFdBQVosRUFBeUIsVUFBU0MsR0FBVCxFQUFhQyxHQUFiLEVBQWtCO0FBQzNDQyxFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWUgsR0FBRyxDQUFDSSxJQUFKLENBQVNDLGVBQXJCO0FBQ00sTUFBSUMsY0FBYyxHQUFJLElBQUlULFFBQVEsQ0FBQ1UsU0FBYixDQUF1QlAsR0FBRyxDQUFDSSxJQUFKLENBQVNDLGVBQWhDLENBQXRCO0FBRUEsTUFBSUcsUUFBUSxHQUFH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SixFQUFVZixHQUFHLENBQUNnQixJQUFKLENBQVM7QUFBQ0MsTUFBQUEsTUFBTSxFQUFDLFNBQVI7QUFBa0JDLE1BQUFBLFVBQVUsRUFBQyxHQUE3QjtBQUFpQ1MsTUFBQUEsS0FBSyxFQUFDWjtBQUF2QyxLQUFUO0FBQ1ZmLElBQUFBLEdBQUcsQ0FBQ2dCLElBQUosQ0FBUztBQUFDQyxNQUFBQSxNQUFNLEVBQUMsU0FBUjtBQUFrQkMsTUFBQUEsVUFBVSxFQUFDLEdBQTdCO0FBQWlDSSxNQUFBQSxJQUFJLEVBQUNJO0FBQXRDLEtBQVQ7QUFDRCxHQUhEO0FBSUQsQ0FMRDtBQU9BRSxNQUFNLENBQUNDLE9BQVAsR0FBaUJwQyxNQUFqQiIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXENvZGVub21hZFxcRGVza3RvcFxcYm9vbS1hZHZlcnRpc2VcXGJvb20tYWR2ZXJ0aXNlXFxzZXJ2ZXJhcGlcXHJvdXRlc1xcIiwic291cmNlc0NvbnRlbnQiOlsiXHJcbnZhciBleHByZXNzID0gcmVxdWlyZSgnZXhwcmVzcycpO1xyXG52YXIgcm91dGVyID0gZXhwcmVzcy5Sb3V0ZXIoKTtcclxudmFyIG1vbmdvb3NlID0gcmVxdWlyZSgnbW9uZ29vc2UnKTtcclxuY29uc3QgcHJvbW90ZXIgPSByZXF1aXJlKCcuLi9tb2RlbHMvcHJvbW90ZXJzJyk7XHJcbi8vY29uc3QgZW1haWwgPSByZXF1aXJlKCcuLi9jb25maWcvZW1haWwnKTtcclxuLy9jb25zdCBub2RlbWFpbGVyID0gcmVxdWlyZSgnbm9kZW1haWxlcicpO1xyXG52YXIgcGFzc3dvcmRIYXNoID0gcmVxdWlyZSgncGFzc3dvcmQtaGFzaCcpO1xyXG5cclxuLy9wcm9jZXNzLmVudi5OT0RFX1RMU19SRUpFQ1RfVU5BVVRIT1JJWkVEID0gXCIxXCI7XHJcblxyXG5yb3V0ZXIucG9zdCgnL3JlZ2lzdGVyJywgZnVuY3Rpb24ocmVxLHJlcykge1xyXG5jb25zb2xlLmxvZyhyZXEuYm9keS5wcm9tb3Rlcl9zaWdudXApO1xyXG4gICAgICB2YXIgcHJvbW90ZXJDcmVhdGUgPSAgbmV3IHByb21vdGVyLnByb21vdGVycyhyZXEuYm9keS5wcm9tb3Rlcl9zaWdudXApO1xyXG5cclxuICAgICAgdmFyIGRhdGV0aW1lID0gbmV3IERhdGUoKTtcclxuICAgICAgbGV0IHBhc3MgPSBwYXNzd29yZEhhc2guZ2VuZXJhdGUocmVxLmJvZHkucHJvbW90ZXJfc2lnbnVwLnBhc3N3b3JkKVxyXG5cclxuICAgICAgcHJvbW90ZXJDcmVhdGUuam9pbmRhdGUgPSBkYXRldGltZVxyXG4gICAgICBwcm9tb3RlckNyZWF0ZS5wYXNzd29yZCA9IHBhc3NcclxuICAgICAgXHJcbiAgICAgIHByb21vdGVyLnByb21vdGVycy5maW5kT25lKHtlbWFpbDpyZXEuYm9keS5wcm9tb3Rlcl9zaWdudXAuZW1haWx9LCBmdW5jdGlvbihlcnIsIHByb21vdGVycykge1xyXG4gICAgICAgIGlmIChlcnIpICByZXMuanNvbih7c3RhdHVzOlwiZmFpbHVyZVwiLHN0YXR1c0NvZGU6MTAwLG1zZzplcnJ9KTtcclxuICAgICAgICBcclxuICAgICAgICBpZihwcm9tb3RlcnMpe1xyXG4gICAgICAgICAgY29uc29sZS5sb2cocHJvbW90ZXJzKVxyXG4gICAgICAgICAgcmVzLmpzb24oe3N0YXR1czpcImZhaWx1cmVcIixzdGF0dXNDb2RlOjEwMCxtc2c6XCJFbWFpbCBhbHJlYWR5IGV4aXN0cyEhXCJ9KTtcclxuICAgICAgICB9ZWxzZXtcclxuICAgICAgICAgICAgcHJvbW90ZXIucHJvbW90ZXJzLmZpbmRPbmUoe25hbWU6cmVxLmJvZHkucHJvbW90ZXJfc2lnbnVwLm5hbWV9LCBmdW5jdGlvbihlcnIsIHByb21vdGVycykge1xyXG4gICAgICAgICAgICBpZiAoZXJyKSAgcmVzLmpzb24oe3N0YXR1czpcImZhaWx1cmVcIixzdGF0dXNDb2RlOjEwMCxtc2c6ZXJyfSk7XHJcbiAgICAgICAgXHJcbiAgICAgICAgICAgIGlmKHByb21vdGVycyl7XHJcbiAgICAgICAgICAgICAgY29uc29sZS5sb2cocHJvbW90ZXJzKVxyXG4gICAgICAgICAgICAgIHJlcy5qc29uKHtzdGF0dXM6XCJmYWlsdXJlXCIsc3RhdHVzQ29kZToxMDAsbXNnOlwiVXNlcm5hbWUgYWxyZWFkeSBleGlzdHMhIVwifSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZXtcclxuICAgICAgICAgICAgICAgIHByb21vdGVyQ3JlYXRlLnNhdmUoZnVuY3Rpb24gKGVyciwgcHJvbW90ZXIpIHtcclxuICAgICAgICAgICAgICAgIGlmIChlcnIpIHJlcy5qc29uKHtzdGF0dXM6XCJmYWlsdXJlXCIsc3RhdHVzQ29kZToxMDAsbXNnOmVycn0pO1xyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgIHJlcy5qc29uKHtzdGF0dXM6XCJzdWNjZXNzXCIsc3RhdHVzQ29kZToyMDAsZGF0YTpwcm9tb3Rlcixtc2c6XCJTaWdudXAgJiBTaWduSW4gc3VjY2Vzc2Z1bGx5IVwifSk7XHJcbiAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgIH0pXHJcbiAgICAgICAgfVxyXG4gICAgICB9KTsgXHJcbiAgICAgIFxyXG4gICAgfSk7XHJcblxyXG4gICAgcm91dGVyLnBvc3QoJy9zaW5nbGVQcm9tb3RlcicsIGZ1bmN0aW9uKHJlcSwgcmVzKSB7XHJcbiAgICAgIHByb21vdGVyLnByb21vdGVycy5maW5kKHtfaWQ6cmVxLmJvZHkuaWR9LCBmdW5jdGlvbihlcnIsIHByb21vdGVyX2RhdGEpIHtcclxuICAgICAgICBpZiAoZXJyKSAgcmVzLmpzb24oe3N0YXR1czpcImZhaWx1cmVcIixzdGF0dXNDb2RlOjEwMCxlcnJvcjplcnJ9KTtcclxuICAgICAgICByZXMuanNvbih7c3RhdHVzOlwic3VjY2Vzc1wiLHN0YXR1c0NvZGU6MjAwLGRhdGE6cHJvbW90ZXJfZGF0YX0pO1xyXG4gICAgICB9KTtcclxuICAgIH0pO1xyXG5cclxuICAgIG1vZHVsZS5leHBvcnRzID0gcm91dGVyOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "promoters.js"
      ],
      "names": [
        "express",
        "require",
        "router",
        "Router",
        "mongoose",
        "promoter",
        "passwordHash",
        "post",
        "req",
        "res",
        "console",
        "log",
        "body",
        "promoter_signup",
        "promoterCreate",
        "promoters",
        "datetime",
        "Date",
        "pass",
        "generate",
        "password",
        "joindate",
        "findOne",
        "email",
        "err",
        "json",
        "status",
        "statusCode",
        "msg",
        "name",
        "save",
        "data",
        "find",
        "_id",
        "id",
        "promoter_data",
        "error",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi\\routes\\",
      "sourcesContent": [
        "\r\nvar express = require('express');\r\nvar router = express.Router();\r\nvar mongoose = require('mongoose');\r\nconst promoter = require('../models/promoters');\r\n//const email = require('../config/email');\r\n//const nodemailer = require('nodemailer');\r\nvar passwordHash = require('password-hash');\r\n\r\n//process.env.NODE_TLS_REJECT_UNAUTHORIZED = \"1\";\r\n\r\nrouter.post('/register', function(req,res) {\r\nconsole.log(req.body.promoter_signup);\r\n      var promoterCreate =  new promoter.promoters(req.body.promoter_signup);\r\n\r\n      var datetime = new Date();\r\n      let pass = passwordHash.generate(req.body.promoter_signup.password)\r\n\r\n      promoterCreate.joindate = datetime\r\n      promoterCreate.password = pass\r\n      \r\n      promoter.promoters.findOne({email:req.body.promoter_signup.email}, function(err, promoters) {\r\n        if (err)  res.json({status:\"failure\",statusCode:100,msg:err});\r\n        \r\n        if(promoters){\r\n          console.log(promoters)\r\n          res.json({status:\"failure\",statusCode:100,msg:\"Email already exists!!\"});\r\n        }else{\r\n            promoter.promoters.findOne({name:req.body.promoter_signup.name}, function(err, promoters) {\r\n            if (err)  res.json({status:\"failure\",statusCode:100,msg:err});\r\n        \r\n            if(promoters){\r\n              console.log(promoters)\r\n              res.json({status:\"failure\",statusCode:100,msg:\"Username already exists!!\"});\r\n            }\r\n            else{\r\n                promoterCreate.save(function (err, promoter) {\r\n                if (err) res.json({status:\"failure\",statusCode:100,msg:err});\r\n            \r\n                res.json({status:\"success\",statusCode:200,data:promoter,msg:\"Signup & SignIn successfully!\"});\r\n              });\r\n            }\r\n          })\r\n        }\r\n      }); \r\n      \r\n    });\r\n\r\n    router.post('/singlePromoter', function(req, res) {\r\n      promoter.promoters.find({_id:req.body.id}, function(err, promoter_data) {\r\n        if (err)  res.json({status:\"failure\",statusCode:100,error:err});\r\n        res.json({status:\"success\",statusCode:200,data:promoter_data});\r\n      });\r\n    });\r\n\r\n    module.exports = router;"
      ]
    },
    "sourceType": "module",
    "mtime": 1609337235268
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Codenomad\\\\Desktop\\\\boom-advertise\\\\boom-advertise\\\\serverapi\\\\models\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Codenomad\\\\Desktop\\\\boom-advertise\\\\boom-advertise\\\\serverapi\",\"filename\":\"C:\\\\Users\\\\Codenomad\\\\Desktop\\\\boom-advertise\\\\boom-advertise\\\\serverapi\\\\models\\\\promoters.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Codenomad\\\\Desktop\\\\boom-advertise\\\\boom-advertise\\\\serverapi\",\"plugins\":[],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi\\models\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi",
      "filename": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi\\models\\promoters.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi\\models\\promoters.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi\\models\\promoters.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi\\models\\",
        "sourceFileName": "promoters.js"
      }
    },
    "ast": null,
    "code": "var mongoose = require('mongoose');\n\nconst Schema = mongoose.Schema;\nconst promotersSchema = new Schema({\n  id: Boolean,\n  // String is shorthand for {type: String}\n  name: String,\n  email: String,\n  password: String,\n  joindate: Date\n});\nconst promoters = mongoose.model('promoters', promotersSchema);\nmodule.exports = {\n  promoters,\n  promotersSchema\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb21vdGVycy5qcyJdLCJuYW1lcyI6WyJtb25nb29zZSIsInJlcXVpcmUiLCJTY2hlbWEiLCJwcm9tb3RlcnNTY2hlbWEiLCJpZCIsIkJvb2xlYW4iLCJuYW1lIiwiU3RyaW5nIiwiZW1haWwiLCJwYXNzd29yZCIsImpvaW5kYXRlIiwiRGF0ZSIsInByb21vdGVycyIsIm1vZGVsIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsSUFBSUEsUUFBUSxHQUFHQyxPQUFPLENBQUMsVUFBRCxDQUF0Qjs7QUFDQSxNQUFNQyxNQUFNLEdBQUdGLFFBQVEsQ0FBQ0UsTUFBeEI7QUFFQSxNQUFNQyxlQUFlLEdBQUcsSUFBSUQsTUFBSixDQUFXO0FBQ2pDRSxFQUFBQSxFQUFFLEVBQUdDLE9BRDRCO0FBQ25CO0FBQ2RDLEVBQUFBLElBQUksRUFBRUMsTUFGMkI7QUFHakNDLEVBQUFBLEtBQUssRUFBSUQsTUFId0I7QUFJakNFLEVBQUFBLFFBQVEsRUFBSUYsTUFKcUI7QUFLakNHLEVBQUFBLFFBQVEsRUFBSUM7QUFMcUIsQ0FBWCxDQUF4QjtBQU9BLE1BQU9DLFNBQVMsR0FBR1osUUFBUSxDQUFDYSxLQUFULENBQWUsV0FBZixFQUE0QlYsZUFBNUIsQ0FBbkI7QUFDQVcsTUFBTSxDQUFDQyxPQUFQLEdBQWlCO0FBQUVILEVBQUFBLFNBQUY7QUFBWVQsRUFBQUE7QUFBWixDQUFqQiIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXENvZGVub21hZFxcRGVza3RvcFxcYm9vbS1hZHZlcnRpc2VcXGJvb20tYWR2ZXJ0aXNlXFxzZXJ2ZXJhcGlcXG1vZGVsc1xcIiwic291cmNlc0NvbnRlbnQiOlsidmFyIG1vbmdvb3NlID0gcmVxdWlyZSgnbW9uZ29vc2UnKTtcclxuY29uc3QgU2NoZW1hID0gbW9uZ29vc2UuU2NoZW1hO1xyXG5cclxuY29uc3QgcHJvbW90ZXJzU2NoZW1hID0gbmV3IFNjaGVtYSh7XHJcbiAgaWQ6ICBCb29sZWFuLCAvLyBTdHJpbmcgaXMgc2hvcnRoYW5kIGZvciB7dHlwZTogU3RyaW5nfVxyXG4gIG5hbWU6IFN0cmluZyxcclxuICBlbWFpbDogICBTdHJpbmcsXHJcbiAgcGFzc3dvcmQ6ICAgU3RyaW5nLFxyXG4gIGpvaW5kYXRlOiAgIERhdGVcclxufSk7XHJcbmNvbnN0ICBwcm9tb3RlcnMgPSBtb25nb29zZS5tb2RlbCgncHJvbW90ZXJzJywgcHJvbW90ZXJzU2NoZW1hKTtcclxubW9kdWxlLmV4cG9ydHMgPSB7IHByb21vdGVycyxwcm9tb3RlcnNTY2hlbWEgfSA7Il19",
    "map": {
      "version": 3,
      "sources": [
        "promoters.js"
      ],
      "names": [
        "mongoose",
        "require",
        "Schema",
        "promotersSchema",
        "id",
        "Boolean",
        "name",
        "String",
        "email",
        "password",
        "joindate",
        "Date",
        "promoters",
        "model",
        "module",
        "exports"
      ],
      "mappings": "AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAtB;;AACA,MAAMC,MAAM,GAAGF,QAAQ,CAACE,MAAxB;AAEA,MAAMC,eAAe,GAAG,IAAID,MAAJ,CAAW;AACjCE,EAAAA,EAAE,EAAGC,OAD4B;AACnB;AACdC,EAAAA,IAAI,EAAEC,MAF2B;AAGjCC,EAAAA,KAAK,EAAID,MAHwB;AAIjCE,EAAAA,QAAQ,EAAIF,MAJqB;AAKjCG,EAAAA,QAAQ,EAAIC;AALqB,CAAX,CAAxB;AAOA,MAAOC,SAAS,GAAGZ,QAAQ,CAACa,KAAT,CAAe,WAAf,EAA4BV,eAA5B,CAAnB;AACAW,MAAM,CAACC,OAAP,GAAiB;AAAEH,EAAAA,SAAF;AAAYT,EAAAA;AAAZ,CAAjB",
      "sourceRoot": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi\\models\\",
      "sourcesContent": [
        "var mongoose = require('mongoose');\r\nconst Schema = mongoose.Schema;\r\n\r\nconst promotersSchema = new Schema({\r\n  id:  Boolean, // String is shorthand for {type: String}\r\n  name: String,\r\n  email:   String,\r\n  password:   String,\r\n  joindate:   Date\r\n});\r\nconst  promoters = mongoose.model('promoters', promotersSchema);\r\nmodule.exports = { promoters,promotersSchema } ;"
      ]
    },
    "sourceType": "module",
    "mtime": 1608315960282
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Codenomad\\\\Desktop\\\\boom-advertise\\\\boom-advertise\\\\serverapi\\\\routes\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Codenomad\\\\Desktop\\\\boom-advertise\\\\boom-advertise\\\\serverapi\",\"filename\":\"C:\\\\Users\\\\Codenomad\\\\Desktop\\\\boom-advertise\\\\boom-advertise\\\\serverapi\\\\routes\\\\workers.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Codenomad\\\\Desktop\\\\boom-advertise\\\\boom-advertise\\\\serverapi\",\"plugins\":[],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi\\routes\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi",
      "filename": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi\\routes\\workers.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi\\routes\\workers.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi\\routes\\workers.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi\\routes\\",
        "sourceFileName": "workers.js"
      }
    },
    "ast": null,
    "code": "var express = require('express');\n\nvar router = express.Router();\n\nvar mongoose = require('mongoose');\n\nconst worker = require('../models/workers');\n\nconst email = require('../config/email');\n\nconst nodemailer = require('nodemailer');\n\nvar passwordHash = require('password-hash'); //process.env.NODE_TLS_REJECT_UNAUTHORIZED = \"1\";\n\n\nvar sendEmail = function (to, subject, html) {\n  return new Promise(function (resolve, reject) {\n    var transporter = nodemailer.createTransport({\n      service: 'gmail',\n      port: 587,\n      secure: false,\n      auth: {\n        user: email.email,\n        pass: email.password\n      }\n    });\n    var mailOptions = {\n      from: 'faanmanagement@gmail.com  <http://boomadvertise.com/>',\n      to: to,\n      subject: subject,\n      html: html\n    };\n    transporter.sendMail(mailOptions, function (error, info) {\n      if (error) {\n        reject(error);\n      } else {\n        resolve(1);\n      }\n    });\n  });\n};\n\nrouter.post('/register', function (req, res) {\n  var coupon_code = Math.random().toString(36).slice(2);\n  console.log(req.body.worker_signup);\n  var workerCreate = new worker.workers(req.body.worker_signup);\n  var datetime = new Date();\n  let pass = passwordHash.generate(req.body.worker_signup.password);\n  workerCreate.joindate = datetime;\n  workerCreate.password = pass;\n  workerCreate.coupon_code = coupon_code;\n  worker.workers.findOne({\n    email: req.body.worker_signup.email\n  }, function (err, workers) {\n    if (err) res.json({\n      status: \"failure\",\n      statusCode: 100,\n      msg: err\n    });\n\n    if (workers) {\n      res.json({\n        status: \"failure\",\n        statusCode: 100,\n        msg: \"Email already exists!!\"\n      });\n    } else {\n      worker.workers.findOne({\n        name: req.body.worker_signup.name\n      }, function (err, workers) {\n        if (err) res.json({\n          status: \"failure\",\n          statusCode: 100,\n          msg: err\n        });\n\n        if (workers) {\n          console.log(workers);\n          res.json({\n            status: \"failure\",\n            statusCode: 100,\n            msg: \"Username already exists!!\"\n          });\n        } else {\n          workerCreate.save(function (err, worker) {\n            sendEmail(req.body.worker_signup.email, \"Your login account!\", \"You have been added as a Worker on <b>http://boomadvertise.com/</b><br> Here are your login credentials along with other details. <br> Username: \" + req.body.worker_signup.name + \"<br> Email: \" + req.body.worker_signup.email + \"<br> Password: \" + req.body.worker_signup.password + \" Promo code: fjhdgggdffg <br> Sharaeble Urls with others : http://boomadvertise.com/\" + worker['_id']);\n            if (err) res.json({\n              status: \"failure\",\n              statusCode: 100,\n              msg: error\n            });\n            res.json({\n              status: \"success\",\n              statusCode: 200,\n              data: worker,\n              msg: \"Worker added successfully and an email has been sent to the worker.\"\n            }); //  res.setHeader(\"Content-Type\", \"text/html\");\n\n            /******Send email***** */\n            //  var a = sendEmail(req.body.worker_signup.email,\n            //     \"Your login account!\",\"You have been added as a Worker on <b>http://boomadvertise.com/</b><br> Here are your login credentials along with other details. <br> Username: \" + req.body.worker_signup.name + \"<br> Email: \" +req.body.worker_signup.email +\"<br> Password: \" + req.body.worker_signup.password +\" Promo code: fjhdgggdffg <br> Sharaeble Urls with others : http://boomadvertise.com/\"+worker['_id']);\n            //       a.then((result) => { \n            //   if(result){\n            //     res.json({status:\"success\",statusCode:200,data:'hii sent email...'});\n            //   }\n            //   else{\n            //    res.json({status:\"failure\",statusCode:100,message:\"There was some error in your request!!!\",data:[]});\n            //   }\n            //     }).catch((err) => {\n            //      res.json({status:\"failure\",statusCode:100,message:\"Could Not Send Email!!!\",data:err});\n            //     });\n\n            /******Send email end***** */\n          });\n        }\n      });\n    }\n  });\n});\nrouter.post('/email', function (req, res) {\n  /******Send email***** */\n  // console.log(Math.random().toString(36).slice(2));\n  var a = sendEmail('manpreet@codenomad.net', \"Your login account!\", 'You have been added as a Worker on <b>http://boomadvertise.com/</b><br> Here are your login credentials along with other details. <br> Promo code: fjhdgggdffg <br> Sharaeble Urls with others : http://boomadvertise.com/');\n  a.then(result => {\n    if (result) {\n      res.json({\n        status: \"success\",\n        statusCode: 200,\n        data: 'hii sent email...'\n      });\n    } else {\n      res.json({\n        status: \"failure\",\n        statusCode: 100,\n        message: \"There was some error in youyr request!!!\",\n        data: []\n      });\n    }\n  }).catch(err => {\n    res.json({\n      status: \"failure\",\n      statusCode: 100,\n      message: \"Could Not Send Email!!!\",\n      data: err\n    });\n  });\n  /******Send email end***** */\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "workers.js"
      ],
      "names": [
        "express",
        "require",
        "router",
        "Router",
        "mongoose",
        "worker",
        "email",
        "nodemailer",
        "passwordHash",
        "sendEmail",
        "to",
        "subject",
        "html",
        "Promise",
        "resolve",
        "reject",
        "transporter",
        "createTransport",
        "service",
        "port",
        "secure",
        "auth",
        "user",
        "pass",
        "password",
        "mailOptions",
        "from",
        "sendMail",
        "error",
        "info",
        "post",
        "req",
        "res",
        "coupon_code",
        "Math",
        "random",
        "toString",
        "slice",
        "console",
        "log",
        "body",
        "worker_signup",
        "workerCreate",
        "workers",
        "datetime",
        "Date",
        "generate",
        "joindate",
        "findOne",
        "err",
        "json",
        "status",
        "statusCode",
        "msg",
        "name",
        "save",
        "data",
        "a",
        "then",
        "result",
        "message",
        "catch",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi\\routes\\",
      "sourcesContent": [
        "\r\nvar express = require('express');\r\nvar router = express.Router();\r\nvar mongoose = require('mongoose');\r\nconst worker = require('../models/workers');\r\nconst email = require('../config/email');\r\nconst nodemailer = require('nodemailer');\r\nvar passwordHash = require('password-hash');\r\n\r\n//process.env.NODE_TLS_REJECT_UNAUTHORIZED = \"1\";\r\n\r\nvar sendEmail = function(to,subject,html) {\r\n  return new Promise(function(resolve, reject) {\r\n    var transporter = nodemailer.createTransport({\r\n      service: 'gmail',\r\n      port: 587,\r\n      secure: false,\r\n      auth: {\r\n        user: email.email,\r\n        pass: email.password\r\n      }\r\n    });\r\n  \r\n  var mailOptions = {\r\n    from: 'faanmanagement@gmail.com  <http://boomadvertise.com/>',\r\n    to: to,\r\n    subject: subject,\r\n    html: html\r\n  };\r\n\r\n    transporter.sendMail(mailOptions, function(error, info){\r\n    if (error) {\r\n      reject(error);\r\n    } else {\r\n     resolve(1)\r\n    }\r\n  });\r\n\r\n  \r\n});\r\n\r\n}\r\n\r\n\r\nrouter.post('/register', function(req,res) {\r\n  var coupon_code  = Math.random().toString(36).slice(2)\r\nconsole.log(req.body.worker_signup);\r\n      var workerCreate =  new worker.workers(req.body.worker_signup);\r\n\r\n      var datetime = new Date();\r\n      let pass = passwordHash.generate(req.body.worker_signup.password)\r\n\r\n      workerCreate.joindate = datetime\r\n      workerCreate.password = pass\r\n      workerCreate.coupon_code = coupon_code\r\n      \r\n      worker.workers.findOne({email:req.body.worker_signup.email}, function(err, workers) {\r\n        if (err)  res.json({status:\"failure\",statusCode:100,msg:err});\r\n        \r\n        if(workers){\r\n          res.json({status:\"failure\",statusCode:100,msg:\"Email already exists!!\"});\r\n        }else{\r\n            worker.workers.findOne({name:req.body.worker_signup.name}, function(err, workers) {\r\n            if (err)  res.json({status:\"failure\",statusCode:100,msg:err});\r\n        \r\n            if(workers){\r\n              console.log(workers)\r\n              res.json({status:\"failure\",statusCode:100,msg:\"Username already exists!!\"});\r\n            }\r\n            else{\r\n                workerCreate.save(function (err, worker) {\r\n                  sendEmail(req.body.worker_signup.email,\r\n                     \"Your login account!\",\"You have been added as a Worker on <b>http://boomadvertise.com/</b><br> Here are your login credentials along with other details. <br> Username: \" + req.body.worker_signup.name + \"<br> Email: \" +req.body.worker_signup.email +\"<br> Password: \" + req.body.worker_signup.password +\" Promo code: fjhdgggdffg <br> Sharaeble Urls with others : http://boomadvertise.com/\"+worker['_id']);\r\n                  if (err) res.json({status:\"failure\",statusCode:100,msg:error});\r\n                  res.json({status:\"success\",statusCode:200,data:worker,msg:\"Worker added successfully and an email has been sent to the worker.\"});\r\n                //  res.setHeader(\"Content-Type\", \"text/html\");\r\n                /******Send email***** */\r\n              //  var a = sendEmail(req.body.worker_signup.email,\r\n              //     \"Your login account!\",\"You have been added as a Worker on <b>http://boomadvertise.com/</b><br> Here are your login credentials along with other details. <br> Username: \" + req.body.worker_signup.name + \"<br> Email: \" +req.body.worker_signup.email +\"<br> Password: \" + req.body.worker_signup.password +\" Promo code: fjhdgggdffg <br> Sharaeble Urls with others : http://boomadvertise.com/\"+worker['_id']);\r\n              //       a.then((result) => { \r\n              //   if(result){\r\n              //     res.json({status:\"success\",statusCode:200,data:'hii sent email...'});\r\n              //   }\r\n              //   else{\r\n              //    res.json({status:\"failure\",statusCode:100,message:\"There was some error in your request!!!\",data:[]});\r\n              //   }\r\n              //     }).catch((err) => {\r\n              //      res.json({status:\"failure\",statusCode:100,message:\"Could Not Send Email!!!\",data:err});\r\n              //     });\r\n           /******Send email end***** */\r\n              });\r\n            }\r\n          })\r\n        }\r\n      }); \r\n      \r\n    });\r\n\r\n    \r\n    router.post('/email', function(req,res) { \r\n      /******Send email***** */\r\n     // console.log(Math.random().toString(36).slice(2));\r\n      \r\n      var a =  sendEmail('manpreet@codenomad.net',\r\n        \"Your login account!\",\r\n        'You have been added as a Worker on <b>http://boomadvertise.com/</b><br> Here are your login credentials along with other details. <br> Promo code: fjhdgggdffg <br> Sharaeble Urls with others : http://boomadvertise.com/')\r\n        a.then((result) => { \r\n       if(result){\r\n        res.json({status:\"success\",statusCode:200,data:'hii sent email...'});\r\n       }\r\n       else{\r\n        res.json({status:\"failure\",statusCode:100,message:\"There was some error in youyr request!!!\",data:[]});\r\n       }\r\n        }).catch((err) => {\r\n          res.json({status:\"failure\",statusCode:100,message:\"Could Not Send Email!!!\",data:err});\r\n        });\r\n     /******Send email end***** */\r\n      });\r\n\r\n\r\n\r\n\r\n    \r\n    \r\n    module.exports = router;\r\n\r\n\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1609170675581
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Codenomad\\\\Desktop\\\\boom-advertise\\\\boom-advertise\\\\serverapi\\\\models\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Codenomad\\\\Desktop\\\\boom-advertise\\\\boom-advertise\\\\serverapi\",\"filename\":\"C:\\\\Users\\\\Codenomad\\\\Desktop\\\\boom-advertise\\\\boom-advertise\\\\serverapi\\\\models\\\\workers.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Codenomad\\\\Desktop\\\\boom-advertise\\\\boom-advertise\\\\serverapi\",\"plugins\":[],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi\\models\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi",
      "filename": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi\\models\\workers.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi\\models\\workers.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi\\models\\workers.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi\\models\\",
        "sourceFileName": "workers.js"
      }
    },
    "ast": null,
    "code": "var mongoose = require('mongoose');\n\nconst Schema = mongoose.Schema;\nconst workersSchema = new Schema({\n  id: Boolean,\n  // String is shorthand for {type: String}\n  name: String,\n  email: String,\n  password: String,\n  coupon_code: String,\n  joindate: Date\n});\nconst workers = mongoose.model('workers', workersSchema);\nmodule.exports = {\n  workers,\n  workersSchema\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndvcmtlcnMuanMiXSwibmFtZXMiOlsibW9uZ29vc2UiLCJyZXF1aXJlIiwiU2NoZW1hIiwid29ya2Vyc1NjaGVtYSIsImlkIiwiQm9vbGVhbiIsIm5hbWUiLCJTdHJpbmciLCJlbWFpbCIsInBhc3N3b3JkIiwiY291cG9uX2NvZGUiLCJqb2luZGF0ZSIsIkRhdGUiLCJ3b3JrZXJzIiwibW9kZWwiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQSxJQUFJQSxRQUFRLEdBQUdDLE9BQU8sQ0FBQyxVQUFELENBQXRCOztBQUNBLE1BQU1DLE1BQU0sR0FBR0YsUUFBUSxDQUFDRSxNQUF4QjtBQUVBLE1BQU1DLGFBQWEsR0FBRyxJQUFJRCxNQUFKLENBQVc7QUFDL0JFLEVBQUFBLEVBQUUsRUFBR0MsT0FEMEI7QUFDakI7QUFDZEMsRUFBQUEsSUFBSSxFQUFFQyxNQUZ5QjtBQUcvQkMsRUFBQUEsS0FBSyxFQUFJRCxNQUhzQjtBQUkvQkUsRUFBQUEsUUFBUSxFQUFJRixNQUptQjtBQUsvQkcsRUFBQUEsV0FBVyxFQUFJSCxNQUxnQjtBQU0vQkksRUFBQUEsUUFBUSxFQUFJQztBQU5tQixDQUFYLENBQXRCO0FBUUEsTUFBTUMsT0FBTyxHQUFHYixRQUFRLENBQUNjLEtBQVQsQ0FBZSxTQUFmLEVBQTBCWCxhQUExQixDQUFoQjtBQUNBWSxNQUFNLENBQUNDLE9BQVAsR0FBaUI7QUFBRUgsRUFBQUEsT0FBRjtBQUFVVixFQUFBQTtBQUFWLENBQWpCIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcQ29kZW5vbWFkXFxEZXNrdG9wXFxib29tLWFkdmVydGlzZVxcYm9vbS1hZHZlcnRpc2VcXHNlcnZlcmFwaVxcbW9kZWxzXFwiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgbW9uZ29vc2UgPSByZXF1aXJlKCdtb25nb29zZScpO1xyXG5jb25zdCBTY2hlbWEgPSBtb25nb29zZS5TY2hlbWE7XHJcblxyXG5jb25zdCB3b3JrZXJzU2NoZW1hID0gbmV3IFNjaGVtYSh7XHJcbiAgaWQ6ICBCb29sZWFuLCAvLyBTdHJpbmcgaXMgc2hvcnRoYW5kIGZvciB7dHlwZTogU3RyaW5nfVxyXG4gIG5hbWU6IFN0cmluZyxcclxuICBlbWFpbDogICBTdHJpbmcsXHJcbiAgcGFzc3dvcmQ6ICAgU3RyaW5nLFxyXG4gIGNvdXBvbl9jb2RlOiAgIFN0cmluZyxcclxuICBqb2luZGF0ZTogICBEYXRlXHJcbn0pO1xyXG5jb25zdCB3b3JrZXJzID0gbW9uZ29vc2UubW9kZWwoJ3dvcmtlcnMnLCB3b3JrZXJzU2NoZW1hKTtcclxubW9kdWxlLmV4cG9ydHMgPSB7IHdvcmtlcnMsd29ya2Vyc1NjaGVtYSB9IDsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "workers.js"
      ],
      "names": [
        "mongoose",
        "require",
        "Schema",
        "workersSchema",
        "id",
        "Boolean",
        "name",
        "String",
        "email",
        "password",
        "coupon_code",
        "joindate",
        "Date",
        "workers",
        "model",
        "module",
        "exports"
      ],
      "mappings": "AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAtB;;AACA,MAAMC,MAAM,GAAGF,QAAQ,CAACE,MAAxB;AAEA,MAAMC,aAAa,GAAG,IAAID,MAAJ,CAAW;AAC/BE,EAAAA,EAAE,EAAGC,OAD0B;AACjB;AACdC,EAAAA,IAAI,EAAEC,MAFyB;AAG/BC,EAAAA,KAAK,EAAID,MAHsB;AAI/BE,EAAAA,QAAQ,EAAIF,MAJmB;AAK/BG,EAAAA,WAAW,EAAIH,MALgB;AAM/BI,EAAAA,QAAQ,EAAIC;AANmB,CAAX,CAAtB;AAQA,MAAMC,OAAO,GAAGb,QAAQ,CAACc,KAAT,CAAe,SAAf,EAA0BX,aAA1B,CAAhB;AACAY,MAAM,CAACC,OAAP,GAAiB;AAAEH,EAAAA,OAAF;AAAUV,EAAAA;AAAV,CAAjB",
      "sourceRoot": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi\\models\\",
      "sourcesContent": [
        "var mongoose = require('mongoose');\r\nconst Schema = mongoose.Schema;\r\n\r\nconst workersSchema = new Schema({\r\n  id:  Boolean, // String is shorthand for {type: String}\r\n  name: String,\r\n  email:   String,\r\n  password:   String,\r\n  coupon_code:   String,\r\n  joindate:   Date\r\n});\r\nconst workers = mongoose.model('workers', workersSchema);\r\nmodule.exports = { workers,workersSchema } ;"
      ]
    },
    "sourceType": "module",
    "mtime": 1608803438432
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Codenomad\\\\Desktop\\\\boom-advertise\\\\boom-advertise\\\\serverapi\\\\config\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Codenomad\\\\Desktop\\\\boom-advertise\\\\boom-advertise\\\\serverapi\",\"filename\":\"C:\\\\Users\\\\Codenomad\\\\Desktop\\\\boom-advertise\\\\boom-advertise\\\\serverapi\\\\config\\\\email.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Codenomad\\\\Desktop\\\\boom-advertise\\\\boom-advertise\\\\serverapi\",\"plugins\":[],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi\\config\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi",
      "filename": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi\\config\\email.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi\\config\\email.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi\\config\\email.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi\\config\\",
        "sourceFileName": "email.js"
      }
    },
    "ast": null,
    "code": "var config = {};\nconfig.email = 'deligoch@gmail.com';\nconfig.password = 'ifwmxlltkurvvctb';\nconfig.adminemail = 'deligoch@gmail.com';\nconfig.url = 'http://boomadvertise.com/';\nconfig.adminurl = 'http://boomadvertise.com/';\nmodule.exports = config; // MAIL_DRIVER=smtp\n// MAIL_HOST=email-smtp.ap-south-1.amazonaws.com\n// MAIL_PORT=587\n// MAIL_ENCRYPTION=tls\n// MAIL_USERNAME=AKIAREDTCB4G4N4SJUKF\n// MAIL_PASSWORD=BFz7nWPoZc0jAYpUr5FkCeZsYpVYyTwjnuILc0vE3EaP\n// host : smtp.gmail.com\n// email port :587\n// email : deligoch@gmail.com\n// MAIL_ENCRYPTION : tls\n// email_username : deligoch@gmail.com\n// email pass : ifwmxlltkurvvctb\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImVtYWlsLmpzIl0sIm5hbWVzIjpbImNvbmZpZyIsImVtYWlsIiwicGFzc3dvcmQiLCJhZG1pbmVtYWlsIiwidXJsIiwiYWRtaW51cmwiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQSxJQUFJQSxNQUFNLEdBQUcsRUFBYjtBQUdBQSxNQUFNLENBQUNDLEtBQVAsR0FBZSxvQkFBZjtBQUNBRCxNQUFNLENBQUNFLFFBQVAsR0FBaUIsa0JBQWpCO0FBRUFGLE1BQU0sQ0FBQ0csVUFBUCxHQUFrQixvQkFBbEI7QUFDQUgsTUFBTSxDQUFDSSxHQUFQLEdBQVcsMkJBQVg7QUFDQUosTUFBTSxDQUFDSyxRQUFQLEdBQWdCLDJCQUFoQjtBQUNBQyxNQUFNLENBQUNDLE9BQVAsR0FBaUJQLE1BQWpCLEMsQ0FHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxDb2Rlbm9tYWRcXERlc2t0b3BcXGJvb20tYWR2ZXJ0aXNlXFxib29tLWFkdmVydGlzZVxcc2VydmVyYXBpXFxjb25maWdcXCIsInNvdXJjZXNDb250ZW50IjpbInZhciBjb25maWcgPSB7fTtcclxuXHJcblxyXG5jb25maWcuZW1haWwgPSAnZGVsaWdvY2hAZ21haWwuY29tJ1xyXG5jb25maWcucGFzc3dvcmQ9ICdpZndteGxsdGt1cnZ2Y3RiJ1xyXG5cclxuY29uZmlnLmFkbWluZW1haWw9J2RlbGlnb2NoQGdtYWlsLmNvbSdcclxuY29uZmlnLnVybD0naHR0cDovL2Jvb21hZHZlcnRpc2UuY29tLydcclxuY29uZmlnLmFkbWludXJsPSdodHRwOi8vYm9vbWFkdmVydGlzZS5jb20vJ1xyXG5tb2R1bGUuZXhwb3J0cyA9IGNvbmZpZztcclxuXHJcblxyXG4vLyBNQUlMX0RSSVZFUj1zbXRwXHJcbi8vIE1BSUxfSE9TVD1lbWFpbC1zbXRwLmFwLXNvdXRoLTEuYW1hem9uYXdzLmNvbVxyXG4vLyBNQUlMX1BPUlQ9NTg3XHJcbi8vIE1BSUxfRU5DUllQVElPTj10bHNcclxuLy8gTUFJTF9VU0VSTkFNRT1BS0lBUkVEVENCNEc0TjRTSlVLRlxyXG4vLyBNQUlMX1BBU1NXT1JEPUJGejduV1BvWmMwakFZcFVyNUZrQ2Vac1lwVll5VHdqbnVJTGMwdkUzRWFQXHJcbi8vIGhvc3QgOiBzbXRwLmdtYWlsLmNvbVxyXG4vLyBlbWFpbCBwb3J0IDo1ODdcclxuLy8gZW1haWwgOiBkZWxpZ29jaEBnbWFpbC5jb21cclxuLy8gTUFJTF9FTkNSWVBUSU9OIDogdGxzXHJcbi8vIGVtYWlsX3VzZXJuYW1lIDogZGVsaWdvY2hAZ21haWwuY29tXHJcbi8vIGVtYWlsIHBhc3MgOiBpZndteGxsdGt1cnZ2Y3RiXHJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "email.js"
      ],
      "names": [
        "config",
        "email",
        "password",
        "adminemail",
        "url",
        "adminurl",
        "module",
        "exports"
      ],
      "mappings": "AAAA,IAAIA,MAAM,GAAG,EAAb;AAGAA,MAAM,CAACC,KAAP,GAAe,oBAAf;AACAD,MAAM,CAACE,QAAP,GAAiB,kBAAjB;AAEAF,MAAM,CAACG,UAAP,GAAkB,oBAAlB;AACAH,MAAM,CAACI,GAAP,GAAW,2BAAX;AACAJ,MAAM,CAACK,QAAP,GAAgB,2BAAhB;AACAC,MAAM,CAACC,OAAP,GAAiBP,MAAjB,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA",
      "sourceRoot": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi\\config\\",
      "sourcesContent": [
        "var config = {};\r\n\r\n\r\nconfig.email = 'deligoch@gmail.com'\r\nconfig.password= 'ifwmxlltkurvvctb'\r\n\r\nconfig.adminemail='deligoch@gmail.com'\r\nconfig.url='http://boomadvertise.com/'\r\nconfig.adminurl='http://boomadvertise.com/'\r\nmodule.exports = config;\r\n\r\n\r\n// MAIL_DRIVER=smtp\r\n// MAIL_HOST=email-smtp.ap-south-1.amazonaws.com\r\n// MAIL_PORT=587\r\n// MAIL_ENCRYPTION=tls\r\n// MAIL_USERNAME=AKIAREDTCB4G4N4SJUKF\r\n// MAIL_PASSWORD=BFz7nWPoZc0jAYpUr5FkCeZsYpVYyTwjnuILc0vE3EaP\r\n// host : smtp.gmail.com\r\n// email port :587\r\n// email : deligoch@gmail.com\r\n// MAIL_ENCRYPTION : tls\r\n// email_username : deligoch@gmail.com\r\n// email pass : ifwmxlltkurvvctb\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1608722304506
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Codenomad\\\\Desktop\\\\boom-advertise\\\\boom-advertise\\\\serverapi\\\\routes\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Codenomad\\\\Desktop\\\\boom-advertise\\\\boom-advertise\\\\serverapi\",\"filename\":\"C:\\\\Users\\\\Codenomad\\\\Desktop\\\\boom-advertise\\\\boom-advertise\\\\serverapi\\\\routes\\\\influencers.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Codenomad\\\\Desktop\\\\boom-advertise\\\\boom-advertise\\\\serverapi\",\"plugins\":[],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi\\routes\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi",
      "filename": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi\\routes\\influencers.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi\\routes\\influencers.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi\\routes\\influencers.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi\\routes\\",
        "sourceFileName": "influencers.js"
      }
    },
    "ast": null,
    "code": "var express = require('express');\n\nvar router = express.Router();\n\nvar mongoose = require('mongoose');\n\nconst influencer = require('../models/influencers');\n\nconst influencers_data = require('../models/influencers_data'); //const email = require('../config/email');\n//const nodemailer = require('nodemailer');\n\n\nvar passwordHash = require('password-hash');\n\nconst {\n  ObjectId\n} = require('mongodb'); //process.env.NODE_TLS_REJECT_UNAUTHORIZED = \"1\";\n\n\nrouter.post('/register', async function (req, res) {\n  console.log(req.body.influencer_signup);\n  var influencerCreate = new influencer.influencers(req.body.influencer_signup);\n  var influencerData = new influencers_data.influencers_data(req.body.influencer_signup);\n  var datetime = new Date();\n  let pass = passwordHash.generate(req.body.influencer_signup.password);\n  influencerCreate.joindate = datetime;\n  influencerCreate.password = pass;\n  influencerCreate.tiktok = req.body.influencer_signup.tiktok;\n  influencerCreate.instagram = req.body.influencer_signup.insta;\n  influencerCreate.facebook = req.body.influencer_signup.fb;\n  influencerCreate.twitter = req.body.influencer_signup.twitter;\n  influencerData.twitterfollowers = req.body.influencer_signup.twitter_followers;\n  influencerData.tiktokfollowers = req.body.influencer_signup.tiktok_followers;\n  influencerData.facebookfollowers = req.body.influencer_signup.fb_followers;\n  influencerData.instagramfollowers = req.body.influencer_signup.insta_followers;\n  influencer.influencers.findOne({\n    email: req.body.influencer_signup.email\n  }, function (err, influencers) {\n    if (err) res.json({\n      status: \"failure\",\n      statusCode: 100,\n      msg: err\n    });\n\n    if (influencers) {\n      console.log(influencers);\n      res.json({\n        status: \"failure\",\n        statusCode: 100,\n        msg: \"Email already exists!!\"\n      });\n    } else {\n      influencer.influencers.findOne({\n        name: req.body.influencer_signup.name\n      }, function (err, influencers) {\n        if (err) res.json({\n          status: \"failure\",\n          statusCode: 100,\n          msg: err\n        });\n\n        if (influencers) {\n          console.log(influencers);\n          res.json({\n            status: \"failure\",\n            statusCode: 100,\n            msg: \"Username already exists!!\"\n          });\n        } else {\n          influencerCreate.save(function (err, influencer_res) {\n            influencerData.influencerid = influencer_res['_id'];\n            influencerData.influencermatchid = influencer_res['_id'];\n            influencerData.save(function (err1, influ_data_res) {\n              if (err || err1) res.json({\n                status: \"failure\",\n                statusCode: 100,\n                msg: err\n              });\n              res.json({\n                status: \"success\",\n                statusCode: 200,\n                data: influencer_res,\n                msg: \"Signup & SignIn successfully!\"\n              });\n            });\n          });\n        }\n      });\n    }\n  });\n});\nrouter.get('/test', function (req, res) {\n  res.json(\"it workedvijay\");\n});\nrouter.get('/getInfluencers', function (req, res, next) {\n  influencers_data.influencers_data.aggregate([{\n    \"$lookup\": {\n      \"from\": \"influencers\",\n      \"localField\": \"influencerid\",\n      \"foreignField\": \"_id\",\n      \"as\": \"vals\"\n    }\n  }], function (err, res_data) {\n    if (err) res.json({\n      status: \"failure\",\n      statusCode: 100,\n      error: err\n    });\n    res.json({\n      status: \"success\",\n      statusCode: 200,\n      data: res_data\n    });\n  });\n});\n/**** Trying to get all influencers data as first table influencers ***/\n\nrouter.get('/getInfluencers1', function (req, res, next) {\n  influencer.influencers.aggregate([{\n    \"$lookup\": {\n      \"from\": \"influencers_data\",\n      \"localField\": \"_id\",\n      \"foreignField\": \"influencerid\",\n      \"as\": \"vals\"\n    }\n  }], function (err, res_data) {\n    if (err) res.json({\n      status: \"failure\",\n      statusCode: 100,\n      error: err\n    });\n    res.json({\n      status: \"success\",\n      statusCode: 200,\n      data: res_data\n    });\n  });\n});\nrouter.get('/singleInfluencer', function (req, res) {\n  influencers_data.influencers_data.aggregate([{\n    \"$lookup\": {\n      \"from\": \"influencers\",\n      \"localField\": \"influencerid\",\n      \"foreignField\": \"_id\",\n      \"as\": \"vals\"\n    }\n  }, {\n    \"$match\": {\n      //\"influencermatchid\" : req.body.influencermatchid\n      \"influencermatchid\": \"5ffc1c4779752c2a58fa594e\"\n    }\n  }], function (err, influencer_data) {\n    if (err) res.json({\n      status: \"failure\",\n      statusCode: 100,\n      error: err\n    });\n    res.json({\n      status: \"success\",\n      statusCode: 200,\n      data: influencer_data\n    });\n  });\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "influencers.js"
      ],
      "names": [
        "express",
        "require",
        "router",
        "Router",
        "mongoose",
        "influencer",
        "influencers_data",
        "passwordHash",
        "ObjectId",
        "post",
        "req",
        "res",
        "console",
        "log",
        "body",
        "influencer_signup",
        "influencerCreate",
        "influencers",
        "influencerData",
        "datetime",
        "Date",
        "pass",
        "generate",
        "password",
        "joindate",
        "tiktok",
        "instagram",
        "insta",
        "facebook",
        "fb",
        "twitter",
        "twitterfollowers",
        "twitter_followers",
        "tiktokfollowers",
        "tiktok_followers",
        "facebookfollowers",
        "fb_followers",
        "instagramfollowers",
        "insta_followers",
        "findOne",
        "email",
        "err",
        "json",
        "status",
        "statusCode",
        "msg",
        "name",
        "save",
        "influencer_res",
        "influencerid",
        "influencermatchid",
        "err1",
        "influ_data_res",
        "data",
        "get",
        "next",
        "aggregate",
        "res_data",
        "error",
        "influencer_data",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi\\routes\\",
      "sourcesContent": [
        "\r\nvar express = require('express');\r\nvar router = express.Router();\r\nvar mongoose = require('mongoose');\r\nconst influencer = require('../models/influencers');\r\nconst influencers_data = require('../models/influencers_data');\r\n//const email = require('../config/email');\r\n//const nodemailer = require('nodemailer');\r\nvar passwordHash = require('password-hash');\r\nconst {ObjectId} = require('mongodb'); \r\n\r\n//process.env.NODE_TLS_REJECT_UNAUTHORIZED = \"1\";\r\n\r\nrouter.post('/register', async function(req,res) {\r\n      console.log(req.body.influencer_signup);\r\n      var influencerCreate =  new influencer.influencers(req.body.influencer_signup);\r\n      var influencerData =  new influencers_data.influencers_data(req.body.influencer_signup);\r\n\r\n      var datetime = new Date();\r\n      let pass = passwordHash.generate(req.body.influencer_signup.password)\r\n\r\n      influencerCreate.joindate = datetime\r\n      influencerCreate.password = pass\r\n      influencerCreate.tiktok = req.body.influencer_signup.tiktok\r\n      influencerCreate.instagram = req.body.influencer_signup.insta\r\n      influencerCreate.facebook = req.body.influencer_signup.fb\r\n      influencerCreate.twitter = req.body.influencer_signup.twitter\r\n\r\n      influencerData.twitterfollowers = req.body.influencer_signup.twitter_followers\r\n      influencerData.tiktokfollowers = req.body.influencer_signup.tiktok_followers\r\n      influencerData.facebookfollowers = req.body.influencer_signup.fb_followers\r\n      influencerData.instagramfollowers = req.body.influencer_signup.insta_followers\r\n      \r\n      influencer.influencers.findOne({email:req.body.influencer_signup.email}, function(err, influencers) {\r\n        if (err)  res.json({status:\"failure\",statusCode:100,msg:err});\r\n        \r\n        if(influencers){\r\n          console.log(influencers)\r\n          res.json({status:\"failure\",statusCode:100,msg:\"Email already exists!!\"});\r\n        }else{\r\n            influencer.influencers.findOne({name:req.body.influencer_signup.name}, function(err, influencers) {\r\n            if (err)  res.json({status:\"failure\",statusCode:100,msg:err});\r\n        \r\n            if(influencers){\r\n              console.log(influencers)\r\n              res.json({status:\"failure\",statusCode:100,msg:\"Username already exists!!\"});\r\n            }\r\n            else{\r\n              \r\n                influencerCreate.save(function (err, influencer_res) {\r\n                  influencerData.influencerid = influencer_res['_id']\r\n                  influencerData.influencermatchid = influencer_res['_id']\r\n                  influencerData.save(function (err1, influ_data_res) {\r\n                    if (err || err1) res.json({status:\"failure\",statusCode:100,msg:err});\r\n                    res.json({status:\"success\",statusCode:200,data:influencer_res,msg:\"Signup & SignIn successfully!\"});\r\n                  });\r\n                });\r\n            }\r\n          })\r\n        }\r\n      }); \r\n      \r\n    });\r\n\r\n    router.get('/test', function(req,res) {\r\n      res.json(\"it workedvijay\");\r\n    });\r\n\r\n    router.get('/getInfluencers', function(req, res, next) {\r\n        influencers_data.influencers_data.aggregate([\r\n            { \"$lookup\": {\r\n                    \"from\": \"influencers\",\r\n                    \"localField\": \"influencerid\",\r\n                    \"foreignField\": \"_id\",\r\n                    \"as\": \"vals\"\r\n                  }\r\n            }\r\n\r\n            ], function(err, res_data) {\r\n              if (err)  res.json({status:\"failure\",statusCode:100,error:err});\r\n                res.json({status:\"success\",statusCode:200,data:res_data});\r\n            })\r\n\r\n    });\r\n\r\n    /**** Trying to get all influencers data as first table influencers ***/\r\n      router.get('/getInfluencers1', function(req, res, next) {\r\n            influencer.influencers.aggregate([\r\n              { \"$lookup\": {\r\n                      \"from\": \"influencers_data\",\r\n                      \"localField\": \"_id\",\r\n                      \"foreignField\": \"influencerid\",\r\n                      \"as\": \"vals\"\r\n                    }\r\n              }\r\n              ], function(err, res_data) {\r\n                  if (err)  res.json({status:\"failure\",statusCode:100,error:err});\r\n                    res.json({status:\"success\",statusCode:200,data:res_data});\r\n                  })\r\n      });\r\n\r\n     router.get('/singleInfluencer', function(req, res) {\r\n        influencers_data.influencers_data.aggregate(\r\n            [\r\n              {\r\n                \"$lookup\":{\r\n\r\n                  \"from\": \"influencers\",\r\n                  \"localField\": \"influencerid\",\r\n                  \"foreignField\": \"_id\",\r\n                  \"as\": \"vals\"\r\n              }}\r\n              ,\r\n              {\r\n                \"$match\":{\r\n                  //\"influencermatchid\" : req.body.influencermatchid\r\n                  \"influencermatchid\" : \"5ffc1c4779752c2a58fa594e\"\r\n                }\r\n              }\r\n          ]\r\n            ,function(err,influencer_data){\r\n            if(err) res.json({status:\"failure\",statusCode:100,error:err});\r\n        \r\n            res.json({status:\"success\",statusCode:200,data:influencer_data});\r\n          });\r\n      });\r\n\r\n  \r\n    module.exports = router;"
      ]
    },
    "sourceType": "module",
    "mtime": 1610531610034
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Codenomad\\\\Desktop\\\\boom-advertise\\\\boom-advertise\\\\serverapi\\\\models\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Codenomad\\\\Desktop\\\\boom-advertise\\\\boom-advertise\\\\serverapi\",\"filename\":\"C:\\\\Users\\\\Codenomad\\\\Desktop\\\\boom-advertise\\\\boom-advertise\\\\serverapi\\\\models\\\\influencers.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Codenomad\\\\Desktop\\\\boom-advertise\\\\boom-advertise\\\\serverapi\",\"plugins\":[],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi\\models\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi",
      "filename": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi\\models\\influencers.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi\\models\\influencers.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi\\models\\influencers.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi\\models\\",
        "sourceFileName": "influencers.js"
      }
    },
    "ast": null,
    "code": "var mongoose = require('mongoose');\n\nconst Schema = mongoose.Schema;\nconst influencersSchema = new Schema({\n  id: String,\n  // String is shorthand for {type: String}\n  name: String,\n  email: String,\n  password: String,\n  tiktok: Boolean,\n  instagram: Boolean,\n  facebook: Boolean,\n  twitter: Boolean,\n  joindate: Date\n});\nconst influencers = mongoose.model('influencers', influencersSchema);\nmodule.exports = {\n  influencers,\n  influencersSchema\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZmx1ZW5jZXJzLmpzIl0sIm5hbWVzIjpbIm1vbmdvb3NlIiwicmVxdWlyZSIsIlNjaGVtYSIsImluZmx1ZW5jZXJzU2NoZW1hIiwiaWQiLCJTdHJpbmciLCJuYW1lIiwiZW1haWwiLCJwYXNzd29yZCIsInRpa3RvayIsIkJvb2xlYW4iLCJpbnN0YWdyYW0iLCJmYWNlYm9vayIsInR3aXR0ZXIiLCJqb2luZGF0ZSIsIkRhdGUiLCJpbmZsdWVuY2VycyIsIm1vZGVsIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsSUFBSUEsUUFBUSxHQUFHQyxPQUFPLENBQUMsVUFBRCxDQUF0Qjs7QUFDQSxNQUFNQyxNQUFNLEdBQUdGLFFBQVEsQ0FBQ0UsTUFBeEI7QUFFQSxNQUFNQyxpQkFBaUIsR0FBRyxJQUFJRCxNQUFKLENBQVc7QUFDbkNFLEVBQUFBLEVBQUUsRUFBR0MsTUFEOEI7QUFDdEI7QUFDYkMsRUFBQUEsSUFBSSxFQUFFRCxNQUY2QjtBQUduQ0UsRUFBQUEsS0FBSyxFQUFJRixNQUgwQjtBQUluQ0csRUFBQUEsUUFBUSxFQUFJSCxNQUp1QjtBQUtuQ0ksRUFBQUEsTUFBTSxFQUFJQyxPQUx5QjtBQU1uQ0MsRUFBQUEsU0FBUyxFQUFJRCxPQU5zQjtBQU9uQ0UsRUFBQUEsUUFBUSxFQUFJRixPQVB1QjtBQVFuQ0csRUFBQUEsT0FBTyxFQUFJSCxPQVJ3QjtBQVNuQ0ksRUFBQUEsUUFBUSxFQUFJQztBQVR1QixDQUFYLENBQTFCO0FBWUEsTUFBT0MsV0FBVyxHQUFHaEIsUUFBUSxDQUFDaUIsS0FBVCxDQUFlLGFBQWYsRUFBOEJkLGlCQUE5QixDQUFyQjtBQUNBZSxNQUFNLENBQUNDLE9BQVAsR0FBaUI7QUFBRUgsRUFBQUEsV0FBRjtBQUFjYixFQUFBQTtBQUFkLENBQWpCIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcQ29kZW5vbWFkXFxEZXNrdG9wXFxib29tLWFkdmVydGlzZVxcYm9vbS1hZHZlcnRpc2VcXHNlcnZlcmFwaVxcbW9kZWxzXFwiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgbW9uZ29vc2UgPSByZXF1aXJlKCdtb25nb29zZScpO1xyXG5jb25zdCBTY2hlbWEgPSBtb25nb29zZS5TY2hlbWE7XHJcblxyXG5jb25zdCBpbmZsdWVuY2Vyc1NjaGVtYSA9IG5ldyBTY2hlbWEoe1xyXG4gIGlkOiAgU3RyaW5nLCAvLyBTdHJpbmcgaXMgc2hvcnRoYW5kIGZvciB7dHlwZTogU3RyaW5nfVxyXG4gIG5hbWU6IFN0cmluZyxcclxuICBlbWFpbDogICBTdHJpbmcsXHJcbiAgcGFzc3dvcmQ6ICAgU3RyaW5nLFxyXG4gIHRpa3RvazogICBCb29sZWFuLFxyXG4gIGluc3RhZ3JhbTogICBCb29sZWFuLFxyXG4gIGZhY2Vib29rOiAgIEJvb2xlYW4sXHJcbiAgdHdpdHRlcjogICBCb29sZWFuLFxyXG4gIGpvaW5kYXRlOiAgIERhdGUsXHJcbn1cclxuKTtcclxuY29uc3QgIGluZmx1ZW5jZXJzID0gbW9uZ29vc2UubW9kZWwoJ2luZmx1ZW5jZXJzJywgaW5mbHVlbmNlcnNTY2hlbWEpO1xyXG5tb2R1bGUuZXhwb3J0cyA9IHsgaW5mbHVlbmNlcnMsaW5mbHVlbmNlcnNTY2hlbWEgfSA7Il19",
    "map": {
      "version": 3,
      "sources": [
        "influencers.js"
      ],
      "names": [
        "mongoose",
        "require",
        "Schema",
        "influencersSchema",
        "id",
        "String",
        "name",
        "email",
        "password",
        "tiktok",
        "Boolean",
        "instagram",
        "facebook",
        "twitter",
        "joindate",
        "Date",
        "influencers",
        "model",
        "module",
        "exports"
      ],
      "mappings": "AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAtB;;AACA,MAAMC,MAAM,GAAGF,QAAQ,CAACE,MAAxB;AAEA,MAAMC,iBAAiB,GAAG,IAAID,MAAJ,CAAW;AACnCE,EAAAA,EAAE,EAAGC,MAD8B;AACtB;AACbC,EAAAA,IAAI,EAAED,MAF6B;AAGnCE,EAAAA,KAAK,EAAIF,MAH0B;AAInCG,EAAAA,QAAQ,EAAIH,MAJuB;AAKnCI,EAAAA,MAAM,EAAIC,OALyB;AAMnCC,EAAAA,SAAS,EAAID,OANsB;AAOnCE,EAAAA,QAAQ,EAAIF,OAPuB;AAQnCG,EAAAA,OAAO,EAAIH,OARwB;AASnCI,EAAAA,QAAQ,EAAIC;AATuB,CAAX,CAA1B;AAYA,MAAOC,WAAW,GAAGhB,QAAQ,CAACiB,KAAT,CAAe,aAAf,EAA8Bd,iBAA9B,CAArB;AACAe,MAAM,CAACC,OAAP,GAAiB;AAAEH,EAAAA,WAAF;AAAcb,EAAAA;AAAd,CAAjB",
      "sourceRoot": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi\\models\\",
      "sourcesContent": [
        "var mongoose = require('mongoose');\r\nconst Schema = mongoose.Schema;\r\n\r\nconst influencersSchema = new Schema({\r\n  id:  String, // String is shorthand for {type: String}\r\n  name: String,\r\n  email:   String,\r\n  password:   String,\r\n  tiktok:   Boolean,\r\n  instagram:   Boolean,\r\n  facebook:   Boolean,\r\n  twitter:   Boolean,\r\n  joindate:   Date,\r\n}\r\n);\r\nconst  influencers = mongoose.model('influencers', influencersSchema);\r\nmodule.exports = { influencers,influencersSchema } ;"
      ]
    },
    "sourceType": "module",
    "mtime": 1609322948471
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Codenomad\\\\Desktop\\\\boom-advertise\\\\boom-advertise\\\\serverapi\\\\models\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Codenomad\\\\Desktop\\\\boom-advertise\\\\boom-advertise\\\\serverapi\",\"filename\":\"C:\\\\Users\\\\Codenomad\\\\Desktop\\\\boom-advertise\\\\boom-advertise\\\\serverapi\\\\models\\\\influencers_data.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Codenomad\\\\Desktop\\\\boom-advertise\\\\boom-advertise\\\\serverapi\",\"plugins\":[],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi\\models\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi",
      "filename": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi\\models\\influencers_data.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi\\models\\influencers_data.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi\\models\\influencers_data.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi\\models\\",
        "sourceFileName": "influencers_data.js"
      }
    },
    "ast": null,
    "code": "var mongoose = require('mongoose');\n\nconst Schema = mongoose.Schema;\nconst influencers_dataSchema = new Schema({\n  id: String,\n  // String is shorthand for {type: String}\n  influencerid: {\n    type: mongoose.Schema.ObjectId\n  },\n  influencermatchid: String,\n  tiktokfollowers: String,\n  instagramfollowers: String,\n  facebookfollowers: String,\n  twitterfollowers: String\n});\nconst influencers_data = mongoose.model('influencers_data', influencers_dataSchema);\nmodule.exports = {\n  influencers_data,\n  influencers_dataSchema\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZmx1ZW5jZXJzX2RhdGEuanMiXSwibmFtZXMiOlsibW9uZ29vc2UiLCJyZXF1aXJlIiwiU2NoZW1hIiwiaW5mbHVlbmNlcnNfZGF0YVNjaGVtYSIsImlkIiwiU3RyaW5nIiwiaW5mbHVlbmNlcmlkIiwidHlwZSIsIk9iamVjdElkIiwiaW5mbHVlbmNlcm1hdGNoaWQiLCJ0aWt0b2tmb2xsb3dlcnMiLCJpbnN0YWdyYW1mb2xsb3dlcnMiLCJmYWNlYm9va2ZvbGxvd2VycyIsInR3aXR0ZXJmb2xsb3dlcnMiLCJpbmZsdWVuY2Vyc19kYXRhIiwibW9kZWwiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQSxJQUFJQSxRQUFRLEdBQUdDLE9BQU8sQ0FBQyxVQUFELENBQXRCOztBQUNBLE1BQU1DLE1BQU0sR0FBR0YsUUFBUSxDQUFDRSxNQUF4QjtBQUVBLE1BQU1DLHNCQUFzQixHQUFHLElBQUlELE1BQUosQ0FBVztBQUN4Q0UsRUFBQUEsRUFBRSxFQUFHQyxNQURtQztBQUMzQjtBQUNiQyxFQUFBQSxZQUFZLEVBQUU7QUFBRUMsSUFBQUEsSUFBSSxFQUFFUCxRQUFRLENBQUNFLE1BQVQsQ0FBZ0JNO0FBQXhCLEdBRjBCO0FBR3hDQyxFQUFBQSxpQkFBaUIsRUFBRUosTUFIcUI7QUFJeENLLEVBQUFBLGVBQWUsRUFBSUwsTUFKcUI7QUFLeENNLEVBQUFBLGtCQUFrQixFQUFJTixNQUxrQjtBQU14Q08sRUFBQUEsaUJBQWlCLEVBQUlQLE1BTm1CO0FBT3hDUSxFQUFBQSxnQkFBZ0IsRUFBSVI7QUFQb0IsQ0FBWCxDQUEvQjtBQVNBLE1BQU9TLGdCQUFnQixHQUFHZCxRQUFRLENBQUNlLEtBQVQsQ0FBZSxrQkFBZixFQUFtQ1osc0JBQW5DLENBQTFCO0FBQ0FhLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQjtBQUFFSCxFQUFBQSxnQkFBRjtBQUFtQlgsRUFBQUE7QUFBbkIsQ0FBakIiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxDb2Rlbm9tYWRcXERlc2t0b3BcXGJvb20tYWR2ZXJ0aXNlXFxib29tLWFkdmVydGlzZVxcc2VydmVyYXBpXFxtb2RlbHNcXCIsInNvdXJjZXNDb250ZW50IjpbInZhciBtb25nb29zZSA9IHJlcXVpcmUoJ21vbmdvb3NlJyk7XHJcbmNvbnN0IFNjaGVtYSA9IG1vbmdvb3NlLlNjaGVtYTtcclxuXHJcbmNvbnN0IGluZmx1ZW5jZXJzX2RhdGFTY2hlbWEgPSBuZXcgU2NoZW1hKHtcclxuICBpZDogIFN0cmluZywgLy8gU3RyaW5nIGlzIHNob3J0aGFuZCBmb3Ige3R5cGU6IFN0cmluZ31cclxuICBpbmZsdWVuY2VyaWQ6IHsgdHlwZTogbW9uZ29vc2UuU2NoZW1hLk9iamVjdElkfSxcclxuICBpbmZsdWVuY2VybWF0Y2hpZDogU3RyaW5nLFxyXG4gIHRpa3Rva2ZvbGxvd2VyczogICBTdHJpbmcsXHJcbiAgaW5zdGFncmFtZm9sbG93ZXJzOiAgIFN0cmluZyxcclxuICBmYWNlYm9va2ZvbGxvd2VyczogICBTdHJpbmcsXHJcbiAgdHdpdHRlcmZvbGxvd2VyczogICBTdHJpbmdcclxufSk7XHJcbmNvbnN0ICBpbmZsdWVuY2Vyc19kYXRhID0gbW9uZ29vc2UubW9kZWwoJ2luZmx1ZW5jZXJzX2RhdGEnLCBpbmZsdWVuY2Vyc19kYXRhU2NoZW1hKTtcclxubW9kdWxlLmV4cG9ydHMgPSB7IGluZmx1ZW5jZXJzX2RhdGEsaW5mbHVlbmNlcnNfZGF0YVNjaGVtYSB9IDsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "influencers_data.js"
      ],
      "names": [
        "mongoose",
        "require",
        "Schema",
        "influencers_dataSchema",
        "id",
        "String",
        "influencerid",
        "type",
        "ObjectId",
        "influencermatchid",
        "tiktokfollowers",
        "instagramfollowers",
        "facebookfollowers",
        "twitterfollowers",
        "influencers_data",
        "model",
        "module",
        "exports"
      ],
      "mappings": "AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAtB;;AACA,MAAMC,MAAM,GAAGF,QAAQ,CAACE,MAAxB;AAEA,MAAMC,sBAAsB,GAAG,IAAID,MAAJ,CAAW;AACxCE,EAAAA,EAAE,EAAGC,MADmC;AAC3B;AACbC,EAAAA,YAAY,EAAE;AAAEC,IAAAA,IAAI,EAAEP,QAAQ,CAACE,MAAT,CAAgBM;AAAxB,GAF0B;AAGxCC,EAAAA,iBAAiB,EAAEJ,MAHqB;AAIxCK,EAAAA,eAAe,EAAIL,MAJqB;AAKxCM,EAAAA,kBAAkB,EAAIN,MALkB;AAMxCO,EAAAA,iBAAiB,EAAIP,MANmB;AAOxCQ,EAAAA,gBAAgB,EAAIR;AAPoB,CAAX,CAA/B;AASA,MAAOS,gBAAgB,GAAGd,QAAQ,CAACe,KAAT,CAAe,kBAAf,EAAmCZ,sBAAnC,CAA1B;AACAa,MAAM,CAACC,OAAP,GAAiB;AAAEH,EAAAA,gBAAF;AAAmBX,EAAAA;AAAnB,CAAjB",
      "sourceRoot": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi\\models\\",
      "sourcesContent": [
        "var mongoose = require('mongoose');\r\nconst Schema = mongoose.Schema;\r\n\r\nconst influencers_dataSchema = new Schema({\r\n  id:  String, // String is shorthand for {type: String}\r\n  influencerid: { type: mongoose.Schema.ObjectId},\r\n  influencermatchid: String,\r\n  tiktokfollowers:   String,\r\n  instagramfollowers:   String,\r\n  facebookfollowers:   String,\r\n  twitterfollowers:   String\r\n});\r\nconst  influencers_data = mongoose.model('influencers_data', influencers_dataSchema);\r\nmodule.exports = { influencers_data,influencers_dataSchema } ;"
      ]
    },
    "sourceType": "module",
    "mtime": 1610357753345
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Codenomad\\\\Desktop\\\\boom-advertise\\\\boom-advertise\\\\serverapi\\\\routes\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Codenomad\\\\Desktop\\\\boom-advertise\\\\boom-advertise\\\\serverapi\",\"filename\":\"C:\\\\Users\\\\Codenomad\\\\Desktop\\\\boom-advertise\\\\boom-advertise\\\\serverapi\\\\routes\\\\login.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Codenomad\\\\Desktop\\\\boom-advertise\\\\boom-advertise\\\\serverapi\",\"plugins\":[],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi\\routes\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi",
      "filename": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi\\routes\\login.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi\\routes\\login.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi\\routes\\login.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi\\routes\\",
        "sourceFileName": "login.js"
      }
    },
    "ast": null,
    "code": "var express = require('express');\n\nvar router = express.Router(); //const nodemailer = require('nodemailer');\n\nvar mongoose = require('mongoose');\n\nconst promoters = require('../models/promoters');\n\nconst influencers = require('../models/influencers');\n\nvar passwordHash = require('password-hash'); //const user = require('../models/users');\n//const email = require('../config/email');\n// const app = express();\n// const cors = require(\"cors\");\n// app.use(function (req, res, next) {\n//     //Enabling CORS\n//     res.header(\"Access-Control-Allow-Origin\", \"*\");\n//     res.header(\"Access-Control-Allow-Methods\", \"GET,HEAD,OPTIONS,POST,PUT\");\n//     res.header(\"Access-Control-Allow-Headers\", \"Origin, X-Requested-With, Content-Type, Accept, x-client-key, x-client-token, x-client-secret, Authorization\");\n//     next();\n// });\n\n\nrouter.post('/', function (req, res) {\n  console.log(req.body.signin);\n\n  if (req.body.signin.user_type == 0) {\n    if (!passwordHash.isHashed(req.body.signin.password)) {\n      var hashedPassword = passwordHash.generate(req.body.signin.password); //console.log(hashedPassword)\n\n      influencers.influencers.find({\n        $or: [{\n          name: req.body.signin.email\n        }, {\n          'email': req.body.signin.email\n        }]\n      }, function (err, influencers) {\n        if (err) {\n          res.json({\n            status: \"failure\",\n            statusCode: 600,\n            msg: err\n          });\n        } else if (influencers.length == 0) {\n          console.log('hii man');\n          console.log(influencers.length);\n          res.json({\n            status: \"failure\",\n            statusCode: 500,\n            msg: \"Invalid Credentials!!!\"\n          });\n        } else {\n          if (passwordHash.verify(req.body.signin.password, influencers[0].password)) {\n            console.log(influencers);\n            res.json({\n              status: \"success\",\n              statusCode: 200,\n              data: influencers,\n              msg: \"Login successfully...\"\n            });\n          } else {\n            res.json({\n              status: \"failure\",\n              statusCode: 100,\n              msg: \"Invalid Credentials!!!\"\n            });\n          }\n        }\n      });\n    }\n  } else {\n    if (!passwordHash.isHashed(req.body.signin.password)) {\n      var hashedPassword = passwordHash.generate(req.body.signin.password); //console.log(hashedPassword)\n\n      promoters.promoters.find({\n        $or: [{\n          name: req.body.signin.email\n        }, {\n          'email': req.body.signin.email\n        }]\n      }, function (err, promoters) {\n        if (err) {\n          res.json({\n            status: \"failure\",\n            statusCode: 100,\n            msg: err\n          });\n        } else if (promoters.length == 0) {\n          res.json({\n            status: \"failure\",\n            statusCode: 100,\n            msg: \"Invalid Credentials!!!\"\n          });\n        } else {\n          if (passwordHash.verify(req.body.signin.password, promoters[0].password)) {\n            console.log(promoters);\n            res.json({\n              status: \"success\",\n              statusCode: 200,\n              data: promoters,\n              msg: \"Login successfully...\"\n            });\n          } else {\n            res.json({\n              status: \"failure\",\n              statusCode: 100,\n              msg: \"Invalid Credentials!!!\"\n            });\n          }\n        }\n      });\n    }\n  } // else{\n  // promoters.promoters\n  // .find({ $or : [{name:req.body.signin.email},{'email':req.body.signin.email}]},function (err, promoters) {\n  //     if (err) {\n  //         res.json({status:\"failure\",statusCode:100,data:err});\n  //     }else if(promoters.length==0){\n  //       res.json({status:\"failure\",statusCode:100,data:\"Invalid Credentials!!!\"});\n  //       }\n  //       else{\n  //         if(passwordHash.verify(req.body.signin.password, promoters[0].password)){\n  //           console.log(promoters)\n  //           res.json({status:\"success\",statusCode:200,data:promoters});\n  //         }\n  //       }\n  //   });\n  // } \n\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxvZ2luLmpzIl0sIm5hbWVzIjpbImV4cHJlc3MiLCJyZXF1aXJlIiwicm91dGVyIiwiUm91dGVyIiwibW9uZ29vc2UiLCJwcm9tb3RlcnMiLCJpbmZsdWVuY2VycyIsInBhc3N3b3JkSGFzaCIsInBvc3QiLCJyZXEiLCJyZXMiLCJjb25zb2xlIiwibG9nIiwiYm9keSIsInNpZ25pbiIsInVzZXJfdHlwZSIsImlzSGFzaGVkIiwicGFzc3dvcmQiLCJoYXNoZWRQYXNzd29yZCIsImdlbmVyYXRlIiwiZmluZCIsIiRvciIsIm5hbWUiLCJlbWFpbCIsImVyciIsImpzb24iLCJzdGF0dXMiLCJzdGF0dXNDb2RlIiwibXNnIiwibGVuZ3RoIiwidmVyaWZ5IiwiZGF0YSIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUNBLElBQUlBLE9BQU8sR0FBR0MsT0FBTyxDQUFDLFNBQUQsQ0FBckI7O0FBQ0EsSUFBSUMsTUFBTSxHQUFHRixPQUFPLENBQUNHLE1BQVIsRUFBYixDLENBQ0E7O0FBQ0EsSUFBSUMsUUFBUSxHQUFHSCxPQUFPLENBQUMsVUFBRCxDQUF0Qjs7QUFDQSxNQUFNSSxTQUFTLEdBQUdKLE9BQU8sQ0FBQyxxQkFBRCxDQUF6Qjs7QUFDQSxNQUFNSyxXQUFXLEdBQUdMLE9BQU8sQ0FBQyx1QkFBRCxDQUEzQjs7QUFDQSxJQUFJTSxZQUFZLEdBQUdOLE9BQU8sQ0FBQyxlQUFELENBQTFCLEMsQ0FDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFHQUMsTUFBTSxDQUFDTSxJQUFQLENBQVksR0FBWixFQUFpQixVQUFTQyxHQUFULEVBQWNDLEdBQWQsRUFBbUI7QUFDakNDLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZSCxHQUFHLENBQUNJLElBQUosQ0FBU0MsTUFBckI7O0FBQ0QsTUFBR0wsR0FBRyxDQUFDSSxJQUFKLENBQVNDLE1BQVQsQ0FBZ0JDLFNBQWhCLElBQTZCLENBQWhDLEVB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QTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0QsQ0FsRUg7QUFvRUVJLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQi9CLE1BQWpCIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcQ29kZW5vbWFkXFxEZXNrdG9wXFxib29tLWFkdmVydGlzZVxcYm9vbS1hZHZlcnRpc2VcXHNlcnZlcmFwaVxccm91dGVzXFwiLCJzb3VyY2VzQ29udGVudCI6WyJcclxudmFyIGV4cHJlc3MgPSByZXF1aXJlKCdleHByZXNzJyk7XHJcbnZhciByb3V0ZXIgPSBleHByZXNzLlJvdXRlcigpO1xyXG4vL2NvbnN0IG5vZGVtYWlsZXIgPSByZXF1aXJlKCdub2RlbWFpbGVyJyk7XHJcbnZhciBtb25nb29zZSA9IHJlcXVpcmUoJ21vbmdvb3NlJyk7XHJcbmNvbnN0IHByb21vdGVycyA9IHJlcXVpcmUoJy4uL21vZGVscy9wcm9tb3RlcnMnKTtcclxuY29uc3QgaW5mbHVlbmNlcnMgPSByZXF1aXJlKCcuLi9tb2RlbHMvaW5mbHVlbmNlcnMnKTtcclxudmFyIHBhc3N3b3JkSGFzaCA9IHJlcXVpcmUoJ3Bhc3N3b3JkLWhhc2gnKTtcclxuLy9jb25zdCB1c2VyID0gcmVxdWlyZSgnLi4vbW9kZWxzL3VzZXJzJyk7XHJcbi8vY29uc3QgZW1haWwgPSByZXF1aXJlKCcuLi9jb25maWcvZW1haWwnKTtcclxuLy8gY29uc3QgYXBwID0gZXhwcmVzcygpO1xyXG4vLyBjb25zdCBjb3JzID0gcmVxdWlyZShcImNvcnNcIik7XHJcbi8vIGFwcC51c2UoZnVuY3Rpb24gKHJlcSwgcmVzLCBuZXh0KSB7XHJcbi8vICAgICAvL0VuYWJsaW5nIENPUlNcclxuLy8gICAgIHJlcy5oZWFkZXIoXCJBY2Nlc3MtQ29udHJvbC1BbGxvdy1PcmlnaW5cIiwgXCIqXCIpO1xyXG4vLyAgICAgcmVzLmhlYWRlcihcIkFjY2Vzcy1Db250cm9sLUFsbG93LU1ldGhvZHNcIiwgXCJHRVQsSEVBRCxPUFRJT05TLFBPU1QsUFVUXCIpO1xyXG4vLyAgICAgcmVzLmhlYWRlcihcIkFjY2Vzcy1Db250cm9sLUFsbG93LUhlYWRlcnNcIiwgXCJPcmlnaW4sIFgtUmVxdWVzdGVkLVdpdGgsIENvbnRlbnQtVHlwZSwgQWNjZXB0LCB4LWNsaWVudC1rZXksIHgtY2xpZW50LXRva2VuLCB4LWNsaWVudC1zZWNyZXQsIEF1dGhvcml6YXRpb25cIik7XHJcbi8vICAgICBuZXh0KCk7XHJcbi8vIH0pO1xyXG5cclxuXHJcbnJvdXRlci5wb3N0KCcvJywgZnVuY3Rpb24ocmVxLCByZXMpIHtcclxuICAgY29uc29sZS5sb2cocmVxLmJvZHkuc2lnbmluKVxyXG4gIGlmKHJlcS5ib2R5LnNpZ25pbi51c2VyX3R5cGUgPT0gMCl7XHJcblxyXG4gICAgaWYoIXBhc3N3b3JkSGFzaC5pc0hhc2hlZChyZXEuYm9keS5zaWduaW4ucGFzc3dvcmQpKXtcclxuICAgICAgdmFyIGhhc2hlZFBhc3N3b3JkID0gcGFzc3dvcmRIYXNoLmdlbmVyYXRlKHJlcS5ib2R5LnNpZ25pbi5wYXNzd29yZCk7XHJcbiAgICAgIC8vY29uc29sZS5sb2coaGFzaGVkUGFzc3dvcmQpXHJcbiAgICAgIGluZmx1ZW5jZXJzLmluZmx1ZW5jZXJzXHJcbiAgICAgICAgLmZpbmQoeyAkb3IgOiBbe25hbWU6cmVxLmJvZHkuc2lnbmluLmVtYWlsfSx7J2VtYWlsJzpyZXEuYm9keS5zaWduaW4uZW1haWx9XX0sZnVuY3Rpb24gKGVyciwgaW5mbHVlbmNlcnMpIHtcclxuICAgICAgICBpZiAoZXJyKSB7XHJcbiAgICAgICAgICAgIHJlcy5qc29uKHtzdGF0dXM6XCJmYWlsdXJlXCIsc3RhdHVzQ29kZTo2MDAsbXNnOmVycn0pO1xyXG4gICAgICAgIH1lbHNlIGlmKGluZmx1ZW5jZXJzLmxlbmd0aD09MCl7XHJcbiAgICAgICAgICBjb25zb2xlLmxvZygnaGlpIG1hbicpO1xyXG4gICAgICAgICAgY29uc29sZS5sb2coaW5mbHVlbmNlcnMubGVuZ3RoKTtcclxuICAgICAgICAgIHJlcy5qc29uKHtzdGF0dXM6XCJmYWlsdXJlXCIsc3RhdHVzQ29kZTo1MDAsbXNnOlwiSW52YWxpZCBDcmVkZW50aWFscyEhIVwifSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgICAgZWxzZXtcclxuICAgICAgICAgICAgaWYocGFzc3dvcmRIYXNoLnZlcmlmeShyZXEuYm9keS5zaWduaW4ucGFzc3dvcmQsIGluZmx1ZW5jZXJzWzBdLnBhc3N3b3JkKSl7XHJcbiAgICAgICAgICAgICAgY29uc29sZS5sb2coaW5mbHVlbmNlcnMpXHJcbiAgICAgICAgICAgICAgcmVzLmpzb24oe3N0YXR1czpcInN1Y2Nlc3NcIixzdGF0dXNDb2RlOjIwMCxkYXRhOmluZmx1ZW5jZXJzLG1zZzpcIkxvZ2luIHN1Y2Nlc3NmdWxseS4uLlwifSk7XHJcbiAgICAgICAgICAgIH1lbHNle1xyXG4gICAgICAgICAgICAgIHJlcy5qc29uKHtzdGF0dXM6XCJmYWlsdXJlXCIsc3RhdHVzQ29kZToxMDAsbXNnOlwiSW52YWxpZCBDcmVkZW50aWFscyEhIVwifSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgIH1cclxuICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gIH1lbHNle1xyXG4gICAgaWYoIXBhc3N3b3JkSGFzaC5pc0hhc2hlZChyZXEuYm9keS5zaWduaW4ucGFzc3dvcmQpKXtcclxuICAgICAgdmFyIGhhc2hlZFBhc3N3b3JkID0gcGFzc3dvcmRIYXNoLmdlbmVyYXRlKHJlcS5ib2R5LnNpZ25pbi5wYXNzd29yZCk7XHJcbiAgICAgIC8vY29uc29sZS5sb2coaGFzaGVkUGFzc3dvcmQpXHJcbiAgICAgIHByb21vdGVycy5wcm9tb3RlcnNcclxuICAgICAgICAuZmluZCh7ICRvciA6IFt7bmFtZTpyZXEuYm9keS5zaWduaW4uZW1haWx9LHsnZW1haWwnOnJlcS5ib2R5LnNpZ25pbi5lbWFpbH1dfSxmdW5jdGlvbiAoZXJyLCBwcm9tb3RlcnMpIHtcclxuICAgICAgICBpZiAoZXJyKSB7XHJcbiAgICAgICAgICAgIHJlcy5qc29uKHtzdGF0dXM6XCJmYWlsdXJlXCIsc3RhdHVzQ29kZToxMDAsbXNnOmVycn0pO1xyXG4gICAgICAgIH1lbHNlIGlmKHByb21vdGVycy5sZW5ndGg9PTApe1xyXG4gICAgICAgICAgcmVzLmpzb24oe3N0YXR1czpcImZhaWx1cmVcIixzdGF0dXNDb2RlOjEwMCxtc2c6XCJJbnZhbGlkIENyZWRlbnRpYWxzISEhXCJ9KTtcclxuICAgICAgICB9XHJcbiAgICAgICAgICBlbHNle1xyXG4gICAgICAgICAgICBpZihwYXNzd29yZEhhc2gudmVyaWZ5KHJlcS5ib2R5LnNpZ25pbi5wYXNzd29yZCwgcHJvbW90ZXJzWzBdLnBhc3N3b3JkKSl7XHJcbiAgICAgICAgICAgICAgY29uc29sZS5sb2cocHJvbW90ZXJzKVxyXG4gICAgICAgICAgICAgIHJlcy5qc29uKHtzdGF0dXM6XCJzdWNjZXNzXCIsc3RhdHVzQ29kZToyMDAsZGF0YTpwcm9tb3RlcnMsbXNnOlwiTG9naW4gc3VjY2Vzc2Z1bGx5Li4uXCJ9KTtcclxuICAgICAgICAgICAgfWVsc2V7XHJcbiAgICAgICAgICAgICAgcmVzLmpzb24oe3N0YXR1czpcImZhaWx1cmVcIixzdGF0dXNDb2RlOjEwMCxtc2c6XCJJbnZhbGlkIENyZWRlbnRpYWxzISEhXCJ9KTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgfVxyXG4gICAgICB9KTtcclxuICAgIH1cclxuICB9XHJcbiAgICAvLyBlbHNle1xyXG4gICAgLy8gcHJvbW90ZXJzLnByb21vdGVyc1xyXG4gICAgLy8gLmZpbmQoeyAkb3IgOiBbe25hbWU6cmVxLmJvZHkuc2lnbmluLmVtYWlsfSx7J2VtYWlsJzpyZXEuYm9keS5zaWduaW4uZW1haWx9XX0sZnVuY3Rpb24gKGVyciwgcHJvbW90ZXJzKSB7XHJcbiAgICAgIFxyXG4gICAgLy8gICAgIGlmIChlcnIpIHtcclxuICAgIC8vICAgICAgICAgcmVzLmpzb24oe3N0YXR1czpcImZhaWx1cmVcIixzdGF0dXNDb2RlOjEwMCxkYXRhOmVycn0pO1xyXG4gICAgLy8gICAgIH1lbHNlIGlmKHByb21vdGVycy5sZW5ndGg9PTApe1xyXG4gICAgLy8gICAgICAgcmVzLmpzb24oe3N0YXR1czpcImZhaWx1cmVcIixzdGF0dXNDb2RlOjEwMCxkYXRhOlwiSW52YWxpZCBDcmVkZW50aWFscyEhIVwifSk7XHJcbiAgICAvLyAgICAgICB9XHJcbiAgICAvLyAgICAgICBlbHNle1xyXG4gICAgLy8gICAgICAgICBpZihwYXNzd29yZEhhc2gudmVyaWZ5KHJlcS5ib2R5LnNpZ25pbi5wYXNzd29yZCwgcHJvbW90ZXJzWzBdLnBhc3N3b3JkKSl7XHJcbiAgICAvLyAgICAgICAgICAgY29uc29sZS5sb2cocHJvbW90ZXJzKVxyXG4gICAgLy8gICAgICAgICAgIHJlcy5qc29uKHtzdGF0dXM6XCJzdWNjZXNzXCIsc3RhdHVzQ29kZToyMDAsZGF0YTpwcm9tb3RlcnN9KTtcclxuICAgIC8vICAgICAgICAgfVxyXG4gICAgLy8gICAgICAgfVxyXG4gICAgLy8gICB9KTtcclxuICAgIC8vIH0gXHJcbiAgfSk7XHJcblxyXG4gIG1vZHVsZS5leHBvcnRzID0gcm91dGVyOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "login.js"
      ],
      "names": [
        "express",
        "require",
        "router",
        "Router",
        "mongoose",
        "promoters",
        "influencers",
        "passwordHash",
        "post",
        "req",
        "res",
        "console",
        "log",
        "body",
        "signin",
        "user_type",
        "isHashed",
        "password",
        "hashedPassword",
        "generate",
        "find",
        "$or",
        "name",
        "email",
        "err",
        "json",
        "status",
        "statusCode",
        "msg",
        "length",
        "verify",
        "data",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi\\routes\\",
      "sourcesContent": [
        "\r\nvar express = require('express');\r\nvar router = express.Router();\r\n//const nodemailer = require('nodemailer');\r\nvar mongoose = require('mongoose');\r\nconst promoters = require('../models/promoters');\r\nconst influencers = require('../models/influencers');\r\nvar passwordHash = require('password-hash');\r\n//const user = require('../models/users');\r\n//const email = require('../config/email');\r\n// const app = express();\r\n// const cors = require(\"cors\");\r\n// app.use(function (req, res, next) {\r\n//     //Enabling CORS\r\n//     res.header(\"Access-Control-Allow-Origin\", \"*\");\r\n//     res.header(\"Access-Control-Allow-Methods\", \"GET,HEAD,OPTIONS,POST,PUT\");\r\n//     res.header(\"Access-Control-Allow-Headers\", \"Origin, X-Requested-With, Content-Type, Accept, x-client-key, x-client-token, x-client-secret, Authorization\");\r\n//     next();\r\n// });\r\n\r\n\r\nrouter.post('/', function(req, res) {\r\n   console.log(req.body.signin)\r\n  if(req.body.signin.user_type == 0){\r\n\r\n    if(!passwordHash.isHashed(req.body.signin.password)){\r\n      var hashedPassword = passwordHash.generate(req.body.signin.password);\r\n      //console.log(hashedPassword)\r\n      influencers.influencers\r\n        .find({ $or : [{name:req.body.signin.email},{'email':req.body.signin.email}]},function (err, influencers) {\r\n        if (err) {\r\n            res.json({status:\"failure\",statusCode:600,msg:err});\r\n        }else if(influencers.length==0){\r\n          console.log('hii man');\r\n          console.log(influencers.length);\r\n          res.json({status:\"failure\",statusCode:500,msg:\"Invalid Credentials!!!\"});\r\n        }\r\n          else{\r\n            if(passwordHash.verify(req.body.signin.password, influencers[0].password)){\r\n              console.log(influencers)\r\n              res.json({status:\"success\",statusCode:200,data:influencers,msg:\"Login successfully...\"});\r\n            }else{\r\n              res.json({status:\"failure\",statusCode:100,msg:\"Invalid Credentials!!!\"});\r\n            }\r\n          }\r\n      });\r\n    }\r\n\r\n  }else{\r\n    if(!passwordHash.isHashed(req.body.signin.password)){\r\n      var hashedPassword = passwordHash.generate(req.body.signin.password);\r\n      //console.log(hashedPassword)\r\n      promoters.promoters\r\n        .find({ $or : [{name:req.body.signin.email},{'email':req.body.signin.email}]},function (err, promoters) {\r\n        if (err) {\r\n            res.json({status:\"failure\",statusCode:100,msg:err});\r\n        }else if(promoters.length==0){\r\n          res.json({status:\"failure\",statusCode:100,msg:\"Invalid Credentials!!!\"});\r\n        }\r\n          else{\r\n            if(passwordHash.verify(req.body.signin.password, promoters[0].password)){\r\n              console.log(promoters)\r\n              res.json({status:\"success\",statusCode:200,data:promoters,msg:\"Login successfully...\"});\r\n            }else{\r\n              res.json({status:\"failure\",statusCode:100,msg:\"Invalid Credentials!!!\"});\r\n            }\r\n          }\r\n      });\r\n    }\r\n  }\r\n    // else{\r\n    // promoters.promoters\r\n    // .find({ $or : [{name:req.body.signin.email},{'email':req.body.signin.email}]},function (err, promoters) {\r\n      \r\n    //     if (err) {\r\n    //         res.json({status:\"failure\",statusCode:100,data:err});\r\n    //     }else if(promoters.length==0){\r\n    //       res.json({status:\"failure\",statusCode:100,data:\"Invalid Credentials!!!\"});\r\n    //       }\r\n    //       else{\r\n    //         if(passwordHash.verify(req.body.signin.password, promoters[0].password)){\r\n    //           console.log(promoters)\r\n    //           res.json({status:\"success\",statusCode:200,data:promoters});\r\n    //         }\r\n    //       }\r\n    //   });\r\n    // } \r\n  });\r\n\r\n  module.exports = router;"
      ]
    },
    "sourceType": "module",
    "mtime": 1609864279962
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Codenomad\\\\Desktop\\\\boom-advertise\\\\boom-advertise\\\\serverapi\\\\routes\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Codenomad\\\\Desktop\\\\boom-advertise\\\\boom-advertise\\\\serverapi\",\"filename\":\"C:\\\\Users\\\\Codenomad\\\\Desktop\\\\boom-advertise\\\\boom-advertise\\\\serverapi\\\\routes\\\\sessionsController.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Codenomad\\\\Desktop\\\\boom-advertise\\\\boom-advertise\\\\serverapi\",\"plugins\":[],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi\\routes\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi",
      "filename": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi\\routes\\sessionsController.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi\\routes\\sessionsController.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi\\routes\\sessionsController.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi\\routes\\",
        "sourceFileName": "sessionsController.js"
      }
    },
    "ast": null,
    "code": "const express = require('express');\n\nconst router = express.Router();\n\nconst CryptoJS = require(\"crypto-js\");\n\nconst oauth = require('oauth');\n\nconst _twitterConsumerKey = process.env.TWITTER_CONSUMER_KEY;\nconst _twitterConsumerSecret = process.env.TWITTER_CONSUMER_SECRET;\nconst twitterCallbackUrl = process.env.TWITTER_CALLBACK_URL;\nconst consumer = new oauth.OAuth(\"https://twitter.com/oauth/request_token\", \"https://twitter.com/oauth/access_token\", _twitterConsumerKey, _twitterConsumerSecret, \"1.0A\", twitterCallbackUrl, \"HMAC-SHA1\");\n\nconst influencers_data = require('../models/influencers_data');\n\nconst Twitter = require('twit');\n\nvar ObjectID = require('mongodb').ObjectID; //var url = require('url');\n//var url_parts = url.parse(request.url, true);\n//var query = url_parts.query;\n\n\nrouter.get('/connect', (req, res) => {\n  consumer.getOAuthRequestToken(function (error, oauthToken, oauthTokenSecret, results) {\n    if (error) {\n      res.send(error, 500);\n    } else {\n      req.session.oauthRequestToken = oauthToken;\n      req.session.oauthRequestTokenSecret = oauthTokenSecret;\n      const redirect = {\n        redirectUrl: `https://twitter.com/oauth/authorize?oauth_token=${req.session.oauthRequestToken}`\n      };\n      res.send(redirect);\n    }\n  });\n});\nrouter.post('/saveAccessTokens', (req, res) => {\n  consumer.getOAuthAccessToken(req.body.oauth_token, req.session.oauthRequestTokenSecret, req.body.oauth_verifier, (error, oauthAccessToken, oauthAccessTokenSecret, results) => {\n    if (error) {\n      // logger.error(error);\n      res.send(error, 500);\n    } else {\n      // req.session.oauthAccessToken = oauthAccessToken;\n      //req.session.oauthAccessTokenSecret = oauthAccessTokenSecret\n      // return res.send({ message: 'token saved' });\n      const client = new Twitter({\n        consumer_key: 'PwtlyF8xzKLgIPNDwS42nL87G',\n        consumer_secret: 'hg9QMATkfZp0ZW3K5TXRFvwfsMCe5JChzlbf2Tb3JjL7rJCWUc',\n        access_token: oauthAccessToken,\n        access_token_secret: oauthAccessTokenSecret\n      });\n      client.get('account/verify_credentials').then(user => {\n        //  res.send(user)\n        console.log('mehar');\n        live_twitter_follower = user.data.followers_count;\n        /*******update twitter data */\n\n        influencers_data.influencers_data.updateOne({\n          \"influencerid\": new ObjectID(req.body._id)\n        }, {\n          $set: {\n            \"twitterfollowers\": live_twitter_follower\n          }\n        }, function (err, result) {\n          if (err) {\n            console.log(err);\n            res.json({\n              status: \"failure\",\n              statusCode: 100,\n              error: 'could not save data'\n            });\n          } else {\n            console.log(result);\n            res.json({\n              status: \"success\",\n              statusCode: 200,\n              data: result\n            });\n          }\n        });\n        /*******update twitter data */\n      }).catch(error => {\n        res.send(error);\n      });\n    }\n  });\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "sessionsController.js"
      ],
      "names": [
        "express",
        "require",
        "router",
        "Router",
        "CryptoJS",
        "oauth",
        "_twitterConsumerKey",
        "process",
        "env",
        "TWITTER_CONSUMER_KEY",
        "_twitterConsumerSecret",
        "TWITTER_CONSUMER_SECRET",
        "twitterCallbackUrl",
        "TWITTER_CALLBACK_URL",
        "consumer",
        "OAuth",
        "influencers_data",
        "Twitter",
        "ObjectID",
        "get",
        "req",
        "res",
        "getOAuthRequestToken",
        "error",
        "oauthToken",
        "oauthTokenSecret",
        "results",
        "send",
        "session",
        "oauthRequestToken",
        "oauthRequestTokenSecret",
        "redirect",
        "redirectUrl",
        "post",
        "getOAuthAccessToken",
        "body",
        "oauth_token",
        "oauth_verifier",
        "oauthAccessToken",
        "oauthAccessTokenSecret",
        "client",
        "consumer_key",
        "consumer_secret",
        "access_token",
        "access_token_secret",
        "then",
        "user",
        "console",
        "log",
        "live_twitter_follower",
        "data",
        "followers_count",
        "updateOne",
        "_id",
        "$set",
        "err",
        "result",
        "json",
        "status",
        "statusCode",
        "catch",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi\\routes\\",
      "sourcesContent": [
        "const express = require('express');\r\nconst router = express.Router();\r\nconst CryptoJS = require(\"crypto-js\");\r\nconst oauth = require('oauth');\r\nconst _twitterConsumerKey = process.env.TWITTER_CONSUMER_KEY;\r\nconst _twitterConsumerSecret = process.env.TWITTER_CONSUMER_SECRET;\r\nconst twitterCallbackUrl = process.env.TWITTER_CALLBACK_URL;\r\nconst consumer = new oauth.OAuth(\"https://twitter.com/oauth/request_token\", \"https://twitter.com/oauth/access_token\",_twitterConsumerKey, _twitterConsumerSecret, \"1.0A\", twitterCallbackUrl, \"HMAC-SHA1\");\r\nconst influencers_data = require('../models/influencers_data');\r\nconst Twitter = require('twit');\r\nvar ObjectID = require('mongodb').ObjectID;\r\n\r\n\r\n//var url = require('url');\r\n//var url_parts = url.parse(request.url, true);\r\n//var query = url_parts.query;\r\n\r\nrouter.get('/connect', (req, res) => {\r\n  consumer.getOAuthRequestToken(function (error, oauthToken,   oauthTokenSecret, results) {\r\n    if (error) {\r\n      res.send(error, 500);\r\n    } else {\r\n      req.session.oauthRequestToken = oauthToken;\r\n      req.session.oauthRequestTokenSecret = oauthTokenSecret;\r\n      const redirect = { \r\nredirectUrl: `https://twitter.com/oauth/authorize?oauth_token=${req.session.oauthRequestToken}`\r\n    }\r\n      res.send(redirect);\r\n    }\r\n  });\r\n});\r\nrouter.post('/saveAccessTokens', (req, res) => {\r\n  consumer.getOAuthAccessToken(\r\n  req.body.oauth_token,\r\n  req.session.oauthRequestTokenSecret,\r\n  req.body.oauth_verifier,\r\n  (error, oauthAccessToken, oauthAccessTokenSecret, results) => {\r\n    if (error) {\r\n     // logger.error(error);\r\n      res.send(error, 500);\r\n    }\r\n    else {\r\n     // req.session.oauthAccessToken = oauthAccessToken;\r\n      //req.session.oauthAccessTokenSecret = oauthAccessTokenSecret\r\n     // return res.send({ message: 'token saved' });\r\n\r\n      const client = new Twitter({\r\n        consumer_key: 'PwtlyF8xzKLgIPNDwS42nL87G',\r\n        consumer_secret: 'hg9QMATkfZp0ZW3K5TXRFvwfsMCe5JChzlbf2Tb3JjL7rJCWUc',\r\n        access_token: oauthAccessToken,\r\n        access_token_secret: oauthAccessTokenSecret\r\n      });\r\n\r\n      client.get('account/verify_credentials').then(user => {\r\n      //  res.send(user)\r\n            console.log('mehar');\r\n            live_twitter_follower = user.data.followers_count;\r\n\r\n                        /*******update twitter data */\r\n                influencers_data.influencers_data.updateOne(\r\n                  { \"influencerid\": new ObjectID(req.body._id) },\r\n                  {\r\n                    $set: { \"twitterfollowers\" : live_twitter_follower },\r\n                  },\r\n                  function(err,result){ \r\n                    if (err) {\r\n                      console.log(err);\r\n                      res.json({status:\"failure\",statusCode:100,error:'could not save data'});\r\n                    }\r\n                    else{\r\n                      console.log(result);\r\n                    res.json({status:\"success\",statusCode:200,data:result});\r\n                    }\r\n                  });\r\n                /*******update twitter data */\r\n\r\n      }).catch(error => {\r\n        res.send(error);\r\n      });\r\n\r\n\r\n\r\n    }\r\n  });\r\n});\r\nmodule.exports = router;"
      ]
    },
    "sourceType": "module",
    "mtime": 1610033669687
  },
  "{\"sourceRoot\":\"E:\\\\boomadvertisement\\\\serverapi\\\\models\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"E:\\\\boomadvertisement\\\\serverapi\",\"filename\":\"E:\\\\boomadvertisement\\\\serverapi\\\\models\\\\influencers_posts.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"E:\\\\boomadvertisement\\\\serverapi\",\"plugins\":[],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "E:\\boomadvertisement\\serverapi\\models\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "E:\\boomadvertisement\\serverapi",
      "filename": "E:\\boomadvertisement\\serverapi\\models\\influencers_posts.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "E:\\boomadvertisement\\serverapi",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "E:\\boomadvertisement\\serverapi\\models\\influencers_posts.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "E:\\boomadvertisement\\serverapi\\models\\influencers_posts.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "E:\\boomadvertisement\\serverapi\\models\\",
        "sourceFileName": "influencers_posts.js"
      }
    },
    "ast": null,
    "code": "var mongoose = require('mongoose');\n\nconst Schema = mongoose.Schema;\nconst influencer_posts_schema = new Schema({\n  id: String,\n  // String is shorthand for {type: String}\n  influencerid: {\n    type: mongoose.Schema.ObjectId\n  },\n  //media_type      :   String,\n  post_name: String,\n  //post_type       :   String,\n  price: String,\n  description: String,\n  upload_type: String\n});\nconst influencer_posts = mongoose.model('influencers_posts', influencer_posts_schema);\nmodule.exports = {\n  influencer_posts,\n  influencer_posts_schema\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZmx1ZW5jZXJzX3Bvc3RzLmpzIl0sIm5hbWVzIjpbIm1vbmdvb3NlIiwicmVxdWlyZSIsIlNjaGVtYSIsImluZmx1ZW5jZXJfcG9zdHNfc2NoZW1hIiwiaWQiLCJTdHJpbmciLCJpbmZsdWVuY2VyaWQiLCJ0eXBlIiwiT2JqZWN0SWQiLCJwb3N0X25hbWUiLCJwcmljZSIsImRlc2NyaXB0aW9uIiwidXBsb2FkX3R5cGUiLCJpbmZsdWVuY2VyX3Bvc3RzIiwibW9kZWwiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQSxJQUFJQSxRQUFRLEdBQUdDLE9BQU8sQ0FBQyxVQUFELENBQXRCOztBQUNBLE1BQU1DLE1BQU0sR0FBR0YsUUFBUSxDQUFDRSxNQUF4QjtBQUVBLE1BQU1DLHVCQUF1QixHQUFHLElBQUlELE1BQUosQ0FBVztBQUN2Q0UsRUFBQUEsRUFBRSxFQUFrQkMsTUFEbUI7QUFDWDtBQUM1QkMsRUFBQUEsWUFBWSxFQUFRO0FBQUVDLElBQUFBLElBQUksRUFBRVAsUUFBUSxDQUFDRSxNQUFULENBQWdCTTtBQUF4QixHQUZtQjtBQUd2QztBQUNBQyxFQUFBQSxTQUFTLEVBQVdKLE1BSm1CO0FBS3ZDO0FBQ0FLLEVBQUFBLEtBQUssRUFBZUwsTUFObUI7QUFPdkNNLEVBQUFBLFdBQVcsRUFBU04sTUFQbUI7QUFRdkNPLEVBQUFBLFdBQVcsRUFBU1A7QUFSbUIsQ0FBWCxDQUFoQztBQVdBLE1BQU1RLGdCQUFnQixHQUFHYixRQUFRLENBQUNjLEtBQVQsQ0FBZSxtQkFBZixFQUFvQ1gsdUJBQXBDLENBQXpCO0FBQ0FZLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQjtBQUFDSCxFQUFBQSxnQkFBRDtBQUFvQlYsRUFBQUE7QUFBcEIsQ0FBakIiLCJzb3VyY2VSb290IjoiRTpcXGJvb21hZHZlcnRpc2VtZW50XFxzZXJ2ZXJhcGlcXG1vZGVsc1xcIiwic291cmNlc0NvbnRlbnQiOlsidmFyIG1vbmdvb3NlID0gcmVxdWlyZSgnbW9uZ29vc2UnKTtcclxuY29uc3QgU2NoZW1hID0gbW9uZ29vc2UuU2NoZW1hO1xyXG5cclxuY29uc3QgaW5mbHVlbmNlcl9wb3N0c19zY2hlbWEgPSBuZXcgU2NoZW1hKHtcclxuICAgIGlkICAgICAgICAgICAgICA6ICAgU3RyaW5nLCAvLyBTdHJpbmcgaXMgc2hvcnRoYW5kIGZvciB7dHlwZTogU3RyaW5nfVxyXG4gICAgaW5mbHVlbmNlcmlkICAgIDogICB7IHR5cGU6IG1vbmdvb3NlLlNjaGVtYS5PYmplY3RJZH0sXHJcbiAgICAvL21lZGlhX3R5cGUgICAgICA6ICAgU3RyaW5nLFxyXG4gICAgcG9zdF9uYW1lICAgICAgIDogICBTdHJpbmcsXHJcbiAgICAvL3Bvc3RfdHlwZSAgICAgICA6ICAgU3RyaW5nLFxyXG4gICAgcHJpY2UgICAgICAgICAgIDogICBTdHJpbmcsXHJcbiAgICBkZXNjcmlwdGlvbiAgICAgOiAgIFN0cmluZyxcclxuICAgIHVwbG9hZF90eXBlICAgICA6ICAgU3RyaW5nLFxyXG59KTtcclxuXHJcbmNvbnN0IGluZmx1ZW5jZXJfcG9zdHMgPSBtb25nb29zZS5tb2RlbCgnaW5mbHVlbmNlcnNfcG9zdHMnLCBpbmZsdWVuY2VyX3Bvc3RzX3NjaGVtYSk7XHJcbm1vZHVsZS5leHBvcnRzID0ge2luZmx1ZW5jZXJfcG9zdHMgLCBpbmZsdWVuY2VyX3Bvc3RzX3NjaGVtYX07Il19",
    "map": {
      "version": 3,
      "sources": [
        "influencers_posts.js"
      ],
      "names": [
        "mongoose",
        "require",
        "Schema",
        "influencer_posts_schema",
        "id",
        "String",
        "influencerid",
        "type",
        "ObjectId",
        "post_name",
        "price",
        "description",
        "upload_type",
        "influencer_posts",
        "model",
        "module",
        "exports"
      ],
      "mappings": "AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAtB;;AACA,MAAMC,MAAM,GAAGF,QAAQ,CAACE,MAAxB;AAEA,MAAMC,uBAAuB,GAAG,IAAID,MAAJ,CAAW;AACvCE,EAAAA,EAAE,EAAkBC,MADmB;AACX;AAC5BC,EAAAA,YAAY,EAAQ;AAAEC,IAAAA,IAAI,EAAEP,QAAQ,CAACE,MAAT,CAAgBM;AAAxB,GAFmB;AAGvC;AACAC,EAAAA,SAAS,EAAWJ,MAJmB;AAKvC;AACAK,EAAAA,KAAK,EAAeL,MANmB;AAOvCM,EAAAA,WAAW,EAASN,MAPmB;AAQvCO,EAAAA,WAAW,EAASP;AARmB,CAAX,CAAhC;AAWA,MAAMQ,gBAAgB,GAAGb,QAAQ,CAACc,KAAT,CAAe,mBAAf,EAAoCX,uBAApC,CAAzB;AACAY,MAAM,CAACC,OAAP,GAAiB;AAACH,EAAAA,gBAAD;AAAoBV,EAAAA;AAApB,CAAjB",
      "sourceRoot": "E:\\boomadvertisement\\serverapi\\models\\",
      "sourcesContent": [
        "var mongoose = require('mongoose');\r\nconst Schema = mongoose.Schema;\r\n\r\nconst influencer_posts_schema = new Schema({\r\n    id              :   String, // String is shorthand for {type: String}\r\n    influencerid    :   { type: mongoose.Schema.ObjectId},\r\n    //media_type      :   String,\r\n    post_name       :   String,\r\n    //post_type       :   String,\r\n    price           :   String,\r\n    description     :   String,\r\n    upload_type     :   String,\r\n});\r\n\r\nconst influencer_posts = mongoose.model('influencers_posts', influencer_posts_schema);\r\nmodule.exports = {influencer_posts , influencer_posts_schema};"
      ]
    },
    "sourceType": "module",
    "mtime": 1615191330591
  },
  "{\"sourceRoot\":\"D:\\\\boom-advertise\\\\serverapi\\\\routes\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"D:\\\\boom-advertise\\\\serverapi\",\"filename\":\"D:\\\\boom-advertise\\\\serverapi\\\\routes\\\\promoters.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\boom-advertise\\\\serverapi\",\"plugins\":[],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\boom-advertise\\serverapi\\routes\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "D:\\boom-advertise\\serverapi",
      "filename": "D:\\boom-advertise\\serverapi\\routes\\promoters.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\boom-advertise\\serverapi",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\boom-advertise\\serverapi\\routes\\promoters.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "D:\\boom-advertise\\serverapi\\routes\\promoters.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\boom-advertise\\serverapi\\routes\\",
        "sourceFileName": "promoters.js"
      }
    },
    "ast": null,
    "code": "var express = require('express');\n\nvar router = express.Router();\n\nvar mongoose = require('mongoose');\n\nconst promoter = require('../models/promoters');\n\nconst email = require('../config/email');\n\nconst nodemailer = require('nodemailer');\n\nvar passwordHash = require('password-hash'); //process.env.NODE_TLS_REJECT_UNAUTHORIZED = \"1\";\n// Send Email Function \n\n\nvar sendEmail = function (to, subject, html) {\n  return new Promise(function (resolve, reject) {\n    var transporter = nodemailer.createTransport({\n      service: 'gmail',\n      port: 587,\n      secure: false,\n      auth: {\n        user: email.email,\n        pass: email.password\n      }\n    });\n    var mailOptions = {\n      from: 'faanmanagement@gmail.com  <http://boomadvertise.com/>',\n      to: to,\n      subject: subject,\n      html: html\n    };\n    transporter.sendMail(mailOptions, function (error, info) {\n      if (error) {\n        reject(error);\n      } else {\n        resolve(1);\n      }\n    });\n  });\n};\n\nrouter.post('/register', function (req, res) {\n  console.log(req.body.promoter_signup);\n  var promoterCreate = new promoter.promoters(req.body.promoter_signup);\n  var datetime = new Date();\n  let pass = passwordHash.generate(req.body.promoter_signup.password);\n  promoterCreate.joindate = datetime;\n  promoterCreate.password = pass;\n  promoter.promoters.findOne({\n    email: req.body.promoter_signup.email\n  }, function (err, promoters) {\n    if (err) res.json({\n      status: \"failure\",\n      statusCode: 100,\n      msg: err\n    });\n\n    if (promoters) {\n      console.log(promoters);\n      res.json({\n        status: \"failure\",\n        statusCode: 100,\n        msg: \"Email already exists!!\"\n      });\n    } else {\n      promoter.promoters.findOne({\n        name: req.body.promoter_signup.name\n      }, function (err, promoters) {\n        if (err) res.json({\n          status: \"failure\",\n          statusCode: 100,\n          msg: err\n        });\n\n        if (promoters) {\n          console.log(promoters);\n          res.json({\n            status: \"failure\",\n            statusCode: 100,\n            msg: \"Username already exists!!\"\n          });\n        } else {\n          promoterCreate.save(function (err, promoter) {\n            if (err) res.json({\n              status: \"failure\",\n              statusCode: 100,\n              msg: err\n            });\n            res.json({\n              status: \"success\",\n              statusCode: 200,\n              data: promoter,\n              msg: \"Signup & SignIn successfully!\"\n            });\n          });\n        }\n      });\n    }\n  });\n});\nrouter.post('/singlePromoter', function (req, res) {\n  promoter.promoters.find({\n    _id: req.body.id\n  }, function (err, promoter_data) {\n    if (err) res.json({\n      status: \"failure\",\n      statusCode: 100,\n      error: err\n    });\n    res.json({\n      status: \"success\",\n      statusCode: 200,\n      data: promoter_data\n    });\n  });\n});\nrouter.post('/send_request_quotes', function (req, res) {\n  console.log(\"req.body\");\n  console.log(req.body);\n  let html_content = \"hi vijay , how are you ?\";\n  let subject = \"Request Quotes\";\n  var a = sendEmail('vsingh@codenomad.net', \"Your request quotes!\", 'You have  request quotes on Urls with others : http://boomadvertise.com/');\n  a.then(result => {\n    if (result) {\n      res.json({\n        status: \"success\",\n        statusCode: 200,\n        data: 'hii sent email...'\n      });\n    } else {\n      res.json({\n        status: \"failure\",\n        statusCode: 100,\n        message: \"There was some error in youyr request!!!\",\n        data: []\n      });\n    }\n  }).catch(err => {\n    res.json({\n      status: \"failure\",\n      statusCode: 100,\n      message: \"Could Not Send Email!!!\",\n      data: err\n    });\n  });\n  console.log();\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "promoters.js"
      ],
      "names": [
        "express",
        "require",
        "router",
        "Router",
        "mongoose",
        "promoter",
        "email",
        "nodemailer",
        "passwordHash",
        "sendEmail",
        "to",
        "subject",
        "html",
        "Promise",
        "resolve",
        "reject",
        "transporter",
        "createTransport",
        "service",
        "port",
        "secure",
        "auth",
        "user",
        "pass",
        "password",
        "mailOptions",
        "from",
        "sendMail",
        "error",
        "info",
        "post",
        "req",
        "res",
        "console",
        "log",
        "body",
        "promoter_signup",
        "promoterCreate",
        "promoters",
        "datetime",
        "Date",
        "generate",
        "joindate",
        "findOne",
        "err",
        "json",
        "status",
        "statusCode",
        "msg",
        "name",
        "save",
        "data",
        "find",
        "_id",
        "id",
        "promoter_data",
        "html_content",
        "a",
        "then",
        "result",
        "message",
        "catch",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "D:\\boom-advertise\\serverapi\\routes\\",
      "sourcesContent": [
        "\r\nvar express = require('express');\r\nvar router = express.Router();\r\nvar mongoose = require('mongoose');\r\nconst promoter = require('../models/promoters');\r\nconst email = require('../config/email');\r\nconst nodemailer = require('nodemailer');\r\nvar passwordHash = require('password-hash');\r\n\r\n//process.env.NODE_TLS_REJECT_UNAUTHORIZED = \"1\";\r\n\r\n// Send Email Function \r\n\r\nvar sendEmail = function(to,subject,html) {\r\n  return new Promise(function(resolve, reject) {\r\n    var transporter = nodemailer.createTransport({\r\n      service: 'gmail',\r\n      port: 587,\r\n      secure: false,\r\n      auth: {\r\n        user: email.email,\r\n        pass: email.password\r\n      }\r\n    });\r\n  \r\n  var mailOptions = {\r\n    from: 'faanmanagement@gmail.com  <http://boomadvertise.com/>',\r\n    to: to,\r\n    subject: subject,\r\n    html: html\r\n  };\r\n\r\n    transporter.sendMail(mailOptions, function(error, info){\r\n    if (error) {\r\n      reject(error);\r\n    } else {\r\n     resolve(1)\r\n    }\r\n  });\r\n\r\n  \r\n});\r\n\r\n}\r\n\r\n    router.post('/register', function(req,res) {\r\n    console.log(req.body.promoter_signup);\r\n          var promoterCreate =  new promoter.promoters(req.body.promoter_signup);\r\n\r\n          var datetime = new Date();\r\n          let pass = passwordHash.generate(req.body.promoter_signup.password)\r\n\r\n          promoterCreate.joindate = datetime\r\n          promoterCreate.password = pass\r\n          \r\n          promoter.promoters.findOne({email:req.body.promoter_signup.email}, function(err, promoters) {\r\n            if (err)  res.json({status:\"failure\",statusCode:100,msg:err});\r\n            \r\n            if(promoters){\r\n              console.log(promoters)\r\n              res.json({status:\"failure\",statusCode:100,msg:\"Email already exists!!\"});\r\n            }else{\r\n                promoter.promoters.findOne({name:req.body.promoter_signup.name}, function(err, promoters) {\r\n                if (err)  res.json({status:\"failure\",statusCode:100,msg:err});\r\n            \r\n                if(promoters){\r\n                  console.log(promoters)\r\n                  res.json({status:\"failure\",statusCode:100,msg:\"Username already exists!!\"});\r\n                }\r\n                else{\r\n                    promoterCreate.save(function (err, promoter) {\r\n                    if (err) res.json({status:\"failure\",statusCode:100,msg:err});\r\n                \r\n                    res.json({status:\"success\",statusCode:200,data:promoter,msg:\"Signup & SignIn successfully!\"});\r\n                  });\r\n                }\r\n              })\r\n            }\r\n          }); \r\n          \r\n        });\r\n\r\n    router.post('/singlePromoter', function(req, res) {\r\n      promoter.promoters.find({_id:req.body.id}, function(err, promoter_data) {\r\n        if (err)  res.json({status:\"failure\",statusCode:100,error:err});\r\n        res.json({status:\"success\",statusCode:200,data:promoter_data});\r\n      });\r\n    });\r\n\r\n    router.post('/send_request_quotes',function(req , res){\r\n\r\n      console.log(\"req.body\");\r\n      console.log(req.body);\r\n\r\n      let html_content = \"hi vijay , how are you ?\";\r\n      let subject = \"Request Quotes\";\r\n      var a =  sendEmail('vsingh@codenomad.net',\r\n        \"Your request quotes!\",\r\n        'You have  request quotes on Urls with others : http://boomadvertise.com/')\r\n        a.then((result) => { \r\n       if(result){\r\n        res.json({status:\"success\",statusCode:200,data:'hii sent email...'});\r\n       }\r\n       else{\r\n        res.json({status:\"failure\",statusCode:100,message:\"There was some error in youyr request!!!\",data:[]});\r\n       }\r\n        }).catch((err) => {\r\n          res.json({status:\"failure\",statusCode:100,message:\"Could Not Send Email!!!\",data:err});\r\n        });\r\n\r\n      console.log();\r\n    });\r\n\r\n    module.exports = router;"
      ]
    },
    "sourceType": "module",
    "mtime": 1613732579750
  },
  "{\"sourceRoot\":\"D:\\\\boom-advertise\\\\serverapi\\\\models\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"D:\\\\boom-advertise\\\\serverapi\",\"filename\":\"D:\\\\boom-advertise\\\\serverapi\\\\models\\\\promoters.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\boom-advertise\\\\serverapi\",\"plugins\":[],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\boom-advertise\\serverapi\\models\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "D:\\boom-advertise\\serverapi",
      "filename": "D:\\boom-advertise\\serverapi\\models\\promoters.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\boom-advertise\\serverapi",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\boom-advertise\\serverapi\\models\\promoters.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "D:\\boom-advertise\\serverapi\\models\\promoters.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\boom-advertise\\serverapi\\models\\",
        "sourceFileName": "promoters.js"
      }
    },
    "ast": null,
    "code": "var mongoose = require('mongoose');\n\nconst Schema = mongoose.Schema;\nconst promotersSchema = new Schema({\n  id: Boolean,\n  // String is shorthand for {type: String}\n  name: String,\n  email: String,\n  password: String,\n  joindate: Date\n});\nconst promoters = mongoose.model('promoters', promotersSchema);\nmodule.exports = {\n  promoters,\n  promotersSchema\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb21vdGVycy5qcyJdLCJuYW1lcyI6WyJtb25nb29zZSIsInJlcXVpcmUiLCJTY2hlbWEiLCJwcm9tb3RlcnNTY2hlbWEiLCJpZCIsIkJvb2xlYW4iLCJuYW1lIiwiU3RyaW5nIiwiZW1haWwiLCJwYXNzd29yZCIsImpvaW5kYXRlIiwiRGF0ZSIsInByb21vdGVycyIsIm1vZGVsIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsSUFBSUEsUUFBUSxHQUFHQyxPQUFPLENBQUMsVUFBRCxDQUF0Qjs7QUFDQSxNQUFNQyxNQUFNLEdBQUdGLFFBQVEsQ0FBQ0UsTUFBeEI7QUFFQSxNQUFNQyxlQUFlLEdBQUcsSUFBSUQsTUFBSixDQUFXO0FBQ2pDRSxFQUFBQSxFQUFFLEVBQUdDLE9BRDRCO0FBQ25CO0FBQ2RDLEVBQUFBLElBQUksRUFBRUMsTUFGMkI7QUFHakNDLEVBQUFBLEtBQUssRUFBSUQsTUFId0I7QUFJakNFLEVBQUFBLFFBQVEsRUFBSUYsTUFKcUI7QUFLakNHLEVBQUFBLFFBQVEsRUFBSUM7QUFMcUIsQ0FBWCxDQUF4QjtBQU9BLE1BQU9DLFNBQVMsR0FBR1osUUFBUSxDQUFDYSxLQUFULENBQWUsV0FBZixFQUE0QlYsZUFBNUIsQ0FBbkI7QUFDQVcsTUFBTSxDQUFDQyxPQUFQLEdBQWlCO0FBQUVILEVBQUFBLFNBQUY7QUFBWVQsRUFBQUE7QUFBWixDQUFqQiIsInNvdXJjZVJvb3QiOiJEOlxcYm9vbS1hZHZlcnRpc2VcXHNlcnZlcmFwaVxcbW9kZWxzXFwiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgbW9uZ29vc2UgPSByZXF1aXJlKCdtb25nb29zZScpO1xyXG5jb25zdCBTY2hlbWEgPSBtb25nb29zZS5TY2hlbWE7XHJcblxyXG5jb25zdCBwcm9tb3RlcnNTY2hlbWEgPSBuZXcgU2NoZW1hKHtcclxuICBpZDogIEJvb2xlYW4sIC8vIFN0cmluZyBpcyBzaG9ydGhhbmQgZm9yIHt0eXBlOiBTdHJpbmd9XHJcbiAgbmFtZTogU3RyaW5nLFxyXG4gIGVtYWlsOiAgIFN0cmluZyxcclxuICBwYXNzd29yZDogICBTdHJpbmcsXHJcbiAgam9pbmRhdGU6ICAgRGF0ZVxyXG59KTtcclxuY29uc3QgIHByb21vdGVycyA9IG1vbmdvb3NlLm1vZGVsKCdwcm9tb3RlcnMnLCBwcm9tb3RlcnNTY2hlbWEpO1xyXG5tb2R1bGUuZXhwb3J0cyA9IHsgcHJvbW90ZXJzLHByb21vdGVyc1NjaGVtYSB9IDsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "promoters.js"
      ],
      "names": [
        "mongoose",
        "require",
        "Schema",
        "promotersSchema",
        "id",
        "Boolean",
        "name",
        "String",
        "email",
        "password",
        "joindate",
        "Date",
        "promoters",
        "model",
        "module",
        "exports"
      ],
      "mappings": "AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAtB;;AACA,MAAMC,MAAM,GAAGF,QAAQ,CAACE,MAAxB;AAEA,MAAMC,eAAe,GAAG,IAAID,MAAJ,CAAW;AACjCE,EAAAA,EAAE,EAAGC,OAD4B;AACnB;AACdC,EAAAA,IAAI,EAAEC,MAF2B;AAGjCC,EAAAA,KAAK,EAAID,MAHwB;AAIjCE,EAAAA,QAAQ,EAAIF,MAJqB;AAKjCG,EAAAA,QAAQ,EAAIC;AALqB,CAAX,CAAxB;AAOA,MAAOC,SAAS,GAAGZ,QAAQ,CAACa,KAAT,CAAe,WAAf,EAA4BV,eAA5B,CAAnB;AACAW,MAAM,CAACC,OAAP,GAAiB;AAAEH,EAAAA,SAAF;AAAYT,EAAAA;AAAZ,CAAjB",
      "sourceRoot": "D:\\boom-advertise\\serverapi\\models\\",
      "sourcesContent": [
        "var mongoose = require('mongoose');\r\nconst Schema = mongoose.Schema;\r\n\r\nconst promotersSchema = new Schema({\r\n  id:  Boolean, // String is shorthand for {type: String}\r\n  name: String,\r\n  email:   String,\r\n  password:   String,\r\n  joindate:   Date\r\n});\r\nconst  promoters = mongoose.model('promoters', promotersSchema);\r\nmodule.exports = { promoters,promotersSchema } ;"
      ]
    },
    "sourceType": "module",
    "mtime": 1613732578342
  },
  "{\"sourceRoot\":\"D:\\\\boom-advertise\\\\serverapi\\\\config\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"D:\\\\boom-advertise\\\\serverapi\",\"filename\":\"D:\\\\boom-advertise\\\\serverapi\\\\config\\\\email.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\boom-advertise\\\\serverapi\",\"plugins\":[],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\boom-advertise\\serverapi\\config\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "D:\\boom-advertise\\serverapi",
      "filename": "D:\\boom-advertise\\serverapi\\config\\email.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\boom-advertise\\serverapi",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\boom-advertise\\serverapi\\config\\email.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "D:\\boom-advertise\\serverapi\\config\\email.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\boom-advertise\\serverapi\\config\\",
        "sourceFileName": "email.js"
      }
    },
    "ast": null,
    "code": "var config = {};\nconfig.email = 'deligoch@gmail.com';\nconfig.password = 'deey5old4rhus_GEEN';\nconfig.adminemail = 'deligoch@gmail.com';\nconfig.url = 'http://boomadvertise.com/';\nconfig.adminurl = 'http://boomadvertise.com/';\nmodule.exports = config; // MAIL_DRIVER=smtp\n// MAIL_HOST=email-smtp.ap-south-1.amazonaws.com\n// MAIL_PORT=587\n// MAIL_ENCRYPTION=tls\n// MAIL_USERNAME=AKIAREDTCB4G4N4SJUKF\n// MAIL_PASSWORD=BFz7nWPoZc0jAYpUr5FkCeZsYpVYyTwjnuILc0vE3EaP\n// host : smtp.gmail.com\n// email port :587\n// email : deligoch@gmail.com\n// MAIL_ENCRYPTION : tls\n// email_username : deligoch@gmail.com\n// email pass : ifwmxlltkurvvctb\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImVtYWlsLmpzIl0sIm5hbWVzIjpbImNvbmZpZyIsImVtYWlsIiwicGFzc3dvcmQiLCJhZG1pbmVtYWlsIiwidXJsIiwiYWRtaW51cmwiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQSxJQUFJQSxNQUFNLEdBQUcsRUFBYjtBQUdBQSxNQUFNLENBQUNDLEtBQVAsR0FBZSxvQkFBZjtBQUNBRCxNQUFNLENBQUNFLFFBQVAsR0FBaUIsb0JBQWpCO0FBRUFGLE1BQU0sQ0FBQ0csVUFBUCxHQUFrQixvQkFBbEI7QUFDQUgsTUFBTSxDQUFDSSxHQUFQLEdBQVcsMkJBQVg7QUFDQUosTUFBTSxDQUFDSyxRQUFQLEdBQWdCLDJCQUFoQjtBQUNBQyxNQUFNLENBQUNDLE9BQVAsR0FBaUJQLE1BQWpCLEMsQ0FHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiRDpcXGJvb20tYWR2ZXJ0aXNlXFxzZXJ2ZXJhcGlcXGNvbmZpZ1xcIiwic291cmNlc0NvbnRlbnQiOlsidmFyIGNvbmZpZyA9IHt9O1xyXG5cclxuXHJcbmNvbmZpZy5lbWFpbCA9ICdkZWxpZ29jaEBnbWFpbC5jb20nXHJcbmNvbmZpZy5wYXNzd29yZD0gJ2RlZXk1b2xkNHJodXNfR0VFTidcclxuXHJcbmNvbmZpZy5hZG1pbmVtYWlsPSdkZWxpZ29jaEBnbWFpbC5jb20nXHJcbmNvbmZpZy51cmw9J2h0dHA6Ly9ib29tYWR2ZXJ0aXNlLmNvbS8nXHJcbmNvbmZpZy5hZG1pbnVybD0naHR0cDovL2Jvb21hZHZlcnRpc2UuY29tLydcclxubW9kdWxlLmV4cG9ydHMgPSBjb25maWc7XHJcblxyXG5cclxuLy8gTUFJTF9EUklWRVI9c210cFxyXG4vLyBNQUlMX0hPU1Q9ZW1haWwtc210cC5hcC1zb3V0aC0xLmFtYXpvbmF3cy5jb21cclxuLy8gTUFJTF9QT1JUPTU4N1xyXG4vLyBNQUlMX0VOQ1JZUFRJT049dGxzXHJcbi8vIE1BSUxfVVNFUk5BTUU9QUtJQVJFRFRDQjRHNE40U0pVS0ZcclxuLy8gTUFJTF9QQVNTV09SRD1CRno3bldQb1pjMGpBWXBVcjVGa0NlWnNZcFZZeVR3am51SUxjMHZFM0VhUFxyXG4vLyBob3N0IDogc210cC5nbWFpbC5jb21cclxuLy8gZW1haWwgcG9ydCA6NTg3XHJcbi8vIGVtYWlsIDogZGVsaWdvY2hAZ21haWwuY29tXHJcbi8vIE1BSUxfRU5DUllQVElPTiA6IHRsc1xyXG4vLyBlbWFpbF91c2VybmFtZSA6IGRlbGlnb2NoQGdtYWlsLmNvbVxyXG4vLyBlbWFpbCBwYXNzIDogaWZ3bXhsbHRrdXJ2dmN0YlxyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "email.js"
      ],
      "names": [
        "config",
        "email",
        "password",
        "adminemail",
        "url",
        "adminurl",
        "module",
        "exports"
      ],
      "mappings": "AAAA,IAAIA,MAAM,GAAG,EAAb;AAGAA,MAAM,CAACC,KAAP,GAAe,oBAAf;AACAD,MAAM,CAACE,QAAP,GAAiB,oBAAjB;AAEAF,MAAM,CAACG,UAAP,GAAkB,oBAAlB;AACAH,MAAM,CAACI,GAAP,GAAW,2BAAX;AACAJ,MAAM,CAACK,QAAP,GAAgB,2BAAhB;AACAC,MAAM,CAACC,OAAP,GAAiBP,MAAjB,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA",
      "sourceRoot": "D:\\boom-advertise\\serverapi\\config\\",
      "sourcesContent": [
        "var config = {};\r\n\r\n\r\nconfig.email = 'deligoch@gmail.com'\r\nconfig.password= 'deey5old4rhus_GEEN'\r\n\r\nconfig.adminemail='deligoch@gmail.com'\r\nconfig.url='http://boomadvertise.com/'\r\nconfig.adminurl='http://boomadvertise.com/'\r\nmodule.exports = config;\r\n\r\n\r\n// MAIL_DRIVER=smtp\r\n// MAIL_HOST=email-smtp.ap-south-1.amazonaws.com\r\n// MAIL_PORT=587\r\n// MAIL_ENCRYPTION=tls\r\n// MAIL_USERNAME=AKIAREDTCB4G4N4SJUKF\r\n// MAIL_PASSWORD=BFz7nWPoZc0jAYpUr5FkCeZsYpVYyTwjnuILc0vE3EaP\r\n// host : smtp.gmail.com\r\n// email port :587\r\n// email : deligoch@gmail.com\r\n// MAIL_ENCRYPTION : tls\r\n// email_username : deligoch@gmail.com\r\n// email pass : ifwmxlltkurvvctb\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1613732578341
  },
  "{\"sourceRoot\":\"D:\\\\boom-advertise\\\\serverapi\\\\routes\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"D:\\\\boom-advertise\\\\serverapi\",\"filename\":\"D:\\\\boom-advertise\\\\serverapi\\\\routes\\\\workers.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\boom-advertise\\\\serverapi\",\"plugins\":[],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\boom-advertise\\serverapi\\routes\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "D:\\boom-advertise\\serverapi",
      "filename": "D:\\boom-advertise\\serverapi\\routes\\workers.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\boom-advertise\\serverapi",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\boom-advertise\\serverapi\\routes\\workers.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "D:\\boom-advertise\\serverapi\\routes\\workers.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\boom-advertise\\serverapi\\routes\\",
        "sourceFileName": "workers.js"
      }
    },
    "ast": null,
    "code": "var express = require('express');\n\nvar router = express.Router();\n\nvar mongoose = require('mongoose');\n\nconst worker = require('../models/workers');\n\nconst email = require('../config/email');\n\nconst nodemailer = require('nodemailer');\n\nvar passwordHash = require('password-hash'); //process.env.NODE_TLS_REJECT_UNAUTHORIZED = \"1\";\n\n\nvar sendEmail = function (to, subject, html) {\n  return new Promise(function (resolve, reject) {\n    var transporter = nodemailer.createTransport({\n      service: 'Gmail',\n      port: 587,\n      secure: false,\n      auth: {\n        user: email.email,\n        pass: email.password\n      } //tls: {rejectUnauthorized: false}\n\n    });\n    var mailOptions = {\n      from: 'faanmanagement@gmail.com  <http://boomadvertise.com/>',\n      to: to,\n      subject: subject,\n      html: html\n    };\n    transporter.sendMail(mailOptions, function (error, info) {\n      if (error) {\n        reject(error);\n      } else {\n        resolve(1);\n      }\n    });\n  });\n};\n\nrouter.post('/register', function (req, res) {\n  var coupon_code = Math.random().toString(36).slice(2);\n  console.log(req.body.worker_signup);\n  var workerCreate = new worker.workers(req.body.worker_signup);\n  var datetime = new Date();\n  let pass = passwordHash.generate(req.body.worker_signup.password);\n  workerCreate.joindate = datetime;\n  workerCreate.password = pass;\n  workerCreate.coupon_code = coupon_code;\n  worker.workers.findOne({\n    email: req.body.worker_signup.email\n  }, function (err, workers) {\n    if (err) res.json({\n      status: \"failure\",\n      statusCode: 100,\n      msg: err\n    });\n\n    if (workers) {\n      res.json({\n        status: \"failure\",\n        statusCode: 100,\n        msg: \"Email already exists!!\"\n      });\n    } else {\n      worker.workers.findOne({\n        name: req.body.worker_signup.name\n      }, function (err, workers) {\n        if (err) res.json({\n          status: \"failure\",\n          statusCode: 100,\n          msg: err\n        });\n\n        if (workers) {\n          console.log(workers);\n          res.json({\n            status: \"failure\",\n            statusCode: 100,\n            msg: \"Username already exists!!\"\n          });\n        } else {\n          workerCreate.save(function (err, worker) {\n            sendEmail('vsingh@codenomad.net', \"my subject\", \"Your login account!\", \"You have been added as a Worker on <b>http://boomadvertise.com/</b><br> Here are your login credentials along with other details. <br> Username: \" + req.body.worker_signup.name + \"<br> Email: \" + req.body.worker_signup.email + \"<br> Password: \" + req.body.worker_signup.password + \" Promo code: fjhdgggdffg <br> Sharaeble Urls with others : http://boomadvertise.com/\" + worker['_id']);\n            if (err) res.json({\n              status: \"failure\",\n              statusCode: 100,\n              msg: error\n            });\n            res.json({\n              status: \"success\",\n              statusCode: 200,\n              data: worker,\n              msg: \"Worker added successfully and an email has been sent to the worker.\"\n            }); //  res.setHeader(\"Content-Type\", \"text/html\");\n\n            /******Send email***** */\n            //  var a = sendEmail(req.body.worker_signup.email,\n            //     \"Your login account!\",\"You have been added as a Worker on <b>http://boomadvertise.com/</b><br> Here are your login credentials along with other details. <br> Username: \" + req.body.worker_signup.name + \"<br> Email: \" +req.body.worker_signup.email +\"<br> Password: \" + req.body.worker_signup.password +\" Promo code: fjhdgggdffg <br> Sharaeble Urls with others : http://boomadvertise.com/\"+worker['_id']);\n            //       a.then((result) => { \n            //   if(result){\n            //     res.json({status:\"success\",statusCode:200,data:'hii sent email...'});\n            //   }\n            //   else{\n            //    res.json({status:\"failure\",statusCode:100,message:\"There was some error in your request!!!\",data:[]});\n            //   }\n            //     }).catch((err) => {\n            //      res.json({status:\"failure\",statusCode:100,message:\"Could Not Send Email!!!\",data:err});\n            //     });\n\n            /******Send email end***** */\n          });\n        }\n      });\n    }\n  });\n});\nrouter.post('/email', function (req, res) {\n  /******Send email***** */\n  console.log(email.email);\n  console.log(email.password);\n  var a = sendEmail('vsingh@codenomad.net', \"Your login account!\", 'You have been added as a Worker on <b>http://boomadvertise.com/</b><br> Here are your login credentials along with other details. <br> Promo code: fjhdgggdffg <br> Sharaeble Urls with others : http://boomadvertise.com/');\n  a.then(result => {\n    if (result) {\n      res.json({\n        status: \"success\",\n        statusCode: 200,\n        data: 'hii sent email...'\n      });\n    } else {\n      res.json({\n        status: \"failure\",\n        statusCode: 100,\n        message: \"There was some error in youyr request!!!\",\n        data: []\n      });\n    }\n  }).catch(err => {\n    res.json({\n      status: \"failure\",\n      statusCode: 100,\n      message: \"Could Not Send Email!!!\",\n      data: err\n    });\n  });\n  /******Send email end***** */\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "workers.js"
      ],
      "names": [
        "express",
        "require",
        "router",
        "Router",
        "mongoose",
        "worker",
        "email",
        "nodemailer",
        "passwordHash",
        "sendEmail",
        "to",
        "subject",
        "html",
        "Promise",
        "resolve",
        "reject",
        "transporter",
        "createTransport",
        "service",
        "port",
        "secure",
        "auth",
        "user",
        "pass",
        "password",
        "mailOptions",
        "from",
        "sendMail",
        "error",
        "info",
        "post",
        "req",
        "res",
        "coupon_code",
        "Math",
        "random",
        "toString",
        "slice",
        "console",
        "log",
        "body",
        "worker_signup",
        "workerCreate",
        "workers",
        "datetime",
        "Date",
        "generate",
        "joindate",
        "findOne",
        "err",
        "json",
        "status",
        "statusCode",
        "msg",
        "name",
        "save",
        "data",
        "a",
        "then",
        "result",
        "message",
        "catch",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "D:\\boom-advertise\\serverapi\\routes\\",
      "sourcesContent": [
        "\r\nvar express = require('express');\r\nvar router = express.Router();\r\nvar mongoose = require('mongoose');\r\nconst worker = require('../models/workers');\r\nconst email = require('../config/email');\r\nconst nodemailer = require('nodemailer');\r\nvar passwordHash = require('password-hash');\r\n\r\n//process.env.NODE_TLS_REJECT_UNAUTHORIZED = \"1\";\r\n\r\nvar sendEmail = function(to,subject,html) {\r\n  return new Promise(function(resolve, reject) {\r\n    var transporter = nodemailer.createTransport({\r\n      service: 'Gmail',\r\n      port: 587,\r\n      secure: false,\r\n      auth: {\r\n        user: email.email,\r\n        pass: email.password\r\n      },\r\n      //tls: {rejectUnauthorized: false}\r\n    });\r\n  \r\n  var mailOptions = {\r\n    from: 'faanmanagement@gmail.com  <http://boomadvertise.com/>',\r\n    to: to,\r\n    subject: subject,\r\n    html: html\r\n  };\r\n\r\n    transporter.sendMail(mailOptions, function(error, info){\r\n    if (error) {\r\n      reject(error);\r\n    } else {\r\n     resolve(1)\r\n    }\r\n  });\r\n\r\n  \r\n});\r\n\r\n}\r\n\r\n\r\nrouter.post('/register', function(req,res) {\r\n  var coupon_code  = Math.random().toString(36).slice(2)\r\nconsole.log(req.body.worker_signup);\r\n      var workerCreate =  new worker.workers(req.body.worker_signup);\r\n\r\n      var datetime = new Date();\r\n      let pass = passwordHash.generate(req.body.worker_signup.password)\r\n\r\n      workerCreate.joindate = datetime\r\n      workerCreate.password = pass\r\n      workerCreate.coupon_code = coupon_code\r\n      \r\n      worker.workers.findOne({email:req.body.worker_signup.email}, function(err, workers) {\r\n        if (err)  res.json({status:\"failure\",statusCode:100,msg:err});\r\n        \r\n        if(workers){\r\n          res.json({status:\"failure\",statusCode:100,msg:\"Email already exists!!\"});\r\n        }else{\r\n            worker.workers.findOne({name:req.body.worker_signup.name}, function(err, workers) {\r\n            if (err)  res.json({status:\"failure\",statusCode:100,msg:err});\r\n        \r\n            if(workers){\r\n              console.log(workers)\r\n              res.json({status:\"failure\",statusCode:100,msg:\"Username already exists!!\"});\r\n            }\r\n            else{\r\n                workerCreate.save(function (err, worker) {\r\n                  sendEmail('vsingh@codenomad.net',\"my subject\",\r\n                     \"Your login account!\",\"You have been added as a Worker on <b>http://boomadvertise.com/</b><br> Here are your login credentials along with other details. <br> Username: \" + req.body.worker_signup.name + \"<br> Email: \" +req.body.worker_signup.email +\"<br> Password: \" + req.body.worker_signup.password +\" Promo code: fjhdgggdffg <br> Sharaeble Urls with others : http://boomadvertise.com/\"+worker['_id']);\r\n                  if (err) res.json({status:\"failure\",statusCode:100,msg:error});\r\n                  res.json({status:\"success\",statusCode:200,data:worker,msg:\"Worker added successfully and an email has been sent to the worker.\"});\r\n                //  res.setHeader(\"Content-Type\", \"text/html\");\r\n                /******Send email***** */\r\n              //  var a = sendEmail(req.body.worker_signup.email,\r\n              //     \"Your login account!\",\"You have been added as a Worker on <b>http://boomadvertise.com/</b><br> Here are your login credentials along with other details. <br> Username: \" + req.body.worker_signup.name + \"<br> Email: \" +req.body.worker_signup.email +\"<br> Password: \" + req.body.worker_signup.password +\" Promo code: fjhdgggdffg <br> Sharaeble Urls with others : http://boomadvertise.com/\"+worker['_id']);\r\n              //       a.then((result) => { \r\n              //   if(result){\r\n              //     res.json({status:\"success\",statusCode:200,data:'hii sent email...'});\r\n              //   }\r\n              //   else{\r\n              //    res.json({status:\"failure\",statusCode:100,message:\"There was some error in your request!!!\",data:[]});\r\n              //   }\r\n              //     }).catch((err) => {\r\n              //      res.json({status:\"failure\",statusCode:100,message:\"Could Not Send Email!!!\",data:err});\r\n              //     });\r\n           /******Send email end***** */\r\n              });\r\n            }\r\n          })\r\n        }\r\n      }); \r\n      \r\n    });\r\n\r\n    \r\n    router.post('/email', function(req,res) { \r\n      /******Send email***** */\r\n     console.log(email.email);\r\n     console.log(email.password);\r\n      \r\n      var a =  sendEmail('vsingh@codenomad.net',\r\n        \"Your login account!\",\r\n        'You have been added as a Worker on <b>http://boomadvertise.com/</b><br> Here are your login credentials along with other details. <br> Promo code: fjhdgggdffg <br> Sharaeble Urls with others : http://boomadvertise.com/')\r\n        a.then((result) => { \r\n       if(result){\r\n        res.json({status:\"success\",statusCode:200,data:'hii sent email...'});\r\n       }\r\n       else{\r\n        res.json({status:\"failure\",statusCode:100,message:\"There was some error in youyr request!!!\",data:[]});\r\n       }\r\n        }).catch((err) => {\r\n          res.json({status:\"failure\",statusCode:100,message:\"Could Not Send Email!!!\",data:err});\r\n        });\r\n     /******Send email end***** */\r\n      });\r\n\r\n\r\n\r\n\r\n    \r\n    \r\n    module.exports = router;\r\n\r\n\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1613732579751
  },
  "{\"sourceRoot\":\"D:\\\\boom-advertise\\\\serverapi\\\\models\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"D:\\\\boom-advertise\\\\serverapi\",\"filename\":\"D:\\\\boom-advertise\\\\serverapi\\\\models\\\\workers.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\boom-advertise\\\\serverapi\",\"plugins\":[],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\boom-advertise\\serverapi\\models\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "D:\\boom-advertise\\serverapi",
      "filename": "D:\\boom-advertise\\serverapi\\models\\workers.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\boom-advertise\\serverapi",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\boom-advertise\\serverapi\\models\\workers.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "D:\\boom-advertise\\serverapi\\models\\workers.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\boom-advertise\\serverapi\\models\\",
        "sourceFileName": "workers.js"
      }
    },
    "ast": null,
    "code": "var mongoose = require('mongoose');\n\nconst Schema = mongoose.Schema;\nconst workersSchema = new Schema({\n  id: Boolean,\n  // String is shorthand for {type: String}\n  name: String,\n  email: String,\n  password: String,\n  coupon_code: String,\n  joindate: Date\n});\nconst workers = mongoose.model('workers', workersSchema);\nmodule.exports = {\n  workers,\n  workersSchema\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndvcmtlcnMuanMiXSwibmFtZXMiOlsibW9uZ29vc2UiLCJyZXF1aXJlIiwiU2NoZW1hIiwid29ya2Vyc1NjaGVtYSIsImlkIiwiQm9vbGVhbiIsIm5hbWUiLCJTdHJpbmciLCJlbWFpbCIsInBhc3N3b3JkIiwiY291cG9uX2NvZGUiLCJqb2luZGF0ZSIsIkRhdGUiLCJ3b3JrZXJzIiwibW9kZWwiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQSxJQUFJQSxRQUFRLEdBQUdDLE9BQU8sQ0FBQyxVQUFELENBQXRCOztBQUNBLE1BQU1DLE1BQU0sR0FBR0YsUUFBUSxDQUFDRSxNQUF4QjtBQUVBLE1BQU1DLGFBQWEsR0FBRyxJQUFJRCxNQUFKLENBQVc7QUFDL0JFLEVBQUFBLEVBQUUsRUFBR0MsT0FEMEI7QUFDakI7QUFDZEMsRUFBQUEsSUFBSSxFQUFFQyxNQUZ5QjtBQUcvQkMsRUFBQUEsS0FBSyxFQUFJRCxNQUhzQjtBQUkvQkUsRUFBQUEsUUFBUSxFQUFJRixNQUptQjtBQUsvQkcsRUFBQUEsV0FBVyxFQUFJSCxNQUxnQjtBQU0vQkksRUFBQUEsUUFBUSxFQUFJQztBQU5tQixDQUFYLENBQXRCO0FBUUEsTUFBTUMsT0FBTyxHQUFHYixRQUFRLENBQUNjLEtBQVQsQ0FBZSxTQUFmLEVBQTBCWCxhQUExQixDQUFoQjtBQUNBWSxNQUFNLENBQUNDLE9BQVAsR0FBaUI7QUFBRUgsRUFBQUEsT0FBRjtBQUFVVixFQUFBQTtBQUFWLENBQWpCIiwic291cmNlUm9vdCI6IkQ6XFxib29tLWFkdmVydGlzZVxcc2VydmVyYXBpXFxtb2RlbHNcXCIsInNvdXJjZXNDb250ZW50IjpbInZhciBtb25nb29zZSA9IHJlcXVpcmUoJ21vbmdvb3NlJyk7XHJcbmNvbnN0IFNjaGVtYSA9IG1vbmdvb3NlLlNjaGVtYTtcclxuXHJcbmNvbnN0IHdvcmtlcnNTY2hlbWEgPSBuZXcgU2NoZW1hKHtcclxuICBpZDogIEJvb2xlYW4sIC8vIFN0cmluZyBpcyBzaG9ydGhhbmQgZm9yIHt0eXBlOiBTdHJpbmd9XHJcbiAgbmFtZTogU3RyaW5nLFxyXG4gIGVtYWlsOiAgIFN0cmluZyxcclxuICBwYXNzd29yZDogICBTdHJpbmcsXHJcbiAgY291cG9uX2NvZGU6ICAgU3RyaW5nLFxyXG4gIGpvaW5kYXRlOiAgIERhdGVcclxufSk7XHJcbmNvbnN0IHdvcmtlcnMgPSBtb25nb29zZS5tb2RlbCgnd29ya2VycycsIHdvcmtlcnNTY2hlbWEpO1xyXG5tb2R1bGUuZXhwb3J0cyA9IHsgd29ya2Vycyx3b3JrZXJzU2NoZW1hIH0gOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "workers.js"
      ],
      "names": [
        "mongoose",
        "require",
        "Schema",
        "workersSchema",
        "id",
        "Boolean",
        "name",
        "String",
        "email",
        "password",
        "coupon_code",
        "joindate",
        "Date",
        "workers",
        "model",
        "module",
        "exports"
      ],
      "mappings": "AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAtB;;AACA,MAAMC,MAAM,GAAGF,QAAQ,CAACE,MAAxB;AAEA,MAAMC,aAAa,GAAG,IAAID,MAAJ,CAAW;AAC/BE,EAAAA,EAAE,EAAGC,OAD0B;AACjB;AACdC,EAAAA,IAAI,EAAEC,MAFyB;AAG/BC,EAAAA,KAAK,EAAID,MAHsB;AAI/BE,EAAAA,QAAQ,EAAIF,MAJmB;AAK/BG,EAAAA,WAAW,EAAIH,MALgB;AAM/BI,EAAAA,QAAQ,EAAIC;AANmB,CAAX,CAAtB;AAQA,MAAMC,OAAO,GAAGb,QAAQ,CAACc,KAAT,CAAe,SAAf,EAA0BX,aAA1B,CAAhB;AACAY,MAAM,CAACC,OAAP,GAAiB;AAAEH,EAAAA,OAAF;AAAUV,EAAAA;AAAV,CAAjB",
      "sourceRoot": "D:\\boom-advertise\\serverapi\\models\\",
      "sourcesContent": [
        "var mongoose = require('mongoose');\r\nconst Schema = mongoose.Schema;\r\n\r\nconst workersSchema = new Schema({\r\n  id:  Boolean, // String is shorthand for {type: String}\r\n  name: String,\r\n  email:   String,\r\n  password:   String,\r\n  coupon_code:   String,\r\n  joindate:   Date\r\n});\r\nconst workers = mongoose.model('workers', workersSchema);\r\nmodule.exports = { workers,workersSchema } ;"
      ]
    },
    "sourceType": "module",
    "mtime": 1613732578343
  },
  "{\"sourceRoot\":\"D:\\\\boom-advertise\\\\serverapi\\\\routes\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"D:\\\\boom-advertise\\\\serverapi\",\"filename\":\"D:\\\\boom-advertise\\\\serverapi\\\\routes\\\\influencers.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\boom-advertise\\\\serverapi\",\"plugins\":[],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\boom-advertise\\serverapi\\routes\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "D:\\boom-advertise\\serverapi",
      "filename": "D:\\boom-advertise\\serverapi\\routes\\influencers.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\boom-advertise\\serverapi",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\boom-advertise\\serverapi\\routes\\influencers.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "D:\\boom-advertise\\serverapi\\routes\\influencers.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\boom-advertise\\serverapi\\routes\\",
        "sourceFileName": "influencers.js"
      }
    },
    "ast": null,
    "code": "var express = require('express');\n\nvar router = express.Router();\n\nvar mongoose = require('mongoose');\n\nconst influencer = require('../models/influencers');\n\nconst influencers_data = require('../models/influencers_data');\n\nconst influencer_posts = require('../models/influencers_posts'); //const email = require('../config/email');\n//const nodemailer = require('nodemailer');\n\n\nvar passwordHash = require('password-hash');\n\nconst {\n  ObjectId\n} = require('mongodb');\n\nconst multer = require('multer');\n\nvar fileExtension = require('file-extension');\n\nvar fs = require('fs'); //process.env.NODE_TLS_REJECT_UNAUTHORIZED = \"1\";\n\n\nvar storage = multer.diskStorage({\n  // Setting directory on disk to save uploaded files\n  destination: function (req, file, cb) {\n    cb(null, 'uploads');\n  },\n  // Setting name of file saved\n  filename: function (req, file, cb) {\n    cb(null, file.fieldname + '-' + Date.now() + '.' + fileExtension(file.originalname));\n  }\n});\nvar upload = multer({\n  storage: storage,\n  limits: {\n    // Setting Image Size Limit to 2MBs\n    fileSize: 200000000\n  },\n\n  fileFilter(req, file, cb) {\n    if (!file.originalname.match(/\\.(jpg|jpeg|png)$/)) {\n      //Error \n      cb(new Error('Please upload JPG and PNG images only!'));\n    } //Success \n\n\n    cb(undefined, true);\n  }\n\n});\nrouter.post('/register', async function (req, res) {\n  console.log(req.body.influencer_signup);\n  var influencerCreate = new influencer.influencers(req.body.influencer_signup);\n  var influencerData = new influencers_data.influencers_data(req.body.influencer_signup);\n  var datetime = new Date();\n  let pass = passwordHash.generate(req.body.influencer_signup.password);\n  influencerCreate.joindate = datetime;\n  influencerCreate.password = pass;\n  influencerCreate.tiktok = req.body.influencer_signup.tiktok;\n  influencerCreate.instagram = req.body.influencer_signup.insta;\n  influencerCreate.facebook = req.body.influencer_signup.fb;\n  influencerCreate.twitter = req.body.influencer_signup.twitter;\n  influencerData.twitterfollowers = req.body.influencer_signup.twitter_followers;\n  influencerData.tiktokfollowers = req.body.influencer_signup.tiktok_followers;\n  influencerData.facebookfollowers = req.body.influencer_signup.fb_followers;\n  influencerData.instagramfollowers = req.body.influencer_signup.insta_followers;\n  influencer.influencers.findOne({\n    email: req.body.influencer_signup.email\n  }, function (err, influencers) {\n    if (err) res.json({\n      status: \"failure\",\n      statusCode: 100,\n      msg: err\n    });\n\n    if (influencers) {\n      console.log(influencers);\n      res.json({\n        status: \"failure\",\n        statusCode: 100,\n        msg: \"Email already exists!!\"\n      });\n    } else {\n      influencer.influencers.findOne({\n        name: req.body.influencer_signup.name\n      }, function (err, influencers) {\n        if (err) res.json({\n          status: \"failure\",\n          statusCode: 100,\n          msg: err\n        });\n\n        if (influencers) {\n          console.log(influencers);\n          res.json({\n            status: \"failure\",\n            statusCode: 100,\n            msg: \"Username already exists!!\"\n          });\n        } else {\n          influencerCreate.save(function (err, influencer_res) {\n            influencerData.influencerid = influencer_res['_id'];\n            influencerData.influencermatchid = influencer_res['_id'];\n            influencerData.save(function (err1, influ_data_res) {\n              if (err || err1) res.json({\n                status: \"failure\",\n                statusCode: 100,\n                msg: err\n              });\n              res.json({\n                status: \"success\",\n                statusCode: 200,\n                data: influencer_res,\n                msg: \"Signup & SignIn successfully!\"\n              });\n            });\n          });\n        }\n      });\n    }\n  });\n});\nrouter.get('/test', function (req, res) {\n  res.json(\"it worked vijay\");\n});\nrouter.get('/getInfluencers', function (req, res, next) {\n  influencers_data.influencers_data.aggregate([{\n    \"$lookup\": {\n      \"from\": \"influencers\",\n      \"localField\": \"influencerid\",\n      \"foreignField\": \"_id\",\n      \"as\": \"vals\"\n    }\n  }], function (err, res_data) {\n    if (err) res.json({\n      status: \"failure\",\n      statusCode: 100,\n      error: err\n    });\n    res.json({\n      status: \"success\",\n      statusCode: 200,\n      data: res_data\n    });\n  });\n});\n/**** Trying to get all influencers data as first table influencers ***/\n\nrouter.get('/getInfluencers1', function (req, res, next) {\n  influencer.influencers.aggregate([{\n    \"$lookup\": {\n      \"from\": \"influencers_data\",\n      \"localField\": \"_id\",\n      \"foreignField\": \"influencerid\",\n      \"as\": \"vals\"\n    }\n  }], function (err, res_data) {\n    if (err) res.json({\n      status: \"failure\",\n      statusCode: 100,\n      error: err\n    });\n    res.json({\n      status: \"success\",\n      statusCode: 200,\n      data: res_data\n    });\n  });\n});\nrouter.get('/singleInfluencer', function (req, res) {\n  var user_id = req.query.user_id;\n  influencers_data.influencers_data.aggregate([{\n    \"$lookup\": {\n      \"from\": \"influencers\",\n      \"localField\": \"influencerid\",\n      \"foreignField\": \"_id\",\n      \"as\": \"vals\"\n    }\n  }, {\n    \"$match\": {\n      \"influencermatchid\": user_id\n    }\n  }], function (err, influencer_data) {\n    if (err) res.json({\n      status: \"failure\",\n      statusCode: 100,\n      error: err\n    });\n    var return_data = {\n      price_data: {\n        tiktok: {\n          post_price: 0,\n          story_price: 0\n        },\n        instagram: {\n          post_price: 0,\n          story_price: 0\n        },\n        facebook: {\n          post_price: 0,\n          story_price: 0\n        },\n        twitter: {\n          post_price: 0,\n          story_price: 0\n        }\n      },\n      profile_data: \"\",\n      posts: {\n        tiktok: [],\n        instagram: [],\n        facebook: [],\n        twitter: []\n      }\n    };\n\n    if (influencer_data[0]) {\n      return_data.price_data.tiktok.post_price = influencer_data[0].tiktok_post_price ? influencer_data[0].tiktok_post_price : 0;\n      return_data.price_data.tiktok.story_price = influencer_data[0].tiktok_story_price ? influencer_data[0].tiktok_story_price : 0;\n      return_data.price_data.facebook.post_price = influencer_data[0].facebook_post_price ? influencer_data[0].facebook_post_price : 0;\n      return_data.price_data.facebook.story_price = influencer_data[0].facebook_story_price ? influencer_data[0].facebook_story_price : 0;\n      return_data.price_data.instagram.post_price = influencer_data[0].instagram_post_price ? influencer_data[0].instagram_post_price : 0;\n      return_data.price_data.instagram.story_price = influencer_data[0].instagram_story_price ? influencer_data[0].instagram_story_price : 0;\n      return_data.price_data.twitter.post_price = influencer_data[0].twitter_post_price ? influencer_data[0].twitter_post_price : 0;\n      return_data.price_data.twitter.story_price = influencer_data[0].twitter_story_price ? influencer_data[0].twitter_story_price : 0;\n      return_data.profile_data = influencer_data[0].vals ? influencer_data[0].vals[0] : \"\";\n    }\n\n    influencer.influencers.findOne({\n      _id: user_id\n    }, function (err, profile_data) {\n      if (err) res.json({\n        status: \"failure\",\n        statusCode: 100,\n        msg: err\n      });\n\n      if (profile_data) {\n        profile_data.profile_picture = profile_data.profile_picture ? \"http://\" + req.headers.host + \"/\" + profile_data.profile_picture : \"/assets/images/man-avatar-profile.jpg\";\n      }\n\n      return_data.profile_data = profile_data;\n      influencer_posts.influencer_posts.find({\n        influencerid: user_id\n      }, function (post_error, posts) {\n        if (post_error) res.json({\n          status: \"failure\",\n          statusCode: 100,\n          msg: post_error\n        });\n\n        if (posts) {\n          for (var i = 0; i < posts.length; i++) {\n            var post_value = {\n              id: posts[i]._id,\n              influencer_id: posts[i].influencerid,\n              image: \"http://\" + req.headers.host + \"/\" + posts[i].post_name,\n              text_name: \"@lorengray \" + posts[i].media_type + i,\n              description: posts[i].media_type + \" human machine recognition page\",\n              likes_count: \"50.8K\",\n              comments_count: \"20.8K\"\n            };\n            return_data.posts[posts[i].media_type].push(post_value);\n          }\n\n          res.json({\n            status: \"success\",\n            statusCode: 200,\n            data: influencer_data,\n            mydata: return_data\n          });\n        } else {\n          res.json({\n            status: \"success\",\n            statusCode: 200,\n            data: influencer_data,\n            mydata: return_data\n          });\n        }\n      });\n    });\n  });\n});\nrouter.post('/update_price', function (req, res) {\n  var user_data = req.body;\n\n  if (user_data.media_type == \"tiktok\") {\n    var update_data = {\n      tiktok_post_price: user_data.post_price,\n      tiktok_story_price: user_data.story_price\n    };\n  } else if (user_data.media_type == \"facebook\") {\n    var update_data = {\n      facebook_post_price: user_data.post_price,\n      facebook_story_price: user_data.story_price\n    };\n  } else if (user_data.media_type == \"instagram\") {\n    var update_data = {\n      instagram_post_price: user_data.post_price,\n      instagram_story_price: user_data.story_price\n    };\n  } else if (user_data.media_type == \"twitter\") {\n    var update_data = {\n      twitter_post_price: user_data.post_price,\n      twitter_story_price: user_data.story_price\n    };\n  }\n\n  influencers_data.influencers_data.updateOne({\n    influencerid: new ObjectId(user_data.user_id)\n  }, {\n    $set: update_data\n  }, function (err, data) {\n    if (err) {\n      res.json({\n        status: \"failure\",\n        statusCode: 100,\n        data: err\n      });\n    } else {\n      res.json({\n        status: \"success\",\n        statusCode: 200,\n        data: data\n      });\n    }\n  });\n});\nrouter.post('/update_profile', function (req, res) {\n  let user_data = req.body;\n  var update_data = {\n    name: user_data.name //email:user_data.email,\n\n  };\n  influencer.influencers.updateOne({\n    _id: user_data.user_id\n  }, {\n    $set: update_data\n  }, function (err, data) {\n    if (err) {\n      res.json({\n        status: \"failure\",\n        statusCode: 100,\n        data: err\n      });\n    } else {\n      res.json({\n        status: \"success\",\n        statusCode: 200,\n        data: data\n      });\n    }\n  });\n});\nrouter.post('/upload_post', upload.single('uploadedImage'), (req, res, next) => {\n  const file = req.file;\n  var user_data = req.body;\n\n  if (!file) {\n    const error = new Error('Please upload a file');\n    error.httpStatusCode = 400;\n    return next(error);\n  }\n\n  var post_create = new influencer_posts.influencer_posts();\n  post_create.post_name = file.filename;\n  post_create.influencerid = user_data.user_id;\n  post_create.media_type = user_data.media_type;\n  post_create.post_type = user_data.post_type;\n  post_create.save(function (err, data) {\n    if (err) res.json({\n      status: \"failure\",\n      statusCode: 100,\n      msg: err\n    });\n    res.status(200).send({\n      statusCode: 200,\n      status: 'success',\n      data: file\n    });\n  });\n}, (error, req, res, next) => {\n  res.status(400).send({\n    error: error.message\n  });\n});\nrouter.get(\"/delete_post\", function (req, res) {\n  var post_id = req.query.post_id;\n  influencer_posts.influencer_posts.deleteOne({\n    _id: post_id\n  }, function (error, data) {\n    if (error) res.json({\n      status: \"failure\",\n      statusCode: 100,\n      data: error\n    });\n    res.json({\n      statusCode: 200,\n      status: 'success',\n      data: data\n    });\n  });\n});\nrouter.post('/upload_profile_image', upload.single('profileImage'), (req, res, next) => {\n  const file = req.file;\n  var user_data = req.body;\n\n  if (!file) {\n    const error = new Error('Please upload a file');\n    error.httpStatusCode = 400;\n    return next(error);\n  }\n\n  let update_data = {\n    profile_picture: file.filename\n  };\n  influencer.influencers.updateOne({\n    _id: user_data.user_id\n  }, {\n    $set: update_data\n  }, function (err, update_dta) {\n    if (err) {\n      res.json({\n        status: \"failure\",\n        statusCode: 100,\n        data: err\n      });\n    } else {\n      res.json({\n        status: \"success\",\n        statusCode: 200,\n        data: update_dta\n      });\n    }\n  });\n}, (error, req, res, next) => {\n  res.status(400).send({\n    error: error.message\n  });\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "influencers.js"
      ],
      "names": [
        "express",
        "require",
        "router",
        "Router",
        "mongoose",
        "influencer",
        "influencers_data",
        "influencer_posts",
        "passwordHash",
        "ObjectId",
        "multer",
        "fileExtension",
        "fs",
        "storage",
        "diskStorage",
        "destination",
        "req",
        "file",
        "cb",
        "filename",
        "fieldname",
        "Date",
        "now",
        "originalname",
        "upload",
        "limits",
        "fileSize",
        "fileFilter",
        "match",
        "Error",
        "undefined",
        "post",
        "res",
        "console",
        "log",
        "body",
        "influencer_signup",
        "influencerCreate",
        "influencers",
        "influencerData",
        "datetime",
        "pass",
        "generate",
        "password",
        "joindate",
        "tiktok",
        "instagram",
        "insta",
        "facebook",
        "fb",
        "twitter",
        "twitterfollowers",
        "twitter_followers",
        "tiktokfollowers",
        "tiktok_followers",
        "facebookfollowers",
        "fb_followers",
        "instagramfollowers",
        "insta_followers",
        "findOne",
        "email",
        "err",
        "json",
        "status",
        "statusCode",
        "msg",
        "name",
        "save",
        "influencer_res",
        "influencerid",
        "influencermatchid",
        "err1",
        "influ_data_res",
        "data",
        "get",
        "next",
        "aggregate",
        "res_data",
        "error",
        "user_id",
        "query",
        "influencer_data",
        "return_data",
        "price_data",
        "post_price",
        "story_price",
        "profile_data",
        "posts",
        "tiktok_post_price",
        "tiktok_story_price",
        "facebook_post_price",
        "facebook_story_price",
        "instagram_post_price",
        "instagram_story_price",
        "twitter_post_price",
        "twitter_story_price",
        "vals",
        "_id",
        "profile_picture",
        "headers",
        "host",
        "find",
        "post_error",
        "i",
        "length",
        "post_value",
        "id",
        "influencer_id",
        "image",
        "post_name",
        "text_name",
        "media_type",
        "description",
        "likes_count",
        "comments_count",
        "push",
        "mydata",
        "user_data",
        "update_data",
        "updateOne",
        "$set",
        "single",
        "httpStatusCode",
        "post_create",
        "post_type",
        "send",
        "message",
        "post_id",
        "deleteOne",
        "update_dta",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "D:\\boom-advertise\\serverapi\\routes\\",
      "sourcesContent": [
        "\r\nvar express = require('express');\r\nvar router = express.Router();\r\nvar mongoose = require('mongoose');\r\nconst influencer = require('../models/influencers');\r\nconst influencers_data = require('../models/influencers_data');\r\nconst influencer_posts = require('../models/influencers_posts');\r\n//const email = require('../config/email');\r\n//const nodemailer = require('nodemailer');\r\nvar passwordHash = require('password-hash');\r\nconst {ObjectId} = require('mongodb'); \r\nconst multer = require('multer');\r\nvar fileExtension = require('file-extension')\r\nvar fs = require('fs');\r\n//process.env.NODE_TLS_REJECT_UNAUTHORIZED = \"1\";\r\n\r\nvar storage = multer.diskStorage({\r\n\r\n  // Setting directory on disk to save uploaded files\r\n  destination: function (req, file, cb) {\r\n      cb(null, 'uploads')\r\n  },\r\n \r\n\r\n  // Setting name of file saved\r\n  filename: function (req, file, cb) {\r\n      cb(null, file.fieldname + '-' + Date.now() + '.' + fileExtension(file.originalname))\r\n  }\r\n})\r\n\r\nvar upload = multer({\r\n  storage: storage,\r\n  limits: {\r\n      // Setting Image Size Limit to 2MBs\r\n      fileSize: 200000000\r\n  },\r\n  fileFilter(req, file, cb) {\r\n      if (!file.originalname.match(/\\.(jpg|jpeg|png)$/)) {\r\n          //Error \r\n          cb(new Error('Please upload JPG and PNG images only!'))\r\n      }\r\n      //Success \r\n      cb(undefined, true)\r\n  }\r\n})\r\n\r\nrouter.post('/register', async function(req,res) {\r\n      console.log(req.body.influencer_signup);\r\n      var influencerCreate =  new influencer.influencers(req.body.influencer_signup);\r\n      var influencerData =  new influencers_data.influencers_data(req.body.influencer_signup);\r\n\r\n      var datetime = new Date();\r\n      let pass = passwordHash.generate(req.body.influencer_signup.password)\r\n\r\n      influencerCreate.joindate = datetime\r\n      influencerCreate.password = pass\r\n      influencerCreate.tiktok = req.body.influencer_signup.tiktok\r\n      influencerCreate.instagram = req.body.influencer_signup.insta\r\n      influencerCreate.facebook = req.body.influencer_signup.fb\r\n      influencerCreate.twitter = req.body.influencer_signup.twitter\r\n\r\n      influencerData.twitterfollowers = req.body.influencer_signup.twitter_followers\r\n      influencerData.tiktokfollowers = req.body.influencer_signup.tiktok_followers\r\n      influencerData.facebookfollowers = req.body.influencer_signup.fb_followers\r\n      influencerData.instagramfollowers = req.body.influencer_signup.insta_followers\r\n      \r\n      influencer.influencers.findOne({email:req.body.influencer_signup.email}, function(err, influencers) {\r\n        if (err)  res.json({status:\"failure\",statusCode:100,msg:err});\r\n        \r\n        if(influencers){\r\n          console.log(influencers)\r\n          res.json({status:\"failure\",statusCode:100,msg:\"Email already exists!!\"});\r\n        }else{\r\n            influencer.influencers.findOne({name:req.body.influencer_signup.name}, function(err, influencers) {\r\n            if (err)  res.json({status:\"failure\",statusCode:100,msg:err});\r\n        \r\n            if(influencers){\r\n              console.log(influencers)\r\n              res.json({status:\"failure\",statusCode:100,msg:\"Username already exists!!\"});\r\n            }\r\n            else{\r\n              \r\n                influencerCreate.save(function (err, influencer_res) {\r\n                  influencerData.influencerid = influencer_res['_id']\r\n                  influencerData.influencermatchid = influencer_res['_id']\r\n                  influencerData.save(function (err1, influ_data_res) {\r\n                    if (err || err1) res.json({status:\"failure\",statusCode:100,msg:err});\r\n                    res.json({status:\"success\",statusCode:200,data:influencer_res,msg:\"Signup & SignIn successfully!\"});\r\n                  });\r\n                });\r\n            }\r\n          })\r\n        }\r\n      }); \r\n      \r\n    });\r\n\r\n    router.get('/test', function(req,res) {\r\n      res.json(\"it worked vijay\");\r\n    });\r\n\r\n    router.get('/getInfluencers', function(req, res, next) {\r\n        influencers_data.influencers_data.aggregate([\r\n            { \"$lookup\": {\r\n                    \"from\": \"influencers\",\r\n                    \"localField\": \"influencerid\",\r\n                    \"foreignField\": \"_id\",\r\n                    \"as\": \"vals\"\r\n                  }\r\n            }\r\n\r\n            ], function(err, res_data) {\r\n              if (err)  res.json({status:\"failure\",statusCode:100,error:err});\r\n                res.json({status:\"success\",statusCode:200,data:res_data});\r\n            })\r\n\r\n    });\r\n\r\n    /**** Trying to get all influencers data as first table influencers ***/\r\n      router.get('/getInfluencers1', function(req, res, next) {\r\n            influencer.influencers.aggregate([\r\n              { \"$lookup\": {\r\n                      \"from\": \"influencers_data\",\r\n                      \"localField\": \"_id\",\r\n                      \"foreignField\": \"influencerid\",\r\n                      \"as\": \"vals\"\r\n                    }\r\n              }\r\n              ], function(err, res_data) {\r\n                  if (err)  res.json({status:\"failure\",statusCode:100,error:err});\r\n                    res.json({status:\"success\",statusCode:200,data:res_data});\r\n                  })\r\n      });\r\n\r\n     router.get('/singleInfluencer', function(req, res) {\r\n\r\n      var  user_id = req.query.user_id;\r\n      \r\n        influencers_data.influencers_data.aggregate(\r\n            [\r\n              {\r\n                \"$lookup\":{\r\n\r\n                  \"from\": \"influencers\",\r\n                  \"localField\": \"influencerid\",\r\n                  \"foreignField\": \"_id\",\r\n                  \"as\": \"vals\"\r\n              }}\r\n              ,\r\n              {\r\n                \"$match\":{\r\n                  \"influencermatchid\" : user_id\r\n                }\r\n              }\r\n          ]\r\n            ,function(err,influencer_data){\r\n            if(err) res.json({status:\"failure\",statusCode:100,error:err});\r\n\r\n            \r\n            \r\n            var return_data = {\r\n                                price_data:{\r\n                                  tiktok      : { post_price : 0, story_price : 0},\r\n                                  instagram   : { post_price : 0, story_price : 0},\r\n                                  facebook    : { post_price : 0, story_price : 0},\r\n                                  twitter     : { post_price : 0, story_price : 0},\r\n                                },\r\n                                profile_data  :\"\",\r\n                                posts         :{\r\n                                                tiktok    :  [],\r\n                                                instagram :  [],\r\n                                                facebook  :  [],\r\n                                                twitter   :  [],\r\n                                },\r\n                              };\r\n            \r\n\r\n            if(influencer_data[0]){\r\n              \r\n              return_data.price_data.tiktok.post_price  = influencer_data[0].tiktok_post_price ? influencer_data[0].tiktok_post_price : 0;\r\n              return_data.price_data.tiktok.story_price = influencer_data[0].tiktok_story_price ? influencer_data[0].tiktok_story_price: 0;\r\n\r\n              return_data.price_data.facebook.post_price = influencer_data[0].facebook_post_price ? influencer_data[0].facebook_post_price: 0;\r\n              return_data.price_data.facebook.story_price = influencer_data[0].facebook_story_price ? influencer_data[0].facebook_story_price: 0;\r\n              \r\n              return_data.price_data.instagram.post_price = influencer_data[0].instagram_post_price ? influencer_data[0].instagram_post_price: 0;\r\n              return_data.price_data.instagram.story_price = influencer_data[0].instagram_story_price ? influencer_data[0].instagram_story_price: 0;\r\n              \r\n              return_data.price_data.twitter.post_price = influencer_data[0].twitter_post_price ? influencer_data[0].twitter_post_price: 0;\r\n              return_data.price_data.twitter.story_price = influencer_data[0].twitter_story_price ? influencer_data[0].twitter_story_price: 0;\r\n              \r\n              return_data.profile_data  = influencer_data[0].vals ? influencer_data[0].vals[0] : \"\";\r\n              \r\n            }\r\n\r\n            influencer.influencers.findOne({_id : user_id},function(err , profile_data){\r\n\r\n              if (err)  res.json({status:\"failure\",statusCode:100,msg:err});\r\n              \r\n              if(profile_data){\r\n\r\n                profile_data.profile_picture =  profile_data.profile_picture ? \"http://\"+req.headers.host+\"/\"+profile_data.profile_picture : \"/assets/images/man-avatar-profile.jpg\";\r\n              } \r\n             \r\n              return_data.profile_data = profile_data;\r\n              influencer_posts.influencer_posts.find({influencerid:user_id}, function(post_error, posts) {\r\n                if (post_error)  res.json({status:\"failure\",statusCode:100,msg:post_error});\r\n                \r\n                if(posts){\r\n                  \r\n                  for(var i = 0 ; i < posts.length;i++){\r\n\r\n                    var post_value = { \r\n                                        id : posts[i]._id ,\r\n                                        influencer_id : posts[i].influencerid ,\r\n                                        image : \"http://\"+req.headers.host+\"/\"+posts[i].post_name,\r\n                                        text_name:\"@lorengray \"+posts[i].media_type+i,\r\n                                        description:posts[i].media_type+\" human machine recognition page\",\r\n                                        likes_count:\"50.8K\",\r\n                                        comments_count:\"20.8K\"\r\n                                      };\r\n    \r\n                    return_data.posts[posts[i].media_type].push(post_value); \r\n                  }\r\n                  res.json({status:\"success\",statusCode:200,data:influencer_data,mydata:return_data});\r\n                } else {\r\n                  res.json({status:\"success\",statusCode:200,data:influencer_data,mydata:return_data});\r\n                }\r\n  \r\n              })\r\n\r\n            });\r\n\r\n            \r\n\r\n            \r\n             \r\n            \r\n          });\r\n      });\r\n\r\n      router.post('/update_price', function(req , res){\r\n\r\n        var user_data = req.body;\r\n\r\n        if(user_data.media_type == \"tiktok\"){\r\n          var update_data = {\r\n                              tiktok_post_price : user_data.post_price,\r\n                              tiktok_story_price : user_data.story_price,\r\n                              \r\n                            }\r\n        }else if(user_data.media_type == \"facebook\"){\r\n\r\n          var update_data = {\r\n                              facebook_post_price : user_data.post_price,\r\n                              facebook_story_price : user_data.story_price,\r\n                            }\r\n\r\n        }else if(user_data.media_type == \"instagram\"){\r\n\r\n          var update_data = {\r\n                              instagram_post_price : user_data.post_price,\r\n                              instagram_story_price : user_data.story_price,\r\n                            }\r\n\r\n        }else if(user_data.media_type == \"twitter\"){\r\n\r\n          var update_data = {\r\n                              twitter_post_price : user_data.post_price,\r\n                              twitter_story_price : user_data.story_price,\r\n                            }\r\n\r\n        }\r\n\r\n        influencers_data.influencers_data.updateOne({influencerid : new ObjectId(user_data.user_id)} , {$set:update_data},function(err , data){\r\n\r\n          if(err){\r\n            res.json({status:\"failure\",statusCode:100,data:err});\r\n          }else{\r\n\r\n            res.json({status:\"success\",statusCode:200,data:data});\r\n          }\r\n        })\r\n\r\n\r\n        \r\n      });\r\n\r\n      router.post('/update_profile',function(req , res){\r\n\r\n        let user_data = req.body;\r\n        var update_data = {\r\n                              name:user_data.name,\r\n                              //email:user_data.email,\r\n                          };\r\n        \r\n        influencer.influencers.updateOne({_id : user_data.user_id} , {$set:update_data},function(err , data){\r\n\r\n          if(err){\r\n            res.json({status:\"failure\",statusCode:100,data:err});\r\n          }else{\r\n\r\n            res.json({status:\"success\",statusCode:200,data:data});\r\n          }\r\n        });\r\n      });\r\n\r\n\r\n      router.post('/upload_post', upload.single('uploadedImage'), (req, res, next) => {\r\n        const file = req.file\r\n        var user_data = req.body;\r\n        \r\n        if (!file) {\r\n            const error = new Error('Please upload a file')\r\n            error.httpStatusCode = 400\r\n            return next(error)\r\n        }\r\n\r\n        var post_create = new influencer_posts.influencer_posts();\r\n        \r\n        post_create.post_name     = file.filename;\r\n        post_create.influencerid  = user_data.user_id;\r\n        post_create.media_type    = user_data.media_type;\r\n        post_create.post_type     = user_data.post_type;\r\n        \r\n        post_create.save(function(err ,data){\r\n\r\n          if (err)  res.json({status:\"failure\",statusCode:100,msg:err});\r\n          res.status(200).send({ statusCode: 200, status: 'success', data: file, })\r\n        });\r\n      \r\n      }, (error, req, res, next) => {\r\n        res.status(400).send({ error: error.message })\r\n      });\r\n\r\n      router.get(\"/delete_post\",function(req , res){\r\n\r\n        var  post_id = req.query.post_id;\r\n\r\n        influencer_posts.influencer_posts.deleteOne({_id:post_id},function(error , data){\r\n          if(error) res.json({status:\"failure\",statusCode:100,data:error});\r\n          res.json({statusCode: 200, status: 'success', data: data});\r\n        })\r\n      });\r\n\r\n\r\n      router.post('/upload_profile_image', upload.single('profileImage'), (req, res, next) => {\r\n        const file = req.file\r\n        var user_data = req.body;\r\n        \r\n        if (!file) {\r\n            const error = new Error('Please upload a file')\r\n            error.httpStatusCode = 400\r\n            return next(error)\r\n        }\r\n\r\n        let update_data = { profile_picture : file.filename };\r\n\r\n        influencer.influencers.updateOne({_id : user_data.user_id},{$set:update_data},function(err , update_dta){\r\n\r\n          if(err){\r\n            res.json({status:\"failure\",statusCode:100,data:err});\r\n          }else{\r\n\r\n            res.json({status:\"success\",statusCode:200,data:update_dta});\r\n          }\r\n        });\r\n        \r\n      \r\n      }, (error, req, res, next) => {\r\n        res.status(400).send({ error: error.message })\r\n      });\r\n\r\n  \r\n    module.exports = router;"
      ]
    },
    "sourceType": "module",
    "mtime": 1613732579750
  },
  "{\"sourceRoot\":\"D:\\\\boom-advertise\\\\serverapi\\\\models\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"D:\\\\boom-advertise\\\\serverapi\",\"filename\":\"D:\\\\boom-advertise\\\\serverapi\\\\models\\\\influencers.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\boom-advertise\\\\serverapi\",\"plugins\":[],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\boom-advertise\\serverapi\\models\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "D:\\boom-advertise\\serverapi",
      "filename": "D:\\boom-advertise\\serverapi\\models\\influencers.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\boom-advertise\\serverapi",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\boom-advertise\\serverapi\\models\\influencers.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "D:\\boom-advertise\\serverapi\\models\\influencers.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\boom-advertise\\serverapi\\models\\",
        "sourceFileName": "influencers.js"
      }
    },
    "ast": null,
    "code": "var mongoose = require('mongoose');\n\nconst Schema = mongoose.Schema;\nconst influencersSchema = new Schema({\n  id: String,\n  // String is shorthand for {type: String}\n  name: String,\n  email: String,\n  password: String,\n  profile_picture: String,\n  tiktok: Boolean,\n  instagram: Boolean,\n  facebook: Boolean,\n  twitter: Boolean,\n  joindate: Date\n});\nconst influencers = mongoose.model('influencers', influencersSchema);\nmodule.exports = {\n  influencers,\n  influencersSchema\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZmx1ZW5jZXJzLmpzIl0sIm5hbWVzIjpbIm1vbmdvb3NlIiwicmVxdWlyZSIsIlNjaGVtYSIsImluZmx1ZW5jZXJzU2NoZW1hIiwiaWQiLCJTdHJpbmciLCJuYW1lIiwiZW1haWwiLCJwYXNzd29yZCIsInByb2ZpbGVfcGljdHVyZSIsInRpa3RvayIsIkJvb2xlYW4iLCJpbnN0YWdyYW0iLCJmYWNlYm9vayIsInR3aXR0ZXIiLCJqb2luZGF0ZSIsIkRhdGUiLCJpbmZsdWVuY2VycyIsIm1vZGVsIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsSUFBSUEsUUFBUSxHQUFHQyxPQUFPLENBQUMsVUFBRCxDQUF0Qjs7QUFDQSxNQUFNQyxNQUFNLEdBQUdGLFFBQVEsQ0FBQ0UsTUFBeEI7QUFFQSxNQUFNQyxpQkFBaUIsR0FBRyxJQUFJRCxNQUFKLENBQVc7QUFDbkNFLEVBQUFBLEVBQUUsRUFBa0JDLE1BRGU7QUFDUDtBQUM1QkMsRUFBQUEsSUFBSSxFQUFnQkQsTUFGZTtBQUduQ0UsRUFBQUEsS0FBSyxFQUFlRixNQUhlO0FBSW5DRyxFQUFBQSxRQUFRLEVBQVlILE1BSmU7QUFLbkNJLEVBQUFBLGVBQWUsRUFBS0osTUFMZTtBQU1uQ0ssRUFBQUEsTUFBTSxFQUFjQyxPQU5lO0FBT25DQyxFQUFBQSxTQUFTLEVBQVdELE9BUGU7QUFRbkNFLEVBQUFBLFFBQVEsRUFBWUYsT0FSZTtBQVNuQ0csRUFBQUEsT0FBTyxFQUFhSCxPQVRlO0FBVW5DSSxFQUFBQSxRQUFRLEVBQVlDO0FBVmUsQ0FBWCxDQUExQjtBQWFBLE1BQU9DLFdBQVcsR0FBR2pCLFFBQVEsQ0FBQ2tCLEtBQVQsQ0FBZSxhQUFmLEVBQThCZixpQkFBOUIsQ0FBckI7QUFDQWdCLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQjtBQUFFSCxFQUFBQSxXQUFGO0FBQWNkLEVBQUFBO0FBQWQsQ0FBakIiLCJzb3VyY2VSb290IjoiRDpcXGJvb20tYWR2ZXJ0aXNlXFxzZXJ2ZXJhcGlcXG1vZGVsc1xcIiwic291cmNlc0NvbnRlbnQiOlsidmFyIG1vbmdvb3NlID0gcmVxdWlyZSgnbW9uZ29vc2UnKTtcclxuY29uc3QgU2NoZW1hID0gbW9uZ29vc2UuU2NoZW1hO1xyXG5cclxuY29uc3QgaW5mbHVlbmNlcnNTY2hlbWEgPSBuZXcgU2NoZW1hKHtcclxuICBpZCAgICAgICAgICAgICAgOiAgIFN0cmluZywgLy8gU3RyaW5nIGlzIHNob3J0aGFuZCBmb3Ige3R5cGU6IFN0cmluZ31cclxuICBuYW1lICAgICAgICAgICAgOiAgIFN0cmluZyxcclxuICBlbWFpbCAgICAgICAgICAgOiAgIFN0cmluZyxcclxuICBwYXNzd29yZCAgICAgICAgOiAgIFN0cmluZyxcclxuICBwcm9maWxlX3BpY3R1cmUgOiAgIFN0cmluZyxcclxuICB0aWt0b2sgICAgICAgICAgOiAgIEJvb2xlYW4sXHJcbiAgaW5zdGFncmFtICAgICAgIDogICBCb29sZWFuLFxyXG4gIGZhY2Vib29rICAgICAgICA6ICAgQm9vbGVhbixcclxuICB0d2l0dGVyICAgICAgICAgOiAgIEJvb2xlYW4sXHJcbiAgam9pbmRhdGUgICAgICAgIDogICBEYXRlLFxyXG59XHJcbik7XHJcbmNvbnN0ICBpbmZsdWVuY2VycyA9IG1vbmdvb3NlLm1vZGVsKCdpbmZsdWVuY2VycycsIGluZmx1ZW5jZXJzU2NoZW1hKTtcclxubW9kdWxlLmV4cG9ydHMgPSB7IGluZmx1ZW5jZXJzLGluZmx1ZW5jZXJzU2NoZW1hIH0gOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "influencers.js"
      ],
      "names": [
        "mongoose",
        "require",
        "Schema",
        "influencersSchema",
        "id",
        "String",
        "name",
        "email",
        "password",
        "profile_picture",
        "tiktok",
        "Boolean",
        "instagram",
        "facebook",
        "twitter",
        "joindate",
        "Date",
        "influencers",
        "model",
        "module",
        "exports"
      ],
      "mappings": "AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAtB;;AACA,MAAMC,MAAM,GAAGF,QAAQ,CAACE,MAAxB;AAEA,MAAMC,iBAAiB,GAAG,IAAID,MAAJ,CAAW;AACnCE,EAAAA,EAAE,EAAkBC,MADe;AACP;AAC5BC,EAAAA,IAAI,EAAgBD,MAFe;AAGnCE,EAAAA,KAAK,EAAeF,MAHe;AAInCG,EAAAA,QAAQ,EAAYH,MAJe;AAKnCI,EAAAA,eAAe,EAAKJ,MALe;AAMnCK,EAAAA,MAAM,EAAcC,OANe;AAOnCC,EAAAA,SAAS,EAAWD,OAPe;AAQnCE,EAAAA,QAAQ,EAAYF,OARe;AASnCG,EAAAA,OAAO,EAAaH,OATe;AAUnCI,EAAAA,QAAQ,EAAYC;AAVe,CAAX,CAA1B;AAaA,MAAOC,WAAW,GAAGjB,QAAQ,CAACkB,KAAT,CAAe,aAAf,EAA8Bf,iBAA9B,CAArB;AACAgB,MAAM,CAACC,OAAP,GAAiB;AAAEH,EAAAA,WAAF;AAAcd,EAAAA;AAAd,CAAjB",
      "sourceRoot": "D:\\boom-advertise\\serverapi\\models\\",
      "sourcesContent": [
        "var mongoose = require('mongoose');\r\nconst Schema = mongoose.Schema;\r\n\r\nconst influencersSchema = new Schema({\r\n  id              :   String, // String is shorthand for {type: String}\r\n  name            :   String,\r\n  email           :   String,\r\n  password        :   String,\r\n  profile_picture :   String,\r\n  tiktok          :   Boolean,\r\n  instagram       :   Boolean,\r\n  facebook        :   Boolean,\r\n  twitter         :   Boolean,\r\n  joindate        :   Date,\r\n}\r\n);\r\nconst  influencers = mongoose.model('influencers', influencersSchema);\r\nmodule.exports = { influencers,influencersSchema } ;"
      ]
    },
    "sourceType": "module",
    "mtime": 1613732578342
  },
  "{\"sourceRoot\":\"D:\\\\boom-advertise\\\\serverapi\\\\models\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"D:\\\\boom-advertise\\\\serverapi\",\"filename\":\"D:\\\\boom-advertise\\\\serverapi\\\\models\\\\influencers_data.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\boom-advertise\\\\serverapi\",\"plugins\":[],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\boom-advertise\\serverapi\\models\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "D:\\boom-advertise\\serverapi",
      "filename": "D:\\boom-advertise\\serverapi\\models\\influencers_data.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\boom-advertise\\serverapi",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\boom-advertise\\serverapi\\models\\influencers_data.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "D:\\boom-advertise\\serverapi\\models\\influencers_data.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\boom-advertise\\serverapi\\models\\",
        "sourceFileName": "influencers_data.js"
      }
    },
    "ast": null,
    "code": "var mongoose = require('mongoose');\n\nconst Schema = mongoose.Schema;\nconst influencers_dataSchema = new Schema({\n  id: String,\n  // String is shorthand for {type: String}\n  influencerid: {\n    type: mongoose.Schema.ObjectId\n  },\n  influencermatchid: String,\n  tiktokfollowers: String,\n  instagramfollowers: String,\n  facebookfollowers: String,\n  twitterfollowers: String,\n  tiktok_post_price: String,\n  tiktok_story_price: String,\n  facebook_post_price: String,\n  facebook_story_price: String,\n  twitter_post_price: String,\n  twitter_story_price: String,\n  instagram_post_price: String,\n  instagram_story_price: String\n});\nconst influencers_data = mongoose.model('influencers_data', influencers_dataSchema);\nmodule.exports = {\n  influencers_data,\n  influencers_dataSchema\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZmx1ZW5jZXJzX2RhdGEuanMiXSwibmFtZXMiOlsibW9uZ29vc2UiLCJyZXF1aXJlIiwiU2NoZW1hIiwiaW5mbHVlbmNlcnNfZGF0YVNjaGVtYSIsImlkIiwiU3RyaW5nIiwiaW5mbHVlbmNlcmlkIiwidHlwZSIsIk9iamVjdElkIiwiaW5mbHVlbmNlcm1hdGNoaWQiLCJ0aWt0b2tmb2xsb3dlcnMiLCJpbnN0YWdyYW1mb2xsb3dlcnMiLCJmYWNlYm9va2ZvbGxvd2VycyIsInR3aXR0ZXJmb2xsb3dlcnMiLCJ0aWt0b2tfcG9zdF9wcmljZSIsInRpa3Rva19zdG9yeV9wcmljZSIsImZhY2Vib29rX3Bvc3RfcHJpY2UiLCJmYWNlYm9va19zdG9yeV9wcmljZSIsInR3aXR0ZXJfcG9zdF9wcmljZSIsInR3aXR0ZXJfc3RvcnlfcHJpY2UiLCJpbnN0YWdyYW1fcG9zdF9wcmljZSIsImluc3RhZ3JhbV9zdG9yeV9wcmljZSIsImluZmx1ZW5jZXJzX2RhdGEiLCJtb2RlbCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBLElBQUlBLFFBQVEsR0FBR0MsT0FBTyxDQUFDLFVBQUQsQ0FBdEI7O0FBQ0EsTUFBTUMsTUFBTSxHQUFHRixRQUFRLENBQUNFLE1BQXhCO0FBRUEsTUFBTUMsc0JBQXNCLEdBQUcsSUFBSUQsTUFBSixDQUFXO0FBQ3hDRSxFQUFBQSxFQUFFLEVBQUdDLE1BRG1DO0FBQzNCO0FBQ2JDLEVBQUFBLFlBQVksRUFBRTtBQUFFQyxJQUFBQSxJQUFJLEVBQUVQLFFBQVEsQ0FBQ0UsTUFBVCxDQUFnQk07QUFBeEIsR0FGMEI7QUFHeENDLEVBQUFBLGlCQUFpQixFQUFFSixNQUhxQjtBQUl4Q0ssRUFBQUEsZUFBZSxFQUFJTCxNQUpxQjtBQUt4Q00sRUFBQUEsa0JBQWtCLEVBQUlOLE1BTGtCO0FBTXhDTyxFQUFBQSxpQkFBaUIsRUFBSVAsTUFObUI7QUFPeENRLEVBQUFBLGdCQUFnQixFQUFJUixNQVBvQjtBQVF4Q1MsRUFBQUEsaUJBQWlCLEVBQUdULE1BUm9CO0FBU3hDVSxFQUFBQSxrQkFBa0IsRUFBR1YsTUFUbUI7QUFVeENXLEVBQUFBLG1CQUFtQixFQUFHWCxNQVZrQjtBQVd4Q1ksRUFBQUEsb0JBQW9CLEVBQUdaLE1BWGlCO0FBWXhDYSxFQUFBQSxrQkFBa0IsRUFBR2IsTUFabUI7QUFheENjLEVBQUFBLG1CQUFtQixFQUFHZCxNQWJrQjtBQWN4Q2UsRUFBQUEsb0JBQW9CLEVBQUdmLE1BZGlCO0FBZXhDZ0IsRUFBQUEscUJBQXFCLEVBQUdoQjtBQWZnQixDQUFYLENBQS9CO0FBaUJBLE1BQU9pQixnQkFBZ0IsR0FBR3RCLFFBQVEsQ0FBQ3VCLEtBQVQsQ0FBZSxrQkFBZixFQUFtQ3BCLHNCQUFuQyxDQUExQjtBQUNBcUIsTUFBTSxDQUFDQyxPQUFQLEdBQWlCO0FBQUVILEVBQUFBLGdCQUFGO0FBQW1CbkIsRUFBQUE7QUFBbkIsQ0FBakIiLCJzb3VyY2VSb290IjoiRDpcXGJvb20tYWR2ZXJ0aXNlXFxzZXJ2ZXJhcGlcXG1vZGVsc1xcIiwic291cmNlc0NvbnRlbnQiOlsidmFyIG1vbmdvb3NlID0gcmVxdWlyZSgnbW9uZ29vc2UnKTtcclxuY29uc3QgU2NoZW1hID0gbW9uZ29vc2UuU2NoZW1hO1xyXG5cclxuY29uc3QgaW5mbHVlbmNlcnNfZGF0YVNjaGVtYSA9IG5ldyBTY2hlbWEoe1xyXG4gIGlkOiAgU3RyaW5nLCAvLyBTdHJpbmcgaXMgc2hvcnRoYW5kIGZvciB7dHlwZTogU3RyaW5nfVxyXG4gIGluZmx1ZW5jZXJpZDogeyB0eXBlOiBtb25nb29zZS5TY2hlbWEuT2JqZWN0SWR9LFxyXG4gIGluZmx1ZW5jZXJtYXRjaGlkOiBTdHJpbmcsXHJcbiAgdGlrdG9rZm9sbG93ZXJzOiAgIFN0cmluZyxcclxuICBpbnN0YWdyYW1mb2xsb3dlcnM6ICAgU3RyaW5nLFxyXG4gIGZhY2Vib29rZm9sbG93ZXJzOiAgIFN0cmluZyxcclxuICB0d2l0dGVyZm9sbG93ZXJzOiAgIFN0cmluZyxcclxuICB0aWt0b2tfcG9zdF9wcmljZSA6IFN0cmluZyxcclxuICB0aWt0b2tfc3RvcnlfcHJpY2UgOiBTdHJpbmcsXHJcbiAgZmFjZWJvb2tfcG9zdF9wcmljZSA6IFN0cmluZyxcclxuICBmYWNlYm9va19zdG9yeV9wcmljZSA6IFN0cmluZyxcclxuICB0d2l0dGVyX3Bvc3RfcHJpY2UgOiBTdHJpbmcsXHJcbiAgdHdpdHRlcl9zdG9yeV9wcmljZSA6IFN0cmluZyxcclxuICBpbnN0YWdyYW1fcG9zdF9wcmljZSA6IFN0cmluZyxcclxuICBpbnN0YWdyYW1fc3RvcnlfcHJpY2UgOiBTdHJpbmcsXHJcbn0pO1xyXG5jb25zdCAgaW5mbHVlbmNlcnNfZGF0YSA9IG1vbmdvb3NlLm1vZGVsKCdpbmZsdWVuY2Vyc19kYXRhJywgaW5mbHVlbmNlcnNfZGF0YVNjaGVtYSk7XHJcbm1vZHVsZS5leHBvcnRzID0geyBpbmZsdWVuY2Vyc19kYXRhLGluZmx1ZW5jZXJzX2RhdGFTY2hlbWEgfSA7Il19",
    "map": {
      "version": 3,
      "sources": [
        "influencers_data.js"
      ],
      "names": [
        "mongoose",
        "require",
        "Schema",
        "influencers_dataSchema",
        "id",
        "String",
        "influencerid",
        "type",
        "ObjectId",
        "influencermatchid",
        "tiktokfollowers",
        "instagramfollowers",
        "facebookfollowers",
        "twitterfollowers",
        "tiktok_post_price",
        "tiktok_story_price",
        "facebook_post_price",
        "facebook_story_price",
        "twitter_post_price",
        "twitter_story_price",
        "instagram_post_price",
        "instagram_story_price",
        "influencers_data",
        "model",
        "module",
        "exports"
      ],
      "mappings": "AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAtB;;AACA,MAAMC,MAAM,GAAGF,QAAQ,CAACE,MAAxB;AAEA,MAAMC,sBAAsB,GAAG,IAAID,MAAJ,CAAW;AACxCE,EAAAA,EAAE,EAAGC,MADmC;AAC3B;AACbC,EAAAA,YAAY,EAAE;AAAEC,IAAAA,IAAI,EAAEP,QAAQ,CAACE,MAAT,CAAgBM;AAAxB,GAF0B;AAGxCC,EAAAA,iBAAiB,EAAEJ,MAHqB;AAIxCK,EAAAA,eAAe,EAAIL,MAJqB;AAKxCM,EAAAA,kBAAkB,EAAIN,MALkB;AAMxCO,EAAAA,iBAAiB,EAAIP,MANmB;AAOxCQ,EAAAA,gBAAgB,EAAIR,MAPoB;AAQxCS,EAAAA,iBAAiB,EAAGT,MARoB;AASxCU,EAAAA,kBAAkB,EAAGV,MATmB;AAUxCW,EAAAA,mBAAmB,EAAGX,MAVkB;AAWxCY,EAAAA,oBAAoB,EAAGZ,MAXiB;AAYxCa,EAAAA,kBAAkB,EAAGb,MAZmB;AAaxCc,EAAAA,mBAAmB,EAAGd,MAbkB;AAcxCe,EAAAA,oBAAoB,EAAGf,MAdiB;AAexCgB,EAAAA,qBAAqB,EAAGhB;AAfgB,CAAX,CAA/B;AAiBA,MAAOiB,gBAAgB,GAAGtB,QAAQ,CAACuB,KAAT,CAAe,kBAAf,EAAmCpB,sBAAnC,CAA1B;AACAqB,MAAM,CAACC,OAAP,GAAiB;AAAEH,EAAAA,gBAAF;AAAmBnB,EAAAA;AAAnB,CAAjB",
      "sourceRoot": "D:\\boom-advertise\\serverapi\\models\\",
      "sourcesContent": [
        "var mongoose = require('mongoose');\r\nconst Schema = mongoose.Schema;\r\n\r\nconst influencers_dataSchema = new Schema({\r\n  id:  String, // String is shorthand for {type: String}\r\n  influencerid: { type: mongoose.Schema.ObjectId},\r\n  influencermatchid: String,\r\n  tiktokfollowers:   String,\r\n  instagramfollowers:   String,\r\n  facebookfollowers:   String,\r\n  twitterfollowers:   String,\r\n  tiktok_post_price : String,\r\n  tiktok_story_price : String,\r\n  facebook_post_price : String,\r\n  facebook_story_price : String,\r\n  twitter_post_price : String,\r\n  twitter_story_price : String,\r\n  instagram_post_price : String,\r\n  instagram_story_price : String,\r\n});\r\nconst  influencers_data = mongoose.model('influencers_data', influencers_dataSchema);\r\nmodule.exports = { influencers_data,influencers_dataSchema } ;"
      ]
    },
    "sourceType": "module",
    "mtime": 1613732578342
  },
  "{\"sourceRoot\":\"D:\\\\boom-advertise\\\\serverapi\\\\models\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"D:\\\\boom-advertise\\\\serverapi\",\"filename\":\"D:\\\\boom-advertise\\\\serverapi\\\\models\\\\influencers_posts.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\boom-advertise\\\\serverapi\",\"plugins\":[],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\boom-advertise\\serverapi\\models\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "D:\\boom-advertise\\serverapi",
      "filename": "D:\\boom-advertise\\serverapi\\models\\influencers_posts.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\boom-advertise\\serverapi",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\boom-advertise\\serverapi\\models\\influencers_posts.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "D:\\boom-advertise\\serverapi\\models\\influencers_posts.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\boom-advertise\\serverapi\\models\\",
        "sourceFileName": "influencers_posts.js"
      }
    },
    "ast": null,
    "code": "var mongoose = require('mongoose');\n\nconst Schema = mongoose.Schema;\nconst influencer_posts_schema = new Schema({\n  id: String,\n  // String is shorthand for {type: String}\n  influencerid: {\n    type: mongoose.Schema.ObjectId\n  },\n  media_type: String,\n  post_name: String,\n  post_type: String\n});\nconst influencer_posts = mongoose.model('influencers_posts', influencer_posts_schema);\nmodule.exports = {\n  influencer_posts,\n  influencer_posts_schema\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZmx1ZW5jZXJzX3Bvc3RzLmpzIl0sIm5hbWVzIjpbIm1vbmdvb3NlIiwicmVxdWlyZSIsIlNjaGVtYSIsImluZmx1ZW5jZXJfcG9zdHNfc2NoZW1hIiwiaWQiLCJTdHJpbmciLCJpbmZsdWVuY2VyaWQiLCJ0eXBlIiwiT2JqZWN0SWQiLCJtZWRpYV90eXBlIiwicG9zdF9uYW1lIiwicG9zdF90eXBlIiwiaW5mbHVlbmNlcl9wb3N0cyIsIm1vZGVsIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsSUFBSUEsUUFBUSxHQUFHQyxPQUFPLENBQUMsVUFBRCxDQUF0Qjs7QUFDQSxNQUFNQyxNQUFNLEdBQUdGLFFBQVEsQ0FBQ0UsTUFBeEI7QUFFQSxNQUFNQyx1QkFBdUIsR0FBRyxJQUFJRCxNQUFKLENBQVc7QUFDdkNFLEVBQUFBLEVBQUUsRUFBa0JDLE1BRG1CO0FBQ1g7QUFDNUJDLEVBQUFBLFlBQVksRUFBUTtBQUFFQyxJQUFBQSxJQUFJLEVBQUVQLFFBQVEsQ0FBQ0UsTUFBVCxDQUFnQk07QUFBeEIsR0FGbUI7QUFHdkNDLEVBQUFBLFVBQVUsRUFBVUosTUFIbUI7QUFJdkNLLEVBQUFBLFNBQVMsRUFBV0wsTUFKbUI7QUFLdkNNLEVBQUFBLFNBQVMsRUFBV047QUFMbUIsQ0FBWCxDQUFoQztBQVFBLE1BQU1PLGdCQUFnQixHQUFHWixRQUFRLENBQUNhLEtBQVQsQ0FBZSxtQkFBZixFQUFvQ1YsdUJBQXBDLENBQXpCO0FBQ0FXLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQjtBQUFDSCxFQUFBQSxnQkFBRDtBQUFvQlQsRUFBQUE7QUFBcEIsQ0FBakIiLCJzb3VyY2VSb290IjoiRDpcXGJvb20tYWR2ZXJ0aXNlXFxzZXJ2ZXJhcGlcXG1vZGVsc1xcIiwic291cmNlc0NvbnRlbnQiOlsidmFyIG1vbmdvb3NlID0gcmVxdWlyZSgnbW9uZ29vc2UnKTtcclxuY29uc3QgU2NoZW1hID0gbW9uZ29vc2UuU2NoZW1hO1xyXG5cclxuY29uc3QgaW5mbHVlbmNlcl9wb3N0c19zY2hlbWEgPSBuZXcgU2NoZW1hKHtcclxuICAgIGlkICAgICAgICAgICAgICA6ICAgU3RyaW5nLCAvLyBTdHJpbmcgaXMgc2hvcnRoYW5kIGZvciB7dHlwZTogU3RyaW5nfVxyXG4gICAgaW5mbHVlbmNlcmlkICAgIDogICB7IHR5cGU6IG1vbmdvb3NlLlNjaGVtYS5PYmplY3RJZH0sXHJcbiAgICBtZWRpYV90eXBlICAgICAgOiAgIFN0cmluZyxcclxuICAgIHBvc3RfbmFtZSAgICAgICA6ICAgU3RyaW5nLFxyXG4gICAgcG9zdF90eXBlICAgICAgIDogICBTdHJpbmcsXHJcbn0pO1xyXG5cclxuY29uc3QgaW5mbHVlbmNlcl9wb3N0cyA9IG1vbmdvb3NlLm1vZGVsKCdpbmZsdWVuY2Vyc19wb3N0cycsIGluZmx1ZW5jZXJfcG9zdHNfc2NoZW1hKTtcclxubW9kdWxlLmV4cG9ydHMgPSB7aW5mbHVlbmNlcl9wb3N0cyAsIGluZmx1ZW5jZXJfcG9zdHNfc2NoZW1hfTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "influencers_posts.js"
      ],
      "names": [
        "mongoose",
        "require",
        "Schema",
        "influencer_posts_schema",
        "id",
        "String",
        "influencerid",
        "type",
        "ObjectId",
        "media_type",
        "post_name",
        "post_type",
        "influencer_posts",
        "model",
        "module",
        "exports"
      ],
      "mappings": "AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAtB;;AACA,MAAMC,MAAM,GAAGF,QAAQ,CAACE,MAAxB;AAEA,MAAMC,uBAAuB,GAAG,IAAID,MAAJ,CAAW;AACvCE,EAAAA,EAAE,EAAkBC,MADmB;AACX;AAC5BC,EAAAA,YAAY,EAAQ;AAAEC,IAAAA,IAAI,EAAEP,QAAQ,CAACE,MAAT,CAAgBM;AAAxB,GAFmB;AAGvCC,EAAAA,UAAU,EAAUJ,MAHmB;AAIvCK,EAAAA,SAAS,EAAWL,MAJmB;AAKvCM,EAAAA,SAAS,EAAWN;AALmB,CAAX,CAAhC;AAQA,MAAMO,gBAAgB,GAAGZ,QAAQ,CAACa,KAAT,CAAe,mBAAf,EAAoCV,uBAApC,CAAzB;AACAW,MAAM,CAACC,OAAP,GAAiB;AAACH,EAAAA,gBAAD;AAAoBT,EAAAA;AAApB,CAAjB",
      "sourceRoot": "D:\\boom-advertise\\serverapi\\models\\",
      "sourcesContent": [
        "var mongoose = require('mongoose');\r\nconst Schema = mongoose.Schema;\r\n\r\nconst influencer_posts_schema = new Schema({\r\n    id              :   String, // String is shorthand for {type: String}\r\n    influencerid    :   { type: mongoose.Schema.ObjectId},\r\n    media_type      :   String,\r\n    post_name       :   String,\r\n    post_type       :   String,\r\n});\r\n\r\nconst influencer_posts = mongoose.model('influencers_posts', influencer_posts_schema);\r\nmodule.exports = {influencer_posts , influencer_posts_schema};"
      ]
    },
    "sourceType": "module",
    "mtime": 1613732578342
  },
  "{\"sourceRoot\":\"D:\\\\boom-advertise\\\\serverapi\\\\routes\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"D:\\\\boom-advertise\\\\serverapi\",\"filename\":\"D:\\\\boom-advertise\\\\serverapi\\\\routes\\\\login.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\boom-advertise\\\\serverapi\",\"plugins\":[],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\boom-advertise\\serverapi\\routes\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "D:\\boom-advertise\\serverapi",
      "filename": "D:\\boom-advertise\\serverapi\\routes\\login.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\boom-advertise\\serverapi",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\boom-advertise\\serverapi\\routes\\login.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "D:\\boom-advertise\\serverapi\\routes\\login.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\boom-advertise\\serverapi\\routes\\",
        "sourceFileName": "login.js"
      }
    },
    "ast": null,
    "code": "var express = require('express');\n\nvar router = express.Router(); //const nodemailer = require('nodemailer');\n\nvar mongoose = require('mongoose');\n\nconst promoters = require('../models/promoters');\n\nconst influencers = require('../models/influencers');\n\nvar passwordHash = require('password-hash'); //const user = require('../models/users');\n//const email = require('../config/email');\n// const app = express();\n// const cors = require(\"cors\");\n// app.use(function (req, res, next) {\n//     //Enabling CORS\n//     res.header(\"Access-Control-Allow-Origin\", \"*\");\n//     res.header(\"Access-Control-Allow-Methods\", \"GET,HEAD,OPTIONS,POST,PUT\");\n//     res.header(\"Access-Control-Allow-Headers\", \"Origin, X-Requested-With, Content-Type, Accept, x-client-key, x-client-token, x-client-secret, Authorization\");\n//     next();\n// });\n\n\nrouter.post('/', function (req, res) {\n  console.log(req.body.signin);\n\n  if (req.body.signin.user_type == 0) {\n    if (!passwordHash.isHashed(req.body.signin.password)) {\n      var hashedPassword = passwordHash.generate(req.body.signin.password); //console.log(hashedPassword)\n\n      influencers.influencers.find({\n        $or: [{\n          name: req.body.signin.email\n        }, {\n          'email': req.body.signin.email\n        }]\n      }, function (err, influencers) {\n        if (err) {\n          res.json({\n            status: \"failure\",\n            statusCode: 600,\n            msg: err\n          });\n        } else if (influencers.length == 0) {\n          console.log('hii man');\n          console.log(influencers.length);\n          res.json({\n            status: \"failure\",\n            statusCode: 500,\n            msg: \"Invalid Credentials!!!\"\n          });\n        } else {\n          if (passwordHash.verify(req.body.signin.password, influencers[0].password)) {\n            console.log(influencers);\n            res.json({\n              status: \"success\",\n              statusCode: 200,\n              data: influencers,\n              msg: \"Login successfully...\"\n            });\n          } else {\n            res.json({\n              status: \"failure\",\n              statusCode: 100,\n              msg: \"Invalid Credentials!!!\"\n            });\n          }\n        }\n      });\n    }\n  } else {\n    if (!passwordHash.isHashed(req.body.signin.password)) {\n      var hashedPassword = passwordHash.generate(req.body.signin.password); //console.log(hashedPassword)\n\n      promoters.promoters.find({\n        $or: [{\n          name: req.body.signin.email\n        }, {\n          'email': req.body.signin.email\n        }]\n      }, function (err, promoters) {\n        if (err) {\n          res.json({\n            status: \"failure\",\n            statusCode: 100,\n            msg: err\n          });\n        } else if (promoters.length == 0) {\n          res.json({\n            status: \"failure\",\n            statusCode: 100,\n            msg: \"Invalid Credentials!!!\"\n          });\n        } else {\n          if (passwordHash.verify(req.body.signin.password, promoters[0].password)) {\n            console.log(promoters);\n            res.json({\n              status: \"success\",\n              statusCode: 200,\n              data: promoters,\n              msg: \"Login successfully...\"\n            });\n          } else {\n            res.json({\n              status: \"failure\",\n              statusCode: 100,\n              msg: \"Invalid Credentials!!!\"\n            });\n          }\n        }\n      });\n    }\n  } // else{\n  // promoters.promoters\n  // .find({ $or : [{name:req.body.signin.email},{'email':req.body.signin.email}]},function (err, promoters) {\n  //     if (err) {\n  //         res.json({status:\"failure\",statusCode:100,data:err});\n  //     }else if(promoters.length==0){\n  //       res.json({status:\"failure\",statusCode:100,data:\"Invalid Credentials!!!\"});\n  //       }\n  //       else{\n  //         if(passwordHash.verify(req.body.signin.password, promoters[0].password)){\n  //           console.log(promoters)\n  //           res.json({status:\"success\",statusCode:200,data:promoters});\n  //         }\n  //       }\n  //   });\n  // } \n\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "login.js"
      ],
      "names": [
        "express",
        "require",
        "router",
        "Router",
        "mongoose",
        "promoters",
        "influencers",
        "passwordHash",
        "post",
        "req",
        "res",
        "console",
        "log",
        "body",
        "signin",
        "user_type",
        "isHashed",
        "password",
        "hashedPassword",
        "generate",
        "find",
        "$or",
        "name",
        "email",
        "err",
        "json",
        "status",
        "statusCode",
        "msg",
        "length",
        "verify",
        "data",
        "module",
        "exports"
      ],
      "mappings": "AACA,IAAIA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAArB;;AACA,IAAIC,MAAM,GAAGF,OAAO,CAACG,MAAR,EAAb,C,CACA;;AACA,IAAIC,QAAQ,GAAGH,OAAO,CAAC,UAAD,CAAtB;;AACA,MAAMI,SAAS,GAAGJ,OAAO,CAAC,qBAAD,CAAzB;;AACA,MAAMK,WAAW,GAAGL,OAAO,CAAC,uBAAD,CAA3B;;AACA,IAAIM,YAAY,GAAGN,OAAO,CAAC,eAAD,CAA1B,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGAC,MAAM,CAACM,IAAP,CAAY,GAAZ,EAAiB,UAASC,GAAT,EAAcC,GAAd,EAAmB;AACjCC,EAAAA,OAAO,CAACC,GAAR,CAAYH,GAAG,CAACI,IAAJ,CAASC,MAArB;;AACD,MAAGL,GAAG,CAACI,IAAJ,CAASC,MAAT,CAAgBC,SAAhB,IAA6B,CAAhC,EAAkC;AAEhC,QAAG,CAACR,YAAY,CAACS,QAAb,CAAsBP,GAAG,CAACI,IAAJ,CAASC,MAAT,CAAgBG,QAAtC,CAAJ,EAAoD;AAClD,UAAIC,cAAc,GAAGX,YAAY,CAACY,QAAb,CAAsBV,GAAG,CAACI,IAAJ,CAASC,MAAT,CAAgBG,QAAtC,CAArB,CADkD,CAElD;;AACAX,MAAAA,WAAW,CAACA,WAAZ,CACGc,IADH,CACQ;AAAEC,QAAAA,GAAG,EAAG,CAAC;AAACC,UAAAA,IAAI,EAACb,GAAG,CAACI,IAAJ,CAASC,MAAT,CAAgBS;AAAtB,SAAD,EAA8B;AAAC,mBAAQd,GAAG,CAACI,IAAJ,CAASC,MAAT,CAAgBS;AAAzB,SAA9B;AAAR,OADR,EACgF,UAAUC,GAAV,EAAelB,WAAf,EAA4B;AAC1G,YAAIkB,GAAJ,EAAS;AACLd,UAAAA,GAAG,CAACe,IAAJ,CAAS;AAACC,YAAAA,MAAM,EAAC,SAAR;AAAkBC,YAAAA,UAAU,EAAC,GAA7B;AAAiCC,YAAAA,GAAG,EAACJ;AAArC,WAAT;AACH,SAFD,MAEM,IAAGlB,WAAW,CAACuB,MAAZ,IAAoB,CAAvB,EAAyB;AAC7BlB,UAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAD,UAAAA,OAAO,CAACC,GAAR,CAAYN,WAAW,CAACuB,MAAxB;AACAnB,UAAAA,GAAG,CAACe,IAAJ,CAAS;AAACC,YAAAA,MAAM,EAAC,SAAR;AAAkBC,YAAAA,UAAU,EAAC,GAA7B;AAAiCC,YAAAA,GAAG,EAAC;AAArC,WAAT;AACD,SAJK,MAKA;AACF,cAAGrB,YAAY,CAACuB,MAAb,CAAoBrB,GAAG,CAACI,IAAJ,CAASC,MAAT,CAAgBG,QAApC,EAA8CX,WAAW,CAAC,CAAD,CAAX,CAAeW,QAA7D,CAAH,EAA0E;AACxEN,YAAAA,OAAO,CAACC,GAAR,CAAYN,WAAZ;AACAI,YAAAA,GAAG,CAACe,IAAJ,CAAS;AAACC,cAAAA,MAAM,EAAC,SAAR;AAAkBC,cAAAA,UAAU,EAAC,GAA7B;AAAiCI,cAAAA,IAAI,EAACzB,WAAtC;AAAkDsB,cAAAA,GAAG,EAAC;AAAtD,aAAT;AACD,WAHD,MAGK;AACHlB,YAAAA,GAAG,CAACe,IAAJ,CAAS;AAACC,cAAAA,MAAM,EAAC,SAAR;AAAkBC,cAAAA,UAAU,EAAC,GAA7B;AAAiCC,cAAAA,GAAG,EAAC;AAArC,aAAT;AACD;AACF;AACJ,OAjBD;AAkBD;AAEF,GAzBD,MAyBK;AACH,QAAG,CAACrB,YAAY,CAACS,QAAb,CAAsBP,GAAG,CAACI,IAAJ,CAASC,MAAT,CAAgBG,QAAtC,CAAJ,EAAoD;AAClD,UAAIC,cAAc,GAAGX,YAAY,CAACY,QAAb,CAAsBV,GAAG,CAACI,IAAJ,CAASC,MAAT,CAAgBG,QAAtC,CAArB,CADkD,CAElD;;AACAZ,MAAAA,SAAS,CAACA,SAAV,CACGe,IADH,CACQ;AAAEC,QAAAA,GAAG,EAAG,CAAC;AAACC,UAAAA,IAAI,EAACb,GAAG,CAACI,IAAJ,CAASC,MAAT,CAAgBS;AAAtB,SAAD,EAA8B;AAAC,mBAAQd,GAAG,CAACI,IAAJ,CAASC,MAAT,CAAgBS;AAAzB,SAA9B;AAAR,OADR,EACgF,UAAUC,GAAV,EAAenB,SAAf,EAA0B;AACxG,YAAImB,GAAJ,EAAS;AACLd,UAAAA,GAAG,CAACe,IAAJ,CAAS;AAACC,YAAAA,MAAM,EAAC,SAAR;AAAkBC,YAAAA,UAAU,EAAC,GAA7B;AAAiCC,YAAAA,GAAG,EAACJ;AAArC,WAAT;AACH,SAFD,MAEM,IAAGnB,SAAS,CAACwB,MAAV,IAAkB,CAArB,EAAuB;AAC3BnB,UAAAA,GAAG,CAACe,IAAJ,CAAS;AAACC,YAAAA,MAAM,EAAC,SAAR;AAAkBC,YAAAA,UAAU,EAAC,GAA7B;AAAiCC,YAAAA,GAAG,EAAC;AAArC,WAAT;AACD,SAFK,MAGA;AACF,cAAGrB,YAAY,CAACuB,MAAb,CAAoBrB,GAAG,CAACI,IAAJ,CAASC,MAAT,CAAgBG,QAApC,EAA8CZ,SAAS,CAAC,CAAD,CAAT,CAAaY,QAA3D,CAAH,EAAwE;AACtEN,YAAAA,OAAO,CAACC,GAAR,CAAYP,SAAZ;AACAK,YAAAA,GAAG,CAACe,IAAJ,CAAS;AAACC,cAAAA,MAAM,EAAC,SAAR;AAAkBC,cAAAA,UAAU,EAAC,GAA7B;AAAiCI,cAAAA,IAAI,EAAC1B,SAAtC;AAAgDuB,cAAAA,GAAG,EAAC;AAApD,aAAT;AACD,WAHD,MAGK;AACHlB,YAAAA,GAAG,CAACe,IAAJ,CAAS;AAACC,cAAAA,MAAM,EAAC,SAAR;AAAkBC,cAAAA,UAAU,EAAC,GAA7B;AAAiCC,cAAAA,GAAG,EAAC;AAArC,aAAT;AACD;AACF;AACJ,OAfD;AAgBD;AACF,GAhDiC,CAiDhC;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACD,CAlEH;AAoEEI,MAAM,CAACC,OAAP,GAAiB/B,MAAjB",
      "sourceRoot": "D:\\boom-advertise\\serverapi\\routes\\",
      "sourcesContent": [
        "\r\nvar express = require('express');\r\nvar router = express.Router();\r\n//const nodemailer = require('nodemailer');\r\nvar mongoose = require('mongoose');\r\nconst promoters = require('../models/promoters');\r\nconst influencers = require('../models/influencers');\r\nvar passwordHash = require('password-hash');\r\n//const user = require('../models/users');\r\n//const email = require('../config/email');\r\n// const app = express();\r\n// const cors = require(\"cors\");\r\n// app.use(function (req, res, next) {\r\n//     //Enabling CORS\r\n//     res.header(\"Access-Control-Allow-Origin\", \"*\");\r\n//     res.header(\"Access-Control-Allow-Methods\", \"GET,HEAD,OPTIONS,POST,PUT\");\r\n//     res.header(\"Access-Control-Allow-Headers\", \"Origin, X-Requested-With, Content-Type, Accept, x-client-key, x-client-token, x-client-secret, Authorization\");\r\n//     next();\r\n// });\r\n\r\n\r\nrouter.post('/', function(req, res) {\r\n   console.log(req.body.signin)\r\n  if(req.body.signin.user_type == 0){\r\n\r\n    if(!passwordHash.isHashed(req.body.signin.password)){\r\n      var hashedPassword = passwordHash.generate(req.body.signin.password);\r\n      //console.log(hashedPassword)\r\n      influencers.influencers\r\n        .find({ $or : [{name:req.body.signin.email},{'email':req.body.signin.email}]},function (err, influencers) {\r\n        if (err) {\r\n            res.json({status:\"failure\",statusCode:600,msg:err});\r\n        }else if(influencers.length==0){\r\n          console.log('hii man');\r\n          console.log(influencers.length);\r\n          res.json({status:\"failure\",statusCode:500,msg:\"Invalid Credentials!!!\"});\r\n        }\r\n          else{\r\n            if(passwordHash.verify(req.body.signin.password, influencers[0].password)){\r\n              console.log(influencers)\r\n              res.json({status:\"success\",statusCode:200,data:influencers,msg:\"Login successfully...\"});\r\n            }else{\r\n              res.json({status:\"failure\",statusCode:100,msg:\"Invalid Credentials!!!\"});\r\n            }\r\n          }\r\n      });\r\n    }\r\n\r\n  }else{\r\n    if(!passwordHash.isHashed(req.body.signin.password)){\r\n      var hashedPassword = passwordHash.generate(req.body.signin.password);\r\n      //console.log(hashedPassword)\r\n      promoters.promoters\r\n        .find({ $or : [{name:req.body.signin.email},{'email':req.body.signin.email}]},function (err, promoters) {\r\n        if (err) {\r\n            res.json({status:\"failure\",statusCode:100,msg:err});\r\n        }else if(promoters.length==0){\r\n          res.json({status:\"failure\",statusCode:100,msg:\"Invalid Credentials!!!\"});\r\n        }\r\n          else{\r\n            if(passwordHash.verify(req.body.signin.password, promoters[0].password)){\r\n              console.log(promoters)\r\n              res.json({status:\"success\",statusCode:200,data:promoters,msg:\"Login successfully...\"});\r\n            }else{\r\n              res.json({status:\"failure\",statusCode:100,msg:\"Invalid Credentials!!!\"});\r\n            }\r\n          }\r\n      });\r\n    }\r\n  }\r\n    // else{\r\n    // promoters.promoters\r\n    // .find({ $or : [{name:req.body.signin.email},{'email':req.body.signin.email}]},function (err, promoters) {\r\n      \r\n    //     if (err) {\r\n    //         res.json({status:\"failure\",statusCode:100,data:err});\r\n    //     }else if(promoters.length==0){\r\n    //       res.json({status:\"failure\",statusCode:100,data:\"Invalid Credentials!!!\"});\r\n    //       }\r\n    //       else{\r\n    //         if(passwordHash.verify(req.body.signin.password, promoters[0].password)){\r\n    //           console.log(promoters)\r\n    //           res.json({status:\"success\",statusCode:200,data:promoters});\r\n    //         }\r\n    //       }\r\n    //   });\r\n    // } \r\n  });\r\n\r\n  module.exports = router;"
      ]
    },
    "sourceType": "module",
    "mtime": 1613732579750
  },
  "{\"sourceRoot\":\"D:\\\\boom-advertise\\\\serverapi\\\\routes\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"D:\\\\boom-advertise\\\\serverapi\",\"filename\":\"D:\\\\boom-advertise\\\\serverapi\\\\routes\\\\sessionsController.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\boom-advertise\\\\serverapi\",\"plugins\":[],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\boom-advertise\\serverapi\\routes\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "D:\\boom-advertise\\serverapi",
      "filename": "D:\\boom-advertise\\serverapi\\routes\\sessionsController.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\boom-advertise\\serverapi",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\boom-advertise\\serverapi\\routes\\sessionsController.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "D:\\boom-advertise\\serverapi\\routes\\sessionsController.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\boom-advertise\\serverapi\\routes\\",
        "sourceFileName": "sessionsController.js"
      }
    },
    "ast": null,
    "code": "const express = require('express');\n\nconst router = express.Router();\n\nconst CryptoJS = require(\"crypto-js\");\n\nconst oauth = require('oauth');\n\nconst _twitterConsumerKey = process.env.TWITTER_CONSUMER_KEY;\nconst _twitterConsumerSecret = process.env.TWITTER_CONSUMER_SECRET;\nconst twitterCallbackUrl = process.env.TWITTER_CALLBACK_URL;\nconst consumer = new oauth.OAuth(\"https://twitter.com/oauth/request_token\", \"https://twitter.com/oauth/access_token\", _twitterConsumerKey, _twitterConsumerSecret, \"1.0A\", twitterCallbackUrl, \"HMAC-SHA1\");\n\nconst influencers_data = require('../models/influencers_data');\n\nconst Twitter = require('twit');\n\nvar ObjectID = require('mongodb').ObjectID; //var url = require('url');\n//var url_parts = url.parse(request.url, true);\n//var query = url_parts.query;\n\n\nrouter.get('/connect', (req, res) => {\n  console.log(consumer);\n  consumer.getOAuthRequestToken(function (error, oauthToken, oauthTokenSecret, results) {\n    console.log('oauthToken');\n    console.log(oauthToken);\n    console.log('oauthTokenSecret');\n    console.log(oauthTokenSecret);\n\n    if (error) {\n      res.send(error, 500);\n    } else {\n      req.session.oauthRequestToken = oauthToken;\n      req.session.oauthRequestTokenSecret = oauthTokenSecret;\n      const redirect = {\n        redirectUrl: `https://twitter.com/oauth/authorize?oauth_token=${req.session.oauthRequestToken}`\n      };\n      res.send(redirect);\n    }\n  });\n});\nrouter.post('/saveAccessTokens', (req, res) => {\n  consumer.getOAuthAccessToken(req.body.oauth_token, req.session.oauthRequestTokenSecret, req.body.oauth_verifier, (error, oauthAccessToken, oauthAccessTokenSecret, results) => {\n    if (error) {\n      // logger.error(error);\n      res.send(error, 500);\n    } else {\n      // req.session.oauthAccessToken = oauthAccessToken;\n      //req.session.oauthAccessTokenSecret = oauthAccessTokenSecret\n      // return res.send({ message: 'token saved' });\n      const client = new Twitter({\n        consumer_key: _twitterConsumerKey,\n        consumer_secret: _twitterConsumerSecret,\n        access_token: oauthAccessToken,\n        access_token_secret: oauthAccessTokenSecret\n      });\n      client.get('account/verify_credentials').then(user => {\n        //  res.send(user)\n        console.log('mehar');\n        live_twitter_follower = user.data.followers_count;\n        /*******update twitter data */\n\n        influencers_data.influencers_data.updateOne({\n          \"influencerid\": new ObjectID(req.body._id)\n        }, {\n          $set: {\n            \"twitterfollowers\": live_twitter_follower\n          }\n        }, function (err, result) {\n          if (err) {\n            console.log(err);\n            res.json({\n              status: \"failure\",\n              statusCode: 100,\n              error: 'could not save data'\n            });\n          } else {\n            console.log(result);\n            res.json({\n              status: \"success\",\n              statusCode: 200,\n              data: result\n            });\n          }\n        });\n        /*******update twitter data */\n      }).catch(error => {\n        res.send(error);\n      });\n    }\n  });\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlc3Npb25zQ29udHJvbGxlci5qcyJdLCJuYW1lcyI6WyJleHByZXNzIiwicmVxdWlyZSIsInJvdXRlciIsIlJvdXRlciIsIkNyeXB0b0pTIiwib2F1dGgiLCJfdHdpdHRlckNvbnN1bWVyS2V5IiwicHJvY2VzcyIsImVudiIsIlRXSVRURVJfQ09OU1VNRVJfS0VZIiwiX3R3aXR0ZXJDb25zdW1lclNlY3JldCIsIlRXSVRURVJfQ09OU1VNRVJfU0VDUkVUIiwidHdpdHRlckNhbGxiYWNrVXJsIiwiVFdJVFRFUl9DQUxMQkFDS19VUkwiLCJjb25zdW1lciIsIk9BdXRoIiwiaW5mbHVlbmNlcnNfZGF0YSIsIlR3aXR0ZXIiLCJPYmplY3RJRCIsImdldCIsInJlcSIsInJlcyIsImNvbnNvbGUiLCJsb2ciLCJnZXRPQXV0aFJlcXVlc3RUb2tlbiIsImVycm9yIiwib2F1dGhUb2tlbiIsIm9hdXRoVG9rZW5TZWNyZXQiLCJyZXN1bHRzIiwic2VuZCIsInNlc3Npb24iLCJvYXV0aFJlcXVlc3RUb2tlbiIsIm9hdXRoUmVxdWVzdFRva2VuU2VjcmV0IiwicmVkaXJlY3QiLCJyZWRpcmVjdFVybCIsInBvc3QiLCJnZXRPQXV0aEFjY2Vzc1Rva2VuIiwiYm9keSIsIm9hdXRoX3Rva2VuIiwib2F1dGhfdmVyaWZpZXIiLCJvYXV0aEFjY2Vzc1Rva2VuIiwib2F1dGhBY2Nlc3NUb2tlblNlY3JldCIsImNsaWVudCIsImNvbnN1bWVyX2tleSIsImNvbnN1bWVyX3NlY3JldCIsImFjY2Vzc190b2tlbiIsImFjY2Vzc190b2tlbl9zZWNyZXQiLCJ0aGVuIiwidXNlciIsImxpdmVfdHdpdHRlcl9mb2xsb3dlciIsImRhdGEiLCJmb2xsb3dlcnNfY291bnQiLCJ1cGRhdGVPbmUiLCJfaWQiLCIkc2V0IiwiZXJyIiwicmVzdWx0IiwianNvbiIsInN0YXR1cyIsInN0YXR1c0NvZGUiLCJjYXRjaCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLE9B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QyxLQUFLLElBQUk7QUFDaEJKLFFBQUFBLEdBQUcsQ0FBQ1EsSUFBSixDQUFTSixLQUFUO0FBQ0QsT0F6QkQ7QUE2QkQ7QUFDRixHQW5ERDtBQW9ERCxDQXJERDtBQXNEQW9DLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQjVELE1BQWpCIiwic291cmNlUm9vdCI6IkQ6XFxib29tLWFkdmVydGlzZVxcc2VydmVyYXBpXFxyb3V0ZXNcXCIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGV4cHJlc3MgPSByZXF1aXJlKCdleHByZXNzJyk7XHJcbmNvbnN0IHJvdXRlciA9IGV4cHJlc3MuUm91dGVyKCk7XHJcbmNvbnN0IENyeXB0b0pTID0gcmVxdWlyZShcImNyeXB0by1qc1wiKTtcclxuY29uc3Qgb2F1dGggPSByZXF1aXJlKCdvYXV0aCcpO1xyXG5jb25zdCBfdHdpdHRlckNvbnN1bWVyS2V5ID0gcHJvY2Vzcy5lbnYuVFdJVFRFUl9DT05TVU1FUl9LRVk7XHJcbmNvbnN0IF90d2l0dGVyQ29uc3VtZXJTZWNyZXQgPSBwcm9jZXNzLmVudi5UV0lUVEVSX0NPTlNVTUVSX1NFQ1JFVDtcclxuY29uc3QgdHdpdHRlckNhbGxiYWNrVXJsID0gcHJvY2Vzcy5lbnYuVFdJVFRFUl9DQUxMQkFDS19VUkw7XHJcbmNvbnN0IGNvbnN1bWVyID0gbmV3IG9hdXRoLk9BdXRoKFwiaHR0cHM6Ly90d2l0dGVyLmNvbS9vYXV0aC9yZXF1ZXN0X3Rva2VuXCIsIFwiaHR0cHM6Ly90d2l0dGVyLmNvbS9vYXV0aC9hY2Nlc3NfdG9rZW5cIixfdHdpdHRlckNvbnN1bWVyS2V5LCBfdHdpdHRlckNvbnN1bWVyU2VjcmV0LCBcIjEuMEFcIiwgdHdpdHRlckNhbGxiYWNrVXJsLCBcIkhNQUMtU0hBMVwiKTtcclxuY29uc3QgaW5mbHVlbmNlcnNfZGF0YSA9IHJlcXVpcmUoJy4uL21vZGVscy9pbmZsdWVuY2Vyc19kYXRhJyk7XHJcbmNvbnN0IFR3aXR0ZXIgPSByZXF1aXJlKCd0d2l0Jyk7XHJcbnZhciBPYmplY3RJRCA9IHJlcXVpcmUoJ21vbmdvZGInKS5PYmplY3RJRDtcclxuXHJcblxyXG4vL3ZhciB1cmwgPSByZXF1aXJlKCd1cmwnKTtcclxuLy92YXIgdXJsX3BhcnRzID0gdXJsLnBhcnNlKHJlcXVlc3QudXJsLCB0cnVlKTtcclxuLy92YXIgcXVlcnkgPSB1cmxfcGFydHMucXVlcnk7XHJcblxyXG5yb3V0ZXIuZ2V0KCcvY29ubmVjdCcsIChyZXEsIHJlcykgPT4ge1xyXG4gIFxyXG4gIGNvbnNvbGUubG9nKGNvbnN1bWVyKTtcclxuXHJcbiAgY29uc3VtZXIuZ2V0T0F1dGhSZXF1ZXN0VG9rZW4oZnVuY3Rpb24gKGVycm9yLCBvYXV0aFRva2VuLCAgIG9hdXRoVG9rZW5TZWNyZXQsIHJlc3VsdHMpIHtcclxuICAgIGNvbnNvbGUubG9nKCdvYXV0aFRva2VuJyk7XHJcbiAgICBjb25zb2xlLmxvZyhvYXV0aFRva2VuKTtcclxuICAgIGNvbnNvbGUubG9nKCdvYXV0aFRva2VuU2VjcmV0Jyk7XHJcbiAgICBjb25zb2xlLmxvZyhvYXV0aFRva2VuU2VjcmV0KTtcclxuICAgIGlmIChlcnJvcikge1xyXG4gICAgICByZXMuc2VuZChlcnJvciwgNTAwKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHJlcS5zZXNzaW9uLm9hdXRoUmVxdWVzdFRva2VuID0gb2F1dGhUb2tlbjtcclxuICAgICAgcmVxLnNlc3Npb24ub2F1dGhSZXF1ZXN0VG9rZW5TZWNyZXQgPSBvYXV0aFRva2VuU2VjcmV0O1xyXG4gICAgICBjb25zdCByZWRpcmVjdCA9IHsgXHJcbnJlZGlyZWN0VXJsOiBgaHR0cHM6Ly90d2l0dGVyLmNvbS9vYXV0aC9hdXRob3JpemU/b2F1dGhfdG9rZW49JHtyZXEuc2Vzc2lvbi5vYXV0aFJlcXVlc3RUb2tlbn1gXHJcbiAgICB9XHJcbiAgICAgIHJlcy5zZW5kKHJlZGlyZWN0KTtcclxuICAgIH1cclxuICB9KTtcclxufSk7XHJcbnJvdXRlci5wb3N0KCcvc2F2ZUFjY2Vzc1Rva2VucycsIChyZXEsIHJlcykgPT4ge1xyXG4gIGNvbnN1bWVyLmdldE9BdXRoQWNjZXNzVG9rZW4oXHJcbiAgcmVxLmJvZHkub2F1dGhfdG9rZW4sXHJcbiAgcmVxLnNlc3Npb24ub2F1dGhSZXF1ZXN0VG9rZW5TZWNyZXQsXHJcbiAgcmVxLmJvZHkub2F1dGhfdmVyaWZpZXIsXHJcbiAgKGVycm9yLCBvYXV0aEFjY2Vzc1Rva2VuLCBvYXV0aEFjY2Vzc1Rva2VuU2VjcmV0LCByZXN1bHRzKSA9PiB7XHJcbiAgICBpZiAoZXJyb3IpIHtcclxuICAgICAvLyBsb2dnZXIuZXJyb3IoZXJyb3IpO1xyXG4gICAgICByZXMuc2VuZChlcnJvciwgNTAwKTtcclxuICAgIH1cclxuICAgIGVsc2Uge1xyXG4gICAgIC8vIHJlcS5zZXNzaW9uLm9hdXRoQWNjZXNzVG9rZW4gPSBvYXV0aEFjY2Vzc1Rva2VuO1xyXG4gICAgICAvL3JlcS5zZXNzaW9uLm9hdXRoQWNjZXNzVG9rZW5TZWNyZXQgPSBvYXV0aEFjY2Vzc1Rva2VuU2VjcmV0XHJcbiAgICAgLy8gcmV0dXJuIHJlcy5zZW5kKHsgbWVzc2FnZTogJ3Rva2VuIHNhdmVkJyB9KTtcclxuXHJcbiAgICAgIGNvbnN0IGNsaWVudCA9IG5ldyBUd2l0dGVyKHtcclxuICAgICAgICBjb25zdW1lcl9rZXk6IF90d2l0dGVyQ29uc3VtZXJLZXksXHJcbiAgICAgICAgY29uc3VtZXJfc2VjcmV0OiBfdHdpdHRlckNvbnN1bWVyU2VjcmV0LFxyXG4gICAgICAgIGFjY2Vzc190b2tlbjogb2F1dGhBY2Nlc3NUb2tlbixcclxuICAgICAgICBhY2Nlc3NfdG9rZW5fc2VjcmV0OiBvYXV0aEFjY2Vzc1Rva2VuU2VjcmV0XHJcbiAgICAgIH0pO1xyXG5cclxuICAgICAgY2xpZW50LmdldCgnYWNjb3VudC92ZXJpZnlfY3JlZGVudGlhbHMnKS50aGVuKHVzZXIgPT4ge1xyXG4gICAgICAvLyAgcmVzLnNlbmQodXNlcilcclxuICAgICAgICAgICAgY29uc29sZS5sb2coJ21laGFyJyk7XHJcbiAgICAgICAgICAgIGxpdmVfdHdpdHRlcl9mb2xsb3dlciA9IHVzZXIuZGF0YS5mb2xsb3dlcnNfY291bnQ7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICAgICAvKioqKioqKnVwZGF0ZSB0d2l0dGVyIGRhdGEgKi9cclxuICAgICAgICAgICAgICAgIGluZmx1ZW5jZXJzX2RhdGEuaW5mbHVlbmNlcnNfZGF0YS51cGRhdGVPbmUoXHJcbiAgICAgICAgICAgICAgICAgIHsgXCJpbmZsdWVuY2VyaWRcIjogbmV3IE9iamVjdElEKHJlcS5ib2R5Ll9pZCkgfSxcclxuICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICRzZXQ6IHsgXCJ0d2l0dGVyZm9sbG93ZXJzXCIgOiBsaXZlX3R3aXR0ZXJfZm9sbG93ZXIgfSxcclxuICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgZnVuY3Rpb24oZXJyLHJlc3VsdCl7IFxyXG4gICAgICAgICAgICAgICAgICAgIGlmIChlcnIpIHtcclxuICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGVycik7XHJcbiAgICAgICAgICAgICAgICAgICAgICByZXMuanNvbih7c3RhdHVzOlwiZmFpbHVyZVwiLHN0YXR1c0NvZGU6MTAwLGVycm9yOidjb3VsZCBub3Qgc2F2ZSBkYXRhJ30pO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICBlbHNle1xyXG4gICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2cocmVzdWx0KTtcclxuICAgICAgICAgICAgICAgICAgICByZXMuanNvbih7c3RhdHVzOlwic3VjY2Vzc1wiLHN0YXR1c0NvZGU6MjAwLGRhdGE6cmVzdWx0fSk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgIC8qKioqKioqdXBkYXRlIHR3aXR0ZXIgZGF0YSAqL1xyXG5cclxuICAgICAgfSkuY2F0Y2goZXJyb3IgPT4ge1xyXG4gICAgICAgIHJlcy5zZW5kKGVycm9yKTtcclxuICAgICAgfSk7XHJcblxyXG5cclxuXHJcbiAgICB9XHJcbiAgfSk7XHJcbn0pO1xyXG5tb2R1bGUuZXhwb3J0cyA9IHJvdXRlcjsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "sessionsController.js"
      ],
      "names": [
        "express",
        "require",
        "router",
        "Router",
        "CryptoJS",
        "oauth",
        "_twitterConsumerKey",
        "process",
        "env",
        "TWITTER_CONSUMER_KEY",
        "_twitterConsumerSecret",
        "TWITTER_CONSUMER_SECRET",
        "twitterCallbackUrl",
        "TWITTER_CALLBACK_URL",
        "consumer",
        "OAuth",
        "influencers_data",
        "Twitter",
        "ObjectID",
        "get",
        "req",
        "res",
        "console",
        "log",
        "getOAuthRequestToken",
        "error",
        "oauthToken",
        "oauthTokenSecret",
        "results",
        "send",
        "session",
        "oauthRequestToken",
        "oauthRequestTokenSecret",
        "redirect",
        "redirectUrl",
        "post",
        "getOAuthAccessToken",
        "body",
        "oauth_token",
        "oauth_verifier",
        "oauthAccessToken",
        "oauthAccessTokenSecret",
        "client",
        "consumer_key",
        "consumer_secret",
        "access_token",
        "access_token_secret",
        "then",
        "user",
        "live_twitter_follower",
        "data",
        "followers_count",
        "updateOne",
        "_id",
        "$set",
        "err",
        "result",
        "json",
        "status",
        "statusCode",
        "catch",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "D:\\boom-advertise\\serverapi\\routes\\",
      "sourcesContent": [
        "const express = require('express');\r\nconst router = express.Router();\r\nconst CryptoJS = require(\"crypto-js\");\r\nconst oauth = require('oauth');\r\nconst _twitterConsumerKey = process.env.TWITTER_CONSUMER_KEY;\r\nconst _twitterConsumerSecret = process.env.TWITTER_CONSUMER_SECRET;\r\nconst twitterCallbackUrl = process.env.TWITTER_CALLBACK_URL;\r\nconst consumer = new oauth.OAuth(\"https://twitter.com/oauth/request_token\", \"https://twitter.com/oauth/access_token\",_twitterConsumerKey, _twitterConsumerSecret, \"1.0A\", twitterCallbackUrl, \"HMAC-SHA1\");\r\nconst influencers_data = require('../models/influencers_data');\r\nconst Twitter = require('twit');\r\nvar ObjectID = require('mongodb').ObjectID;\r\n\r\n\r\n//var url = require('url');\r\n//var url_parts = url.parse(request.url, true);\r\n//var query = url_parts.query;\r\n\r\nrouter.get('/connect', (req, res) => {\r\n  \r\n  console.log(consumer);\r\n\r\n  consumer.getOAuthRequestToken(function (error, oauthToken,   oauthTokenSecret, results) {\r\n    console.log('oauthToken');\r\n    console.log(oauthToken);\r\n    console.log('oauthTokenSecret');\r\n    console.log(oauthTokenSecret);\r\n    if (error) {\r\n      res.send(error, 500);\r\n    } else {\r\n      req.session.oauthRequestToken = oauthToken;\r\n      req.session.oauthRequestTokenSecret = oauthTokenSecret;\r\n      const redirect = { \r\nredirectUrl: `https://twitter.com/oauth/authorize?oauth_token=${req.session.oauthRequestToken}`\r\n    }\r\n      res.send(redirect);\r\n    }\r\n  });\r\n});\r\nrouter.post('/saveAccessTokens', (req, res) => {\r\n  consumer.getOAuthAccessToken(\r\n  req.body.oauth_token,\r\n  req.session.oauthRequestTokenSecret,\r\n  req.body.oauth_verifier,\r\n  (error, oauthAccessToken, oauthAccessTokenSecret, results) => {\r\n    if (error) {\r\n     // logger.error(error);\r\n      res.send(error, 500);\r\n    }\r\n    else {\r\n     // req.session.oauthAccessToken = oauthAccessToken;\r\n      //req.session.oauthAccessTokenSecret = oauthAccessTokenSecret\r\n     // return res.send({ message: 'token saved' });\r\n\r\n      const client = new Twitter({\r\n        consumer_key: _twitterConsumerKey,\r\n        consumer_secret: _twitterConsumerSecret,\r\n        access_token: oauthAccessToken,\r\n        access_token_secret: oauthAccessTokenSecret\r\n      });\r\n\r\n      client.get('account/verify_credentials').then(user => {\r\n      //  res.send(user)\r\n            console.log('mehar');\r\n            live_twitter_follower = user.data.followers_count;\r\n\r\n                        /*******update twitter data */\r\n                influencers_data.influencers_data.updateOne(\r\n                  { \"influencerid\": new ObjectID(req.body._id) },\r\n                  {\r\n                    $set: { \"twitterfollowers\" : live_twitter_follower },\r\n                  },\r\n                  function(err,result){ \r\n                    if (err) {\r\n                      console.log(err);\r\n                      res.json({status:\"failure\",statusCode:100,error:'could not save data'});\r\n                    }\r\n                    else{\r\n                      console.log(result);\r\n                    res.json({status:\"success\",statusCode:200,data:result});\r\n                    }\r\n                  });\r\n                /*******update twitter data */\r\n\r\n      }).catch(error => {\r\n        res.send(error);\r\n      });\r\n\r\n\r\n\r\n    }\r\n  });\r\n});\r\nmodule.exports = router;"
      ]
    },
    "sourceType": "module",
    "mtime": 1613820152913
  }
}