{
  "{\"sourceRoot\":\"C:\\\\Users\\\\Codenomad\\\\Desktop\\\\boom-advertise\\\\boom-advertise\\\\serverapi\\\\routes\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Codenomad\\\\Desktop\\\\boom-advertise\\\\boom-advertise\\\\serverapi\",\"filename\":\"C:\\\\Users\\\\Codenomad\\\\Desktop\\\\boom-advertise\\\\boom-advertise\\\\serverapi\\\\routes\\\\promoters.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Codenomad\\\\Desktop\\\\boom-advertise\\\\boom-advertise\\\\serverapi\",\"plugins\":[],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi\\routes\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi",
      "filename": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi\\routes\\promoters.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi\\routes\\promoters.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi\\routes\\promoters.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi\\routes\\",
        "sourceFileName": "promoters.js"
      }
    },
    "ast": null,
    "code": "var express = require('express');\n\nvar router = express.Router();\n\nvar mongoose = require('mongoose');\n\nconst promoter = require('../models/promoters'); //const email = require('../config/email');\n//const nodemailer = require('nodemailer');\n\n\nvar passwordHash = require('password-hash'); //process.env.NODE_TLS_REJECT_UNAUTHORIZED = \"1\";\n\n\nrouter.post('/register', function (req, res) {\n  console.log(req.body.promoter_signup);\n  var promoterCreate = new promoter.promoters(req.body.promoter_signup);\n  var datetime = new Date();\n  let pass = passwordHash.generate(req.body.promoter_signup.password);\n  promoterCreate.joindate = datetime;\n  promoterCreate.password = pass;\n  promoter.promoters.findOne({\n    email: req.body.promoter_signup.email\n  }, function (err, promoters) {\n    if (err) res.json({\n      status: \"failure\",\n      statusCode: 100,\n      msg: err\n    });\n\n    if (promoters) {\n      console.log(promoters);\n      res.json({\n        status: \"failure\",\n        statusCode: 100,\n        msg: \"Email already exists!!\"\n      });\n    } else {\n      promoter.promoters.findOne({\n        name: req.body.promoter_signup.name\n      }, function (err, promoters) {\n        if (err) res.json({\n          status: \"failure\",\n          statusCode: 100,\n          msg: err\n        });\n\n        if (promoters) {\n          console.log(promoters);\n          res.json({\n            status: \"failure\",\n            statusCode: 100,\n            msg: \"Username already exists!!\"\n          });\n        } else {\n          promoterCreate.save(function (err, promoter) {\n            if (err) res.json({\n              status: \"failure\",\n              statusCode: 100,\n              msg: err\n            });\n            res.json({\n              status: \"success\",\n              statusCode: 200,\n              data: promoter,\n              msg: \"Signup & SignIn successfully!\"\n            });\n          });\n        }\n      });\n    }\n  });\n});\nrouter.post('/singlePromoter', function (req, res) {\n  promoter.promoters.find({\n    _id: req.body.id\n  }, function (err, promoter_data) {\n    if (err) res.json({\n      status: \"failure\",\n      statusCode: 100,\n      error: err\n    });\n    res.json({\n      status: \"success\",\n      statusCode: 200,\n      data: promoter_data\n    });\n  });\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb21vdGVycy5qcyJdLCJuYW1lcyI6WyJleHByZXNzIiwicmVxdWlyZSIsInJvdXRlciIsIlJvdXRlciIsIm1vbmdvb3NlIiwicHJvbW90ZXIiLCJwYXNzd29yZEhhc2giLCJwb3N0IiwicmVxIiwicmVzIiwiY29uc29sZSIsImxvZyIsImJvZHkiLCJwcm9tb3Rlcl9zaWdudXAiLCJwcm9tb3RlckNyZWF0ZSIsInByb21vdGVycyIsImRhdGV0aW1lIiwiRGF0ZSIsInBhc3MiLCJnZW5lcmF0ZSIsInBhc3N3b3JkIiwiam9pbmRhdGUiLCJmaW5kT25lIiwiZW1haWwiLCJlcnIiLCJqc29uIiwic3RhdHVzIiwic3RhdHVzQ29kZSIsIm1zZyIsIm5hbWUiLCJzYXZlIiwiZGF0YSIsImZpbmQiLCJfaWQiLCJpZCIsInByb21vdGVyX2RhdGEiLCJlcnJvciIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUNBLElBQUlBLE9BQU8sR0FBR0MsT0FBTyxDQUFDLFNBQUQsQ0FBckI7O0FBQ0EsSUFBSUMsTUFBTSxHQUFHRixPQUFPLENBQUNHLE1BQVIsRUFBYjs7QUFDQSxJQUFJQyxRQUFRLEdBQUdILE9BQU8sQ0FBQyxVQUFELENBQXRCOztBQUNBLE1BQU1JLFFBQVEsR0FBR0osT0FBTyxDQUFDLHFCQUFELENBQXhCLEMsQ0FDQTtBQUNBOzs7QUFDQSxJQUFJSyxZQUFZLEdBQUdMLE9BQU8sQ0FBQyxlQUFELENBQTFCLEMsQ0FFQTs7O0FBRUFDLE1BQU0sQ0FBQ0ssSUFBUCxDQUFZLFdBQVosRUFBeUIsVUFBU0MsR0FBVCxFQUFhQyxHQUFiLEVBQWtCO0FBQzNDQyxFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWUgsR0FBRyxDQUFDSSxJQUFKLENBQVNDLGVBQXJCO0FBQ00sTUFBSUMsY0FBYyxHQUFJLElBQUlULFFBQVEsQ0FBQ1UsU0FBYixDQUF1QlAsR0FBRyxDQUFDSSxJQUFKLENBQVNDLGVBQWhDLENBQXRCO0FBRUEsTUFBSUcsUUFBUSxHQUFHLElBQUlDLElBQUosRUFBZjtBQUNBLE1BQUlDLElBQUksR0FBR1osWUFBWSxDQUFDYSxRQUFiLENBQXNCWCxHQUFHLENBQUNJLElBQUosQ0FBU0MsZUFBVCxDQUF5Qk8sUUFBL0MsQ0FBWDtBQUVBTixFQUFBQSxjQUFjLENBQUNPLFFBQWYsR0FBMEJMLFFBQTFCO0FBQ0FGLEVBQUFBLGNBQWMsQ0FBQ00sUUFBZixHQUEwQkYsSUFBMUI7QUFFQWIsRUFBQUEsUUFBUSxDQUFDVSxTQUFULENBQW1CTyxPQUFuQixDQUEyQjtBQUFDQyxJQUFBQSxLQUFLLEVBQUNmLEdBQUcsQ0FBQ0ksSUFBSixDQUFTQyxlQUFULENBQXlCVTtBQUFoQyxHQUEzQixFQUFtRSxVQUFTQyxHQUFULEVBQWNULFNBQWQsRUFBeUI7QUFDMUYsUUFBSVMsR0FBSixFQUFVZixHQUFHLENBQUNnQixJQUFKLENBQVM7QUFBQ0MsTUFBQUEsTUFBTSxFQUFDLFNBQVI7QUFBa0JDLE1BQUFBLFVBQVUsRUFBQyxHQUE3QjtBQUFpQ0MsTUFBQUEsR0FBRyxFQUFDSjtBQUFyQyxLQUFUOztBQUVWLFFBQUdULFNBQUgsRUFBYTtBQUNYTCxNQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWUksU0FBWjtBQUNBTixNQUFBQSxHQUFHLENBQUNnQixJQUFKLENBQVM7QUFBQ0MsUUFBQUEsTUFBTSxFQUFDLFNBQVI7QUFBa0JDLFFBQUFBLFVBQVUsRUFBQyxHQUE3QjtBQUFpQ0MsUUFBQUEsR0FBRyxFQUFDO0FBQXJDLE9BQVQ7QUFDRCxLQUhELE1BR0s7QUFDRHZCLE1BQUFBLFFBQVEsQ0FBQ1UsU0FBVCxDQUFtQk8sT0FBbkIsQ0FBMkI7QUFBQ08sUUFBQUEsSUFBSSxFQUFDckIsR0FBRyxDQUFDSSxJQUFKLENBQVNDLGVBQVQsQ0FBeUJnQjtBQUEvQixPQUEzQixFQUFpRSxVQUFTTCxHQUFULEVBQWNULFNBQWQsRUFBeUI7QUFDMUYsWUFBSVMsR0FBSixFQUFVZixHQUFHLENBQUNnQixJQUFKLENBQVM7QUFBQ0MsVUFBQUEsTUFBTSxFQUFDLFNBQVI7QUFBa0JDLFVBQUFBLFVBQVUsRUFBQyxHQUE3QjtBQUFpQ0MsVUFBQUEsR0FBRyxFQUFDSjtBQUFyQyxTQUFUOztBQUVWLFlBQUdULFNBQUgsRUFBYTtBQUNYTCxVQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWUksU0FBWjtBQUNBTixVQUFBQSxHQUFHLENBQUNnQixJQUFKLENBQVM7QUFBQ0MsWUFBQUEsTUFBTSxFQUFDLFNBQVI7QUFBa0JDLFlBQUFBLFVBQVUsRUFBQyxHQUE3QjtBQUFpQ0MsWUFBQUEsR0FBRyxFQUFDO0FBQXJDLFdBQVQ7QUFDRCxTQUhELE1BSUk7QUFDQWQsVUFBQUEsY0FBYyxDQUFDZ0IsSUFBZixDQUFvQixVQUFVTixHQUFWLEVBQWVuQixRQUFmLEVBQXlCO0FBQzdDLGdCQUFJbUIsR0FBSixFQUFTZixHQUFHLENBQUNnQixJQUFKLENBQVM7QUFBQ0MsY0FBQUEsTUFBTSxFQUFDLFNBQVI7QUFBa0JDLGNBQUFBLFVBQVUsRUFBQyxHQUE3QjtBQUFpQ0MsY0FBQUEsR0FBRyxFQUFDSjtBQUFyQyxhQUFUO0FBRVRmLFlBQUFBLEdBQUcsQ0FBQ2dCLElBQUosQ0FBUztBQUFDQyxjQUFBQSxNQUFNLEVBQUMsU0FBUjtBQUFrQkMsY0FBQUEsVUFBVSxFQUFDLEdBQTdCO0FBQWlDSSxjQUFBQSxJQUFJLEVBQUMxQixRQUF0QztBQUErQ3VCLGNBQUFBLEdBQUcsRUFBQztBQUFuRCxhQUFUO0FBQ0QsV0FKQztBQUtIO0FBQ0YsT0FkQztBQWVIO0FBQ0YsR0F2QkQ7QUF5QkQsQ0FuQ0w7QUFxQ0kxQixNQUFNLENBQUNLLElBQVAsQ0FBWSxpQkFBWixFQUErQixVQUFTQyxHQUFULEVBQWNDLEdBQWQsRUFBbUI7QUFDaERKLEVBQUFBLFFBQVEsQ0FBQ1UsU0FBVCxDQUFtQmlCLElBQW5CLENBQXdCO0FBQUNDLElBQUFBLEdBQUcsRUFBQ3pCLEdBQUcsQ0FBQ0ksSUFBSixDQUFTc0I7QUFBZCxHQUF4QixFQUEyQyxVQUFTVixHQUFULEVBQWNXLGFBQWQsRUFBNkI7QUFDdEUsUUFBSVgsR0FBSixFQUFVZixHQUFHLENBQUNnQixJQUFKLENBQVM7QUFBQ0MsTUFBQUEsTUFBTSxFQUFDLFNBQVI7QUFBa0JDLE1BQUFBLFVBQVUsRUFBQyxHQUE3QjtBQUFpQ1MsTUFBQUEsS0FBSyxFQUFDWjtBQUF2QyxLQUFUO0FBQ1ZmLElBQUFBLEdBQUcsQ0FBQ2dCLElBQUosQ0FBUztBQUFDQyxNQUFBQSxNQUFNLEVBQUMsU0FBUjtBQUFrQkMsTUFBQUEsVUFBVSxFQUFDLEdBQTdCO0FBQWlDSSxNQUFBQSxJQUFJLEVBQUNJO0FBQXRDLEtBQVQ7QUFDRCxHQUhEO0FBSUQsQ0FMRDtBQU9BRSxNQUFNLENBQUNDLE9BQVAsR0FBaUJwQyxNQUFqQiIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXENvZGVub21hZFxcRGVza3RvcFxcYm9vbS1hZHZlcnRpc2VcXGJvb20tYWR2ZXJ0aXNlXFxzZXJ2ZXJhcGlcXHJvdXRlc1xcIiwic291cmNlc0NvbnRlbnQiOlsiXHJcbnZhciBleHByZXNzID0gcmVxdWlyZSgnZXhwcmVzcycpO1xyXG52YXIgcm91dGVyID0gZXhwcmVzcy5Sb3V0ZXIoKTtcclxudmFyIG1vbmdvb3NlID0gcmVxdWlyZSgnbW9uZ29vc2UnKTtcclxuY29uc3QgcHJvbW90ZXIgPSByZXF1aXJlKCcuLi9tb2RlbHMvcHJvbW90ZXJzJyk7XHJcbi8vY29uc3QgZW1haWwgPSByZXF1aXJlKCcuLi9jb25maWcvZW1haWwnKTtcclxuLy9jb25zdCBub2RlbWFpbGVyID0gcmVxdWlyZSgnbm9kZW1haWxlcicpO1xyXG52YXIgcGFzc3dvcmRIYXNoID0gcmVxdWlyZSgncGFzc3dvcmQtaGFzaCcpO1xyXG5cclxuLy9wcm9jZXNzLmVudi5OT0RFX1RMU19SRUpFQ1RfVU5BVVRIT1JJWkVEID0gXCIxXCI7XHJcblxyXG5yb3V0ZXIucG9zdCgnL3JlZ2lzdGVyJywgZnVuY3Rpb24ocmVxLHJlcykge1xyXG5jb25zb2xlLmxvZyhyZXEuYm9keS5wcm9tb3Rlcl9zaWdudXApO1xyXG4gICAgICB2YXIgcHJvbW90ZXJDcmVhdGUgPSAgbmV3IHByb21vdGVyLnByb21vdGVycyhyZXEuYm9keS5wcm9tb3Rlcl9zaWdudXApO1xyXG5cclxuICAgICAgdmFyIGRhdGV0aW1lID0gbmV3IERhdGUoKTtcclxuICAgICAgbGV0IHBhc3MgPSBwYXNzd29yZEhhc2guZ2VuZXJhdGUocmVxLmJvZHkucHJvbW90ZXJfc2lnbnVwLnBhc3N3b3JkKVxyXG5cclxuICAgICAgcHJvbW90ZXJDcmVhdGUuam9pbmRhdGUgPSBkYXRldGltZVxyXG4gICAgICBwcm9tb3RlckNyZWF0ZS5wYXNzd29yZCA9IHBhc3NcclxuICAgICAgXHJcbiAgICAgIHByb21vdGVyLnByb21vdGVycy5maW5kT25lKHtlbWFpbDpyZXEuYm9keS5wcm9tb3Rlcl9zaWdudXAuZW1haWx9LCBmdW5jdGlvbihlcnIsIHByb21vdGVycykge1xyXG4gICAgICAgIGlmIChlcnIpICByZXMuanNvbih7c3RhdHVzOlwiZmFpbHVyZVwiLHN0YXR1c0NvZGU6MTAwLG1zZzplcnJ9KTtcclxuICAgICAgICBcclxuICAgICAgICBpZihwcm9tb3RlcnMpe1xyXG4gICAgICAgICAgY29uc29sZS5sb2cocHJvbW90ZXJzKVxyXG4gICAgICAgICAgcmVzLmpzb24oe3N0YXR1czpcImZhaWx1cmVcIixzdGF0dXNDb2RlOjEwMCxtc2c6XCJFbWFpbCBhbHJlYWR5IGV4aXN0cyEhXCJ9KTtcclxuICAgICAgICB9ZWxzZXtcclxuICAgICAgICAgICAgcHJvbW90ZXIucHJvbW90ZXJzLmZpbmRPbmUoe25hbWU6cmVxLmJvZHkucHJvbW90ZXJfc2lnbnVwLm5hbWV9LCBmdW5jdGlvbihlcnIsIHByb21vdGVycykge1xyXG4gICAgICAgICAgICBpZiAoZXJyKSAgcmVzLmpzb24oe3N0YXR1czpcImZhaWx1cmVcIixzdGF0dXNDb2RlOjEwMCxtc2c6ZXJyfSk7XHJcbiAgICAgICAgXHJcbiAgICAgICAgICAgIGlmKHByb21vdGVycyl7XHJcbiAgICAgICAgICAgICAgY29uc29sZS5sb2cocHJvbW90ZXJzKVxyXG4gICAgICAgICAgICAgIHJlcy5qc29uKHtzdGF0dXM6XCJmYWlsdXJlXCIsc3RhdHVzQ29kZToxMDAsbXNnOlwiVXNlcm5hbWUgYWxyZWFkeSBleGlzdHMhIVwifSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZXtcclxuICAgICAgICAgICAgICAgIHByb21vdGVyQ3JlYXRlLnNhdmUoZnVuY3Rpb24gKGVyciwgcHJvbW90ZXIpIHtcclxuICAgICAgICAgICAgICAgIGlmIChlcnIpIHJlcy5qc29uKHtzdGF0dXM6XCJmYWlsdXJlXCIsc3RhdHVzQ29kZToxMDAsbXNnOmVycn0pO1xyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgIHJlcy5qc29uKHtzdGF0dXM6XCJzdWNjZXNzXCIsc3RhdHVzQ29kZToyMDAsZGF0YTpwcm9tb3Rlcixtc2c6XCJTaWdudXAgJiBTaWduSW4gc3VjY2Vzc2Z1bGx5IVwifSk7XHJcbiAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgIH0pXHJcbiAgICAgICAgfVxyXG4gICAgICB9KTsgXHJcbiAgICAgIFxyXG4gICAgfSk7XHJcblxyXG4gICAgcm91dGVyLnBvc3QoJy9zaW5nbGVQcm9tb3RlcicsIGZ1bmN0aW9uKHJlcSwgcmVzKSB7XHJcbiAgICAgIHByb21vdGVyLnByb21vdGVycy5maW5kKHtfaWQ6cmVxLmJvZHkuaWR9LCBmdW5jdGlvbihlcnIsIHByb21vdGVyX2RhdGEpIHtcclxuICAgICAgICBpZiAoZXJyKSAgcmVzLmpzb24oe3N0YXR1czpcImZhaWx1cmVcIixzdGF0dXNDb2RlOjEwMCxlcnJvcjplcnJ9KTtcclxuICAgICAgICByZXMuanNvbih7c3RhdHVzOlwic3VjY2Vzc1wiLHN0YXR1c0NvZGU6MjAwLGRhdGE6cHJvbW90ZXJfZGF0YX0pO1xyXG4gICAgICB9KTtcclxuICAgIH0pO1xyXG5cclxuICAgIG1vZHVsZS5leHBvcnRzID0gcm91dGVyOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "promoters.js"
      ],
      "names": [
        "express",
        "require",
        "router",
        "Router",
        "mongoose",
        "promoter",
        "passwordHash",
        "post",
        "req",
        "res",
        "console",
        "log",
        "body",
        "promoter_signup",
        "promoterCreate",
        "promoters",
        "datetime",
        "Date",
        "pass",
        "generate",
        "password",
        "joindate",
        "findOne",
        "email",
        "err",
        "json",
        "status",
        "statusCode",
        "msg",
        "name",
        "save",
        "data",
        "find",
        "_id",
        "id",
        "promoter_data",
        "error",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi\\routes\\",
      "sourcesContent": [
        "\r\nvar express = require('express');\r\nvar router = express.Router();\r\nvar mongoose = require('mongoose');\r\nconst promoter = require('../models/promoters');\r\n//const email = require('../config/email');\r\n//const nodemailer = require('nodemailer');\r\nvar passwordHash = require('password-hash');\r\n\r\n//process.env.NODE_TLS_REJECT_UNAUTHORIZED = \"1\";\r\n\r\nrouter.post('/register', function(req,res) {\r\nconsole.log(req.body.promoter_signup);\r\n      var promoterCreate =  new promoter.promoters(req.body.promoter_signup);\r\n\r\n      var datetime = new Date();\r\n      let pass = passwordHash.generate(req.body.promoter_signup.password)\r\n\r\n      promoterCreate.joindate = datetime\r\n      promoterCreate.password = pass\r\n      \r\n      promoter.promoters.findOne({email:req.body.promoter_signup.email}, function(err, promoters) {\r\n        if (err)  res.json({status:\"failure\",statusCode:100,msg:err});\r\n        \r\n        if(promoters){\r\n          console.log(promoters)\r\n          res.json({status:\"failure\",statusCode:100,msg:\"Email already exists!!\"});\r\n        }else{\r\n            promoter.promoters.findOne({name:req.body.promoter_signup.name}, function(err, promoters) {\r\n            if (err)  res.json({status:\"failure\",statusCode:100,msg:err});\r\n        \r\n            if(promoters){\r\n              console.log(promoters)\r\n              res.json({status:\"failure\",statusCode:100,msg:\"Username already exists!!\"});\r\n            }\r\n            else{\r\n                promoterCreate.save(function (err, promoter) {\r\n                if (err) res.json({status:\"failure\",statusCode:100,msg:err});\r\n            \r\n                res.json({status:\"success\",statusCode:200,data:promoter,msg:\"Signup & SignIn successfully!\"});\r\n              });\r\n            }\r\n          })\r\n        }\r\n      }); \r\n      \r\n    });\r\n\r\n    router.post('/singlePromoter', function(req, res) {\r\n      promoter.promoters.find({_id:req.body.id}, function(err, promoter_data) {\r\n        if (err)  res.json({status:\"failure\",statusCode:100,error:err});\r\n        res.json({status:\"success\",statusCode:200,data:promoter_data});\r\n      });\r\n    });\r\n\r\n    module.exports = router;"
      ]
    },
    "sourceType": "module",
    "mtime": 1609337235268
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Codenomad\\\\Desktop\\\\boom-advertise\\\\boom-advertise\\\\serverapi\\\\models\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Codenomad\\\\Desktop\\\\boom-advertise\\\\boom-advertise\\\\serverapi\",\"filename\":\"C:\\\\Users\\\\Codenomad\\\\Desktop\\\\boom-advertise\\\\boom-advertise\\\\serverapi\\\\models\\\\promoters.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Codenomad\\\\Desktop\\\\boom-advertise\\\\boom-advertise\\\\serverapi\",\"plugins\":[],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi\\models\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi",
      "filename": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi\\models\\promoters.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi\\models\\promoters.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi\\models\\promoters.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi\\models\\",
        "sourceFileName": "promoters.js"
      }
    },
    "ast": null,
    "code": "var mongoose = require('mongoose');\n\nconst Schema = mongoose.Schema;\nconst promotersSchema = new Schema({\n  id: Boolean,\n  // String is shorthand for {type: String}\n  name: String,\n  email: String,\n  password: String,\n  joindate: Date\n});\nconst promoters = mongoose.model('promoters', promotersSchema);\nmodule.exports = {\n  promoters,\n  promotersSchema\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb21vdGVycy5qcyJdLCJuYW1lcyI6WyJtb25nb29zZSIsInJlcXVpcmUiLCJTY2hlbWEiLCJwcm9tb3RlcnNTY2hlbWEiLCJpZCIsIkJvb2xlYW4iLCJuYW1lIiwiU3RyaW5nIiwiZW1haWwiLCJwYXNzd29yZCIsImpvaW5kYXRlIiwiRGF0ZSIsInByb21vdGVycyIsIm1vZGVsIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsSUFBSUEsUUFBUSxHQUFHQyxPQUFPLENBQUMsVUFBRCxDQUF0Qjs7QUFDQSxNQUFNQyxNQUFNLEdBQUdGLFFBQVEsQ0FBQ0UsTUFBeEI7QUFFQSxNQUFNQyxlQUFlLEdBQUcsSUFBSUQsTUFBSixDQUFXO0FBQ2pDRSxFQUFBQSxFQUFFLEVBQUdDLE9BRDRCO0FBQ25CO0FBQ2RDLEVBQUFBLElBQUksRUFBRUMsTUFGMkI7QUFHakNDLEVBQUFBLEtBQUssRUFBSUQsTUFId0I7QUFJakNFLEVBQUFBLFFBQVEsRUFBSUYsTUFKcUI7QUFLakNHLEVBQUFBLFFBQVEsRUFBSUM7QUFMcUIsQ0FBWCxDQUF4QjtBQU9BLE1BQU9DLFNBQVMsR0FBR1osUUFBUSxDQUFDYSxLQUFULENBQWUsV0FBZixFQUE0QlYsZUFBNUIsQ0FBbkI7QUFDQVcsTUFBTSxDQUFDQyxPQUFQLEdBQWlCO0FBQUVILEVBQUFBLFNBQUY7QUFBWVQsRUFBQUE7QUFBWixDQUFqQiIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXENvZGVub21hZFxcRGVza3RvcFxcYm9vbS1hZHZlcnRpc2VcXGJvb20tYWR2ZXJ0aXNlXFxzZXJ2ZXJhcGlcXG1vZGVsc1xcIiwic291cmNlc0NvbnRlbnQiOlsidmFyIG1vbmdvb3NlID0gcmVxdWlyZSgnbW9uZ29vc2UnKTtcclxuY29uc3QgU2NoZW1hID0gbW9uZ29vc2UuU2NoZW1hO1xyXG5cclxuY29uc3QgcHJvbW90ZXJzU2NoZW1hID0gbmV3IFNjaGVtYSh7XHJcbiAgaWQ6ICBCb29sZWFuLCAvLyBTdHJpbmcgaXMgc2hvcnRoYW5kIGZvciB7dHlwZTogU3RyaW5nfVxyXG4gIG5hbWU6IFN0cmluZyxcclxuICBlbWFpbDogICBTdHJpbmcsXHJcbiAgcGFzc3dvcmQ6ICAgU3RyaW5nLFxyXG4gIGpvaW5kYXRlOiAgIERhdGVcclxufSk7XHJcbmNvbnN0ICBwcm9tb3RlcnMgPSBtb25nb29zZS5tb2RlbCgncHJvbW90ZXJzJywgcHJvbW90ZXJzU2NoZW1hKTtcclxubW9kdWxlLmV4cG9ydHMgPSB7IHByb21vdGVycyxwcm9tb3RlcnNTY2hlbWEgfSA7Il19",
    "map": {
      "version": 3,
      "sources": [
        "promoters.js"
      ],
      "names": [
        "mongoose",
        "require",
        "Schema",
        "promotersSchema",
        "id",
        "Boolean",
        "name",
        "String",
        "email",
        "password",
        "joindate",
        "Date",
        "promoters",
        "model",
        "module",
        "exports"
      ],
      "mappings": "AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAtB;;AACA,MAAMC,MAAM,GAAGF,QAAQ,CAACE,MAAxB;AAEA,MAAMC,eAAe,GAAG,IAAID,MAAJ,CAAW;AACjCE,EAAAA,EAAE,EAAGC,OAD4B;AACnB;AACdC,EAAAA,IAAI,EAAEC,MAF2B;AAGjCC,EAAAA,KAAK,EAAID,MAHwB;AAIjCE,EAAAA,QAAQ,EAAIF,MAJqB;AAKjCG,EAAAA,QAAQ,EAAIC;AALqB,CAAX,CAAxB;AAOA,MAAOC,SAAS,GAAGZ,QAAQ,CAACa,KAAT,CAAe,WAAf,EAA4BV,eAA5B,CAAnB;AACAW,MAAM,CAACC,OAAP,GAAiB;AAAEH,EAAAA,SAAF;AAAYT,EAAAA;AAAZ,CAAjB",
      "sourceRoot": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi\\models\\",
      "sourcesContent": [
        "var mongoose = require('mongoose');\r\nconst Schema = mongoose.Schema;\r\n\r\nconst promotersSchema = new Schema({\r\n  id:  Boolean, // String is shorthand for {type: String}\r\n  name: String,\r\n  email:   String,\r\n  password:   String,\r\n  joindate:   Date\r\n});\r\nconst  promoters = mongoose.model('promoters', promotersSchema);\r\nmodule.exports = { promoters,promotersSchema } ;"
      ]
    },
    "sourceType": "module",
    "mtime": 1608315960282
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Codenomad\\\\Desktop\\\\boom-advertise\\\\boom-advertise\\\\serverapi\\\\routes\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Codenomad\\\\Desktop\\\\boom-advertise\\\\boom-advertise\\\\serverapi\",\"filename\":\"C:\\\\Users\\\\Codenomad\\\\Desktop\\\\boom-advertise\\\\boom-advertise\\\\serverapi\\\\routes\\\\workers.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Codenomad\\\\Desktop\\\\boom-advertise\\\\boom-advertise\\\\serverapi\",\"plugins\":[],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi\\routes\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi",
      "filename": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi\\routes\\workers.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi\\routes\\workers.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi\\routes\\workers.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi\\routes\\",
        "sourceFileName": "workers.js"
      }
    },
    "ast": null,
    "code": "var express = require('express');\n\nvar router = express.Router();\n\nvar mongoose = require('mongoose');\n\nconst worker = require('../models/workers');\n\nconst email = require('../config/email');\n\nconst nodemailer = require('nodemailer');\n\nvar passwordHash = require('password-hash'); //process.env.NODE_TLS_REJECT_UNAUTHORIZED = \"1\";\n\n\nvar sendEmail = function (to, subject, html) {\n  return new Promise(function (resolve, reject) {\n    var transporter = nodemailer.createTransport({\n      service: 'gmail',\n      port: 587,\n      secure: false,\n      auth: {\n        user: email.email,\n        pass: email.password\n      }\n    });\n    var mailOptions = {\n      from: 'faanmanagement@gmail.com  <http://boomadvertise.com/>',\n      to: to,\n      subject: subject,\n      html: html\n    };\n    transporter.sendMail(mailOptions, function (error, info) {\n      if (error) {\n        reject(error);\n      } else {\n        resolve(1);\n      }\n    });\n  });\n};\n\nrouter.post('/register', function (req, res) {\n  var coupon_code = Math.random().toString(36).slice(2);\n  console.log(req.body.worker_signup);\n  var workerCreate = new worker.workers(req.body.worker_signup);\n  var datetime = new Date();\n  let pass = passwordHash.generate(req.body.worker_signup.password);\n  workerCreate.joindate = datetime;\n  workerCreate.password = pass;\n  workerCreate.coupon_code = coupon_code;\n  worker.workers.findOne({\n    email: req.body.worker_signup.email\n  }, function (err, workers) {\n    if (err) res.json({\n      status: \"failure\",\n      statusCode: 100,\n      msg: err\n    });\n\n    if (workers) {\n      res.json({\n        status: \"failure\",\n        statusCode: 100,\n        msg: \"Email already exists!!\"\n      });\n    } else {\n      worker.workers.findOne({\n        name: req.body.worker_signup.name\n      }, function (err, workers) {\n        if (err) res.json({\n          status: \"failure\",\n          statusCode: 100,\n          msg: err\n        });\n\n        if (workers) {\n          console.log(workers);\n          res.json({\n            status: \"failure\",\n            statusCode: 100,\n            msg: \"Username already exists!!\"\n          });\n        } else {\n          workerCreate.save(function (err, worker) {\n            sendEmail(req.body.worker_signup.email, \"Your login account!\", \"You have been added as a Worker on <b>http://boomadvertise.com/</b><br> Here are your login credentials along with other details. <br> Username: \" + req.body.worker_signup.name + \"<br> Email: \" + req.body.worker_signup.email + \"<br> Password: \" + req.body.worker_signup.password + \" Promo code: fjhdgggdffg <br> Sharaeble Urls with others : http://boomadvertise.com/\" + worker['_id']);\n            if (err) res.json({\n              status: \"failure\",\n              statusCode: 100,\n              msg: error\n            });\n            res.json({\n              status: \"success\",\n              statusCode: 200,\n              data: worker,\n              msg: \"Worker added successfully and an email has been sent to the worker.\"\n            }); //  res.setHeader(\"Content-Type\", \"text/html\");\n\n            /******Send email***** */\n            //  var a = sendEmail(req.body.worker_signup.email,\n            //     \"Your login account!\",\"You have been added as a Worker on <b>http://boomadvertise.com/</b><br> Here are your login credentials along with other details. <br> Username: \" + req.body.worker_signup.name + \"<br> Email: \" +req.body.worker_signup.email +\"<br> Password: \" + req.body.worker_signup.password +\" Promo code: fjhdgggdffg <br> Sharaeble Urls with others : http://boomadvertise.com/\"+worker['_id']);\n            //       a.then((result) => { \n            //   if(result){\n            //     res.json({status:\"success\",statusCode:200,data:'hii sent email...'});\n            //   }\n            //   else{\n            //    res.json({status:\"failure\",statusCode:100,message:\"There was some error in your request!!!\",data:[]});\n            //   }\n            //     }).catch((err) => {\n            //      res.json({status:\"failure\",statusCode:100,message:\"Could Not Send Email!!!\",data:err});\n            //     });\n\n            /******Send email end***** */\n          });\n        }\n      });\n    }\n  });\n});\nrouter.post('/email', function (req, res) {\n  /******Send email***** */\n  // console.log(Math.random().toString(36).slice(2));\n  var a = sendEmail('manpreet@codenomad.net', \"Your login account!\", 'You have been added as a Worker on <b>http://boomadvertise.com/</b><br> Here are your login credentials along with other details. <br> Promo code: fjhdgggdffg <br> Sharaeble Urls with others : http://boomadvertise.com/');\n  a.then(result => {\n    if (result) {\n      res.json({\n        status: \"success\",\n        statusCode: 200,\n        data: 'hii sent email...'\n      });\n    } else {\n      res.json({\n        status: \"failure\",\n        statusCode: 100,\n        message: \"There was some error in youyr request!!!\",\n        data: []\n      });\n    }\n  }).catch(err => {\n    res.json({\n      status: \"failure\",\n      statusCode: 100,\n      message: \"Could Not Send Email!!!\",\n      data: err\n    });\n  });\n  /******Send email end***** */\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "workers.js"
      ],
      "names": [
        "express",
        "require",
        "router",
        "Router",
        "mongoose",
        "worker",
        "email",
        "nodemailer",
        "passwordHash",
        "sendEmail",
        "to",
        "subject",
        "html",
        "Promise",
        "resolve",
        "reject",
        "transporter",
        "createTransport",
        "service",
        "port",
        "secure",
        "auth",
        "user",
        "pass",
        "password",
        "mailOptions",
        "from",
        "sendMail",
        "error",
        "info",
        "post",
        "req",
        "res",
        "coupon_code",
        "Math",
        "random",
        "toString",
        "slice",
        "console",
        "log",
        "body",
        "worker_signup",
        "workerCreate",
        "workers",
        "datetime",
        "Date",
        "generate",
        "joindate",
        "findOne",
        "err",
        "json",
        "status",
        "statusCode",
        "msg",
        "name",
        "save",
        "data",
        "a",
        "then",
        "result",
        "message",
        "catch",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi\\routes\\",
      "sourcesContent": [
        "\r\nvar express = require('express');\r\nvar router = express.Router();\r\nvar mongoose = require('mongoose');\r\nconst worker = require('../models/workers');\r\nconst email = require('../config/email');\r\nconst nodemailer = require('nodemailer');\r\nvar passwordHash = require('password-hash');\r\n\r\n//process.env.NODE_TLS_REJECT_UNAUTHORIZED = \"1\";\r\n\r\nvar sendEmail = function(to,subject,html) {\r\n  return new Promise(function(resolve, reject) {\r\n    var transporter = nodemailer.createTransport({\r\n      service: 'gmail',\r\n      port: 587,\r\n      secure: false,\r\n      auth: {\r\n        user: email.email,\r\n        pass: email.password\r\n      }\r\n    });\r\n  \r\n  var mailOptions = {\r\n    from: 'faanmanagement@gmail.com  <http://boomadvertise.com/>',\r\n    to: to,\r\n    subject: subject,\r\n    html: html\r\n  };\r\n\r\n    transporter.sendMail(mailOptions, function(error, info){\r\n    if (error) {\r\n      reject(error);\r\n    } else {\r\n     resolve(1)\r\n    }\r\n  });\r\n\r\n  \r\n});\r\n\r\n}\r\n\r\n\r\nrouter.post('/register', function(req,res) {\r\n  var coupon_code  = Math.random().toString(36).slice(2)\r\nconsole.log(req.body.worker_signup);\r\n      var workerCreate =  new worker.workers(req.body.worker_signup);\r\n\r\n      var datetime = new Date();\r\n      let pass = passwordHash.generate(req.body.worker_signup.password)\r\n\r\n      workerCreate.joindate = datetime\r\n      workerCreate.password = pass\r\n      workerCreate.coupon_code = coupon_code\r\n      \r\n      worker.workers.findOne({email:req.body.worker_signup.email}, function(err, workers) {\r\n        if (err)  res.json({status:\"failure\",statusCode:100,msg:err});\r\n        \r\n        if(workers){\r\n          res.json({status:\"failure\",statusCode:100,msg:\"Email already exists!!\"});\r\n        }else{\r\n            worker.workers.findOne({name:req.body.worker_signup.name}, function(err, workers) {\r\n            if (err)  res.json({status:\"failure\",statusCode:100,msg:err});\r\n        \r\n            if(workers){\r\n              console.log(workers)\r\n              res.json({status:\"failure\",statusCode:100,msg:\"Username already exists!!\"});\r\n            }\r\n            else{\r\n                workerCreate.save(function (err, worker) {\r\n                  sendEmail(req.body.worker_signup.email,\r\n                     \"Your login account!\",\"You have been added as a Worker on <b>http://boomadvertise.com/</b><br> Here are your login credentials along with other details. <br> Username: \" + req.body.worker_signup.name + \"<br> Email: \" +req.body.worker_signup.email +\"<br> Password: \" + req.body.worker_signup.password +\" Promo code: fjhdgggdffg <br> Sharaeble Urls with others : http://boomadvertise.com/\"+worker['_id']);\r\n                  if (err) res.json({status:\"failure\",statusCode:100,msg:error});\r\n                  res.json({status:\"success\",statusCode:200,data:worker,msg:\"Worker added successfully and an email has been sent to the worker.\"});\r\n                //  res.setHeader(\"Content-Type\", \"text/html\");\r\n                /******Send email***** */\r\n              //  var a = sendEmail(req.body.worker_signup.email,\r\n              //     \"Your login account!\",\"You have been added as a Worker on <b>http://boomadvertise.com/</b><br> Here are your login credentials along with other details. <br> Username: \" + req.body.worker_signup.name + \"<br> Email: \" +req.body.worker_signup.email +\"<br> Password: \" + req.body.worker_signup.password +\" Promo code: fjhdgggdffg <br> Sharaeble Urls with others : http://boomadvertise.com/\"+worker['_id']);\r\n              //       a.then((result) => { \r\n              //   if(result){\r\n              //     res.json({status:\"success\",statusCode:200,data:'hii sent email...'});\r\n              //   }\r\n              //   else{\r\n              //    res.json({status:\"failure\",statusCode:100,message:\"There was some error in your request!!!\",data:[]});\r\n              //   }\r\n              //     }).catch((err) => {\r\n              //      res.json({status:\"failure\",statusCode:100,message:\"Could Not Send Email!!!\",data:err});\r\n              //     });\r\n           /******Send email end***** */\r\n              });\r\n            }\r\n          })\r\n        }\r\n      }); \r\n      \r\n    });\r\n\r\n    \r\n    router.post('/email', function(req,res) { \r\n      /******Send email***** */\r\n     // console.log(Math.random().toString(36).slice(2));\r\n      \r\n      var a =  sendEmail('manpreet@codenomad.net',\r\n        \"Your login account!\",\r\n        'You have been added as a Worker on <b>http://boomadvertise.com/</b><br> Here are your login credentials along with other details. <br> Promo code: fjhdgggdffg <br> Sharaeble Urls with others : http://boomadvertise.com/')\r\n        a.then((result) => { \r\n       if(result){\r\n        res.json({status:\"success\",statusCode:200,data:'hii sent email...'});\r\n       }\r\n       else{\r\n        res.json({status:\"failure\",statusCode:100,message:\"There was some error in youyr request!!!\",data:[]});\r\n       }\r\n        }).catch((err) => {\r\n          res.json({status:\"failure\",statusCode:100,message:\"Could Not Send Email!!!\",data:err});\r\n        });\r\n     /******Send email end***** */\r\n      });\r\n\r\n\r\n\r\n\r\n    \r\n    \r\n    module.exports = router;\r\n\r\n\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1609170675581
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Codenomad\\\\Desktop\\\\boom-advertise\\\\boom-advertise\\\\serverapi\\\\models\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Codenomad\\\\Desktop\\\\boom-advertise\\\\boom-advertise\\\\serverapi\",\"filename\":\"C:\\\\Users\\\\Codenomad\\\\Desktop\\\\boom-advertise\\\\boom-advertise\\\\serverapi\\\\models\\\\workers.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Codenomad\\\\Desktop\\\\boom-advertise\\\\boom-advertise\\\\serverapi\",\"plugins\":[],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi\\models\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi",
      "filename": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi\\models\\workers.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi\\models\\workers.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi\\models\\workers.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi\\models\\",
        "sourceFileName": "workers.js"
      }
    },
    "ast": null,
    "code": "var mongoose = require('mongoose');\n\nconst Schema = mongoose.Schema;\nconst workersSchema = new Schema({\n  id: Boolean,\n  // String is shorthand for {type: String}\n  name: String,\n  email: String,\n  password: String,\n  coupon_code: String,\n  joindate: Date\n});\nconst workers = mongoose.model('workers', workersSchema);\nmodule.exports = {\n  workers,\n  workersSchema\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndvcmtlcnMuanMiXSwibmFtZXMiOlsibW9uZ29vc2UiLCJyZXF1aXJlIiwiU2NoZW1hIiwid29ya2Vyc1NjaGVtYSIsImlkIiwiQm9vbGVhbiIsIm5hbWUiLCJTdHJpbmciLCJlbWFpbCIsInBhc3N3b3JkIiwiY291cG9uX2NvZGUiLCJqb2luZGF0ZSIsIkRhdGUiLCJ3b3JrZXJzIiwibW9kZWwiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQSxJQUFJQSxRQUFRLEdBQUdDLE9BQU8sQ0FBQyxVQUFELENBQXRCOztBQUNBLE1BQU1DLE1BQU0sR0FBR0YsUUFBUSxDQUFDRSxNQUF4QjtBQUVBLE1BQU1DLGFBQWEsR0FBRyxJQUFJRCxNQUFKLENBQVc7QUFDL0JFLEVBQUFBLEVBQUUsRUFBR0MsT0FEMEI7QUFDakI7QUFDZEMsRUFBQUEsSUFBSSxFQUFFQyxNQUZ5QjtBQUcvQkMsRUFBQUEsS0FBSyxFQUFJRCxNQUhzQjtBQUkvQkUsRUFBQUEsUUFBUSxFQUFJRixNQUptQjtBQUsvQkcsRUFBQUEsV0FBVyxFQUFJSCxNQUxnQjtBQU0vQkksRUFBQUEsUUFBUSxFQUFJQztBQU5tQixDQUFYLENBQXRCO0FBUUEsTUFBTUMsT0FBTyxHQUFHYixRQUFRLENBQUNjLEtBQVQsQ0FBZSxTQUFmLEVBQTBCWCxhQUExQixDQUFoQjtBQUNBWSxNQUFNLENBQUNDLE9BQVAsR0FBaUI7QUFBRUgsRUFBQUEsT0FBRjtBQUFVVixFQUFBQTtBQUFWLENBQWpCIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcQ29kZW5vbWFkXFxEZXNrdG9wXFxib29tLWFkdmVydGlzZVxcYm9vbS1hZHZlcnRpc2VcXHNlcnZlcmFwaVxcbW9kZWxzXFwiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgbW9uZ29vc2UgPSByZXF1aXJlKCdtb25nb29zZScpO1xyXG5jb25zdCBTY2hlbWEgPSBtb25nb29zZS5TY2hlbWE7XHJcblxyXG5jb25zdCB3b3JrZXJzU2NoZW1hID0gbmV3IFNjaGVtYSh7XHJcbiAgaWQ6ICBCb29sZWFuLCAvLyBTdHJpbmcgaXMgc2hvcnRoYW5kIGZvciB7dHlwZTogU3RyaW5nfVxyXG4gIG5hbWU6IFN0cmluZyxcclxuICBlbWFpbDogICBTdHJpbmcsXHJcbiAgcGFzc3dvcmQ6ICAgU3RyaW5nLFxyXG4gIGNvdXBvbl9jb2RlOiAgIFN0cmluZyxcclxuICBqb2luZGF0ZTogICBEYXRlXHJcbn0pO1xyXG5jb25zdCB3b3JrZXJzID0gbW9uZ29vc2UubW9kZWwoJ3dvcmtlcnMnLCB3b3JrZXJzU2NoZW1hKTtcclxubW9kdWxlLmV4cG9ydHMgPSB7IHdvcmtlcnMsd29ya2Vyc1NjaGVtYSB9IDsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "workers.js"
      ],
      "names": [
        "mongoose",
        "require",
        "Schema",
        "workersSchema",
        "id",
        "Boolean",
        "name",
        "String",
        "email",
        "password",
        "coupon_code",
        "joindate",
        "Date",
        "workers",
        "model",
        "module",
        "exports"
      ],
      "mappings": "AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAtB;;AACA,MAAMC,MAAM,GAAGF,QAAQ,CAACE,MAAxB;AAEA,MAAMC,aAAa,GAAG,IAAID,MAAJ,CAAW;AAC/BE,EAAAA,EAAE,EAAGC,OAD0B;AACjB;AACdC,EAAAA,IAAI,EAAEC,MAFyB;AAG/BC,EAAAA,KAAK,EAAID,MAHsB;AAI/BE,EAAAA,QAAQ,EAAIF,MAJmB;AAK/BG,EAAAA,WAAW,EAAIH,MALgB;AAM/BI,EAAAA,QAAQ,EAAIC;AANmB,CAAX,CAAtB;AAQA,MAAMC,OAAO,GAAGb,QAAQ,CAACc,KAAT,CAAe,SAAf,EAA0BX,aAA1B,CAAhB;AACAY,MAAM,CAACC,OAAP,GAAiB;AAAEH,EAAAA,OAAF;AAAUV,EAAAA;AAAV,CAAjB",
      "sourceRoot": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi\\models\\",
      "sourcesContent": [
        "var mongoose = require('mongoose');\r\nconst Schema = mongoose.Schema;\r\n\r\nconst workersSchema = new Schema({\r\n  id:  Boolean, // String is shorthand for {type: String}\r\n  name: String,\r\n  email:   String,\r\n  password:   String,\r\n  coupon_code:   String,\r\n  joindate:   Date\r\n});\r\nconst workers = mongoose.model('workers', workersSchema);\r\nmodule.exports = { workers,workersSchema } ;"
      ]
    },
    "sourceType": "module",
    "mtime": 1608803438432
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Codenomad\\\\Desktop\\\\boom-advertise\\\\boom-advertise\\\\serverapi\\\\config\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Codenomad\\\\Desktop\\\\boom-advertise\\\\boom-advertise\\\\serverapi\",\"filename\":\"C:\\\\Users\\\\Codenomad\\\\Desktop\\\\boom-advertise\\\\boom-advertise\\\\serverapi\\\\config\\\\email.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Codenomad\\\\Desktop\\\\boom-advertise\\\\boom-advertise\\\\serverapi\",\"plugins\":[],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi\\config\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi",
      "filename": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi\\config\\email.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi\\config\\email.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi\\config\\email.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi\\config\\",
        "sourceFileName": "email.js"
      }
    },
    "ast": null,
    "code": "var config = {};\nconfig.email = 'deligoch@gmail.com';\nconfig.password = 'ifwmxlltkurvvctb';\nconfig.adminemail = 'deligoch@gmail.com';\nconfig.url = 'http://boomadvertise.com/';\nconfig.adminurl = 'http://boomadvertise.com/';\nmodule.exports = config; // MAIL_DRIVER=smtp\n// MAIL_HOST=email-smtp.ap-south-1.amazonaws.com\n// MAIL_PORT=587\n// MAIL_ENCRYPTION=tls\n// MAIL_USERNAME=AKIAREDTCB4G4N4SJUKF\n// MAIL_PASSWORD=BFz7nWPoZc0jAYpUr5FkCeZsYpVYyTwjnuILc0vE3EaP\n// host : smtp.gmail.com\n// email port :587\n// email : deligoch@gmail.com\n// MAIL_ENCRYPTION : tls\n// email_username : deligoch@gmail.com\n// email pass : ifwmxlltkurvvctb\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImVtYWlsLmpzIl0sIm5hbWVzIjpbImNvbmZpZyIsImVtYWlsIiwicGFzc3dvcmQiLCJhZG1pbmVtYWlsIiwidXJsIiwiYWRtaW51cmwiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQSxJQUFJQSxNQUFNLEdBQUcsRUFBYjtBQUdBQSxNQUFNLENBQUNDLEtBQVAsR0FBZSxvQkFBZjtBQUNBRCxNQUFNLENBQUNFLFFBQVAsR0FBaUIsa0JBQWpCO0FBRUFGLE1BQU0sQ0FBQ0csVUFBUCxHQUFrQixvQkFBbEI7QUFDQUgsTUFBTSxDQUFDSSxHQUFQLEdBQVcsMkJBQVg7QUFDQUosTUFBTSxDQUFDSyxRQUFQLEdBQWdCLDJCQUFoQjtBQUNBQyxNQUFNLENBQUNDLE9BQVAsR0FBaUJQLE1BQWpCLEMsQ0FHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxDb2Rlbm9tYWRcXERlc2t0b3BcXGJvb20tYWR2ZXJ0aXNlXFxib29tLWFkdmVydGlzZVxcc2VydmVyYXBpXFxjb25maWdcXCIsInNvdXJjZXNDb250ZW50IjpbInZhciBjb25maWcgPSB7fTtcclxuXHJcblxyXG5jb25maWcuZW1haWwgPSAnZGVsaWdvY2hAZ21haWwuY29tJ1xyXG5jb25maWcucGFzc3dvcmQ9ICdpZndteGxsdGt1cnZ2Y3RiJ1xyXG5cclxuY29uZmlnLmFkbWluZW1haWw9J2RlbGlnb2NoQGdtYWlsLmNvbSdcclxuY29uZmlnLnVybD0naHR0cDovL2Jvb21hZHZlcnRpc2UuY29tLydcclxuY29uZmlnLmFkbWludXJsPSdodHRwOi8vYm9vbWFkdmVydGlzZS5jb20vJ1xyXG5tb2R1bGUuZXhwb3J0cyA9IGNvbmZpZztcclxuXHJcblxyXG4vLyBNQUlMX0RSSVZFUj1zbXRwXHJcbi8vIE1BSUxfSE9TVD1lbWFpbC1zbXRwLmFwLXNvdXRoLTEuYW1hem9uYXdzLmNvbVxyXG4vLyBNQUlMX1BPUlQ9NTg3XHJcbi8vIE1BSUxfRU5DUllQVElPTj10bHNcclxuLy8gTUFJTF9VU0VSTkFNRT1BS0lBUkVEVENCNEc0TjRTSlVLRlxyXG4vLyBNQUlMX1BBU1NXT1JEPUJGejduV1BvWmMwakFZcFVyNUZrQ2Vac1lwVll5VHdqbnVJTGMwdkUzRWFQXHJcbi8vIGhvc3QgOiBzbXRwLmdtYWlsLmNvbVxyXG4vLyBlbWFpbCBwb3J0IDo1ODdcclxuLy8gZW1haWwgOiBkZWxpZ29jaEBnbWFpbC5jb21cclxuLy8gTUFJTF9FTkNSWVBUSU9OIDogdGxzXHJcbi8vIGVtYWlsX3VzZXJuYW1lIDogZGVsaWdvY2hAZ21haWwuY29tXHJcbi8vIGVtYWlsIHBhc3MgOiBpZndteGxsdGt1cnZ2Y3RiXHJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "email.js"
      ],
      "names": [
        "config",
        "email",
        "password",
        "adminemail",
        "url",
        "adminurl",
        "module",
        "exports"
      ],
      "mappings": "AAAA,IAAIA,MAAM,GAAG,EAAb;AAGAA,MAAM,CAACC,KAAP,GAAe,oBAAf;AACAD,MAAM,CAACE,QAAP,GAAiB,kBAAjB;AAEAF,MAAM,CAACG,UAAP,GAAkB,oBAAlB;AACAH,MAAM,CAACI,GAAP,GAAW,2BAAX;AACAJ,MAAM,CAACK,QAAP,GAAgB,2BAAhB;AACAC,MAAM,CAACC,OAAP,GAAiBP,MAAjB,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA",
      "sourceRoot": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi\\config\\",
      "sourcesContent": [
        "var config = {};\r\n\r\n\r\nconfig.email = 'deligoch@gmail.com'\r\nconfig.password= 'ifwmxlltkurvvctb'\r\n\r\nconfig.adminemail='deligoch@gmail.com'\r\nconfig.url='http://boomadvertise.com/'\r\nconfig.adminurl='http://boomadvertise.com/'\r\nmodule.exports = config;\r\n\r\n\r\n// MAIL_DRIVER=smtp\r\n// MAIL_HOST=email-smtp.ap-south-1.amazonaws.com\r\n// MAIL_PORT=587\r\n// MAIL_ENCRYPTION=tls\r\n// MAIL_USERNAME=AKIAREDTCB4G4N4SJUKF\r\n// MAIL_PASSWORD=BFz7nWPoZc0jAYpUr5FkCeZsYpVYyTwjnuILc0vE3EaP\r\n// host : smtp.gmail.com\r\n// email port :587\r\n// email : deligoch@gmail.com\r\n// MAIL_ENCRYPTION : tls\r\n// email_username : deligoch@gmail.com\r\n// email pass : ifwmxlltkurvvctb\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1608722304506
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Codenomad\\\\Desktop\\\\boom-advertise\\\\boom-advertise\\\\serverapi\\\\routes\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Codenomad\\\\Desktop\\\\boom-advertise\\\\boom-advertise\\\\serverapi\",\"filename\":\"C:\\\\Users\\\\Codenomad\\\\Desktop\\\\boom-advertise\\\\boom-advertise\\\\serverapi\\\\routes\\\\influencers.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Codenomad\\\\Desktop\\\\boom-advertise\\\\boom-advertise\\\\serverapi\",\"plugins\":[],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi\\routes\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi",
      "filename": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi\\routes\\influencers.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi\\routes\\influencers.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi\\routes\\influencers.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi\\routes\\",
        "sourceFileName": "influencers.js"
      }
    },
    "ast": null,
    "code": "var express = require('express');\n\nvar router = express.Router();\n\nvar mongoose = require('mongoose');\n\nconst influencer = require('../models/influencers');\n\nconst influencers_data = require('../models/influencers_data'); //const email = require('../config/email');\n//const nodemailer = require('nodemailer');\n\n\nvar passwordHash = require('password-hash');\n\nconst {\n  ObjectId\n} = require('mongodb'); //process.env.NODE_TLS_REJECT_UNAUTHORIZED = \"1\";\n\n\nrouter.post('/register', async function (req, res) {\n  console.log(req.body.influencer_signup);\n  var influencerCreate = new influencer.influencers(req.body.influencer_signup);\n  var influencerData = new influencers_data.influencers_data(req.body.influencer_signup);\n  var datetime = new Date();\n  let pass = passwordHash.generate(req.body.influencer_signup.password);\n  influencerCreate.joindate = datetime;\n  influencerCreate.password = pass;\n  influencerCreate.tiktok = req.body.influencer_signup.tiktok;\n  influencerCreate.instagram = req.body.influencer_signup.insta;\n  influencerCreate.facebook = req.body.influencer_signup.fb;\n  influencerCreate.twitter = req.body.influencer_signup.twitter;\n  influencerData.twitterfollowers = req.body.influencer_signup.twitter_followers;\n  influencerData.tiktokfollowers = req.body.influencer_signup.tiktok_followers;\n  influencerData.facebookfollowers = req.body.influencer_signup.fb_followers;\n  influencerData.instagramfollowers = req.body.influencer_signup.insta_followers;\n  influencer.influencers.findOne({\n    email: req.body.influencer_signup.email\n  }, function (err, influencers) {\n    if (err) res.json({\n      status: \"failure\",\n      statusCode: 100,\n      msg: err\n    });\n\n    if (influencers) {\n      console.log(influencers);\n      res.json({\n        status: \"failure\",\n        statusCode: 100,\n        msg: \"Email already exists!!\"\n      });\n    } else {\n      influencer.influencers.findOne({\n        name: req.body.influencer_signup.name\n      }, function (err, influencers) {\n        if (err) res.json({\n          status: \"failure\",\n          statusCode: 100,\n          msg: err\n        });\n\n        if (influencers) {\n          console.log(influencers);\n          res.json({\n            status: \"failure\",\n            statusCode: 100,\n            msg: \"Username already exists!!\"\n          });\n        } else {\n          influencerCreate.save(function (err, influencer_res) {\n            influencerData.influencerid = influencer_res['_id'];\n            influencerData.save(function (err1, influ_data_res) {\n              if (err || err1) res.json({\n                status: \"failure\",\n                statusCode: 100,\n                msg: err\n              });\n              res.json({\n                status: \"success\",\n                statusCode: 200,\n                data: influencer_res,\n                msg: \"Signup & SignIn successfully!\"\n              });\n            });\n          });\n        }\n      });\n    }\n  });\n});\nrouter.get('/test', function (req, res) {\n  res.json(\"it workedvijay\");\n});\nrouter.get('/getInfluencers', function (req, res, next) {\n  //   influencer.influencers.find({}, function(err, influencers_dt) {\n  //     if (err)  res.json({status:\"failure\",statusCode:100,error:err});\n  //     res.json({status:\"success\",statusCode:200,data:influencers_dt});\n  //  });\n  influencers_data.influencers_data.aggregate([{\n    \"$lookup\": {\n      \"from\": \"influencers\",\n      \"localField\": \"influencerid\",\n      \"foreignField\": \"_id\",\n      \"as\": \"vals\"\n    }\n  }], function (err, res_data) {\n    if (err) res.json({\n      status: \"failure\",\n      statusCode: 100,\n      error: err\n    });\n    res.json({\n      status: \"success\",\n      statusCode: 200,\n      data: res_data\n    });\n  });\n});\nrouter.get('/getInfluencers1', function (req, res, next) {\n  // influencer.populated('influencers_data');\n  // influencer.influencers_data._id;\n  // await influencer.influencers.find({}.populate(\"influencers_data\"), function(err, influencers_dt) {\n  //  // influencers_data.influencers_data.find({}, function(err1, influencers_data) {\n  //    if (err)  res.json({status:\"failure\",statusCode:100,error:err});\n  //    res.json({status:\"success\",statusCode:200,data:influencers_dt});\n  //  //});\n  // });\n  influencer.influencers.aggregate([{\n    \"$lookup\": {\n      \"from\": \"influencers_data\",\n      //\"startWith\": \"$parent\",\n      \"localField\": \"_id\",\n      \"foreignField\": \"influencerid\",\n      \"as\": \"vals\"\n    }\n  }], function (err, res_data) {\n    if (err) res.json({\n      status: \"failure\",\n      statusCode: 100,\n      error: err\n    });\n    res.json({\n      status: \"success\",\n      statusCode: 200,\n      data: res_data\n    });\n  });\n});\nrouter.post('/singleInfluencer', function (req, res) {\n  influencer.influencers.find({\n    _id: req.body.id\n  }, function (err, influencer_data) {\n    if (err) res.json({\n      status: \"failure\",\n      statusCode: 100,\n      error: err\n    });\n    res.json({\n      status: \"success\",\n      statusCode: 200,\n      data: influencer_data\n    });\n  });\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "influencers.js"
      ],
      "names": [
        "express",
        "require",
        "router",
        "Router",
        "mongoose",
        "influencer",
        "influencers_data",
        "passwordHash",
        "ObjectId",
        "post",
        "req",
        "res",
        "console",
        "log",
        "body",
        "influencer_signup",
        "influencerCreate",
        "influencers",
        "influencerData",
        "datetime",
        "Date",
        "pass",
        "generate",
        "password",
        "joindate",
        "tiktok",
        "instagram",
        "insta",
        "facebook",
        "fb",
        "twitter",
        "twitterfollowers",
        "twitter_followers",
        "tiktokfollowers",
        "tiktok_followers",
        "facebookfollowers",
        "fb_followers",
        "instagramfollowers",
        "insta_followers",
        "findOne",
        "email",
        "err",
        "json",
        "status",
        "statusCode",
        "msg",
        "name",
        "save",
        "influencer_res",
        "influencerid",
        "err1",
        "influ_data_res",
        "data",
        "get",
        "next",
        "aggregate",
        "res_data",
        "error",
        "find",
        "_id",
        "id",
        "influencer_data",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi\\routes\\",
      "sourcesContent": [
        "\r\nvar express = require('express');\r\nvar router = express.Router();\r\nvar mongoose = require('mongoose');\r\nconst influencer = require('../models/influencers');\r\nconst influencers_data = require('../models/influencers_data');\r\n//const email = require('../config/email');\r\n//const nodemailer = require('nodemailer');\r\nvar passwordHash = require('password-hash');\r\nconst {ObjectId} = require('mongodb'); \r\n\r\n//process.env.NODE_TLS_REJECT_UNAUTHORIZED = \"1\";\r\n\r\nrouter.post('/register', async function(req,res) {\r\nconsole.log(req.body.influencer_signup);\r\n      var influencerCreate =  new influencer.influencers(req.body.influencer_signup);\r\n      var influencerData =  new influencers_data.influencers_data(req.body.influencer_signup);\r\n\r\n      var datetime = new Date();\r\n      let pass = passwordHash.generate(req.body.influencer_signup.password)\r\n\r\n      influencerCreate.joindate = datetime\r\n      influencerCreate.password = pass\r\n      influencerCreate.tiktok = req.body.influencer_signup.tiktok\r\n      influencerCreate.instagram = req.body.influencer_signup.insta\r\n      influencerCreate.facebook = req.body.influencer_signup.fb\r\n      influencerCreate.twitter = req.body.influencer_signup.twitter\r\n\r\n      influencerData.twitterfollowers = req.body.influencer_signup.twitter_followers\r\n      influencerData.tiktokfollowers = req.body.influencer_signup.tiktok_followers\r\n      influencerData.facebookfollowers = req.body.influencer_signup.fb_followers\r\n      influencerData.instagramfollowers = req.body.influencer_signup.insta_followers\r\n      \r\n      influencer.influencers.findOne({email:req.body.influencer_signup.email}, function(err, influencers) {\r\n        if (err)  res.json({status:\"failure\",statusCode:100,msg:err});\r\n        \r\n        if(influencers){\r\n          console.log(influencers)\r\n          res.json({status:\"failure\",statusCode:100,msg:\"Email already exists!!\"});\r\n        }else{\r\n            influencer.influencers.findOne({name:req.body.influencer_signup.name}, function(err, influencers) {\r\n            if (err)  res.json({status:\"failure\",statusCode:100,msg:err});\r\n        \r\n            if(influencers){\r\n              console.log(influencers)\r\n              res.json({status:\"failure\",statusCode:100,msg:\"Username already exists!!\"});\r\n            }\r\n            else{\r\n              \r\n                influencerCreate.save(function (err, influencer_res) {\r\n                  influencerData.influencerid = influencer_res['_id']\r\n                  influencerData.save(function (err1, influ_data_res) {\r\n                    if (err || err1) res.json({status:\"failure\",statusCode:100,msg:err});\r\n                    res.json({status:\"success\",statusCode:200,data:influencer_res,msg:\"Signup & SignIn successfully!\"});\r\n                  });\r\n                });\r\n            }\r\n          })\r\n        }\r\n      }); \r\n      \r\n    });\r\n\r\n    router.get('/test', function(req,res) {\r\n      res.json(\"it workedvijay\");\r\n    });\r\n\r\n    router.get('/getInfluencers', function(req, res, next) {\r\n    //   influencer.influencers.find({}, function(err, influencers_dt) {\r\n    //     if (err)  res.json({status:\"failure\",statusCode:100,error:err});\r\n    //     res.json({status:\"success\",statusCode:200,data:influencers_dt});\r\n    //  });\r\n\r\n    influencers_data.influencers_data.aggregate([\r\n      { \"$lookup\": {\r\n              \"from\": \"influencers\",\r\n              \"localField\": \"influencerid\",\r\n              \"foreignField\": \"_id\",\r\n              \"as\": \"vals\"\r\n            }\r\n      }\r\n\r\n      ], function(err, res_data) {\r\n           if (err)  res.json({status:\"failure\",statusCode:100,error:err});\r\n            res.json({status:\"success\",statusCode:200,data:res_data});\r\n          })\r\n\r\n    });\r\n\r\n    router.get('/getInfluencers1', function(req, res, next) {\r\n      // influencer.populated('influencers_data');\r\n      // influencer.influencers_data._id;\r\n      // await influencer.influencers.find({}.populate(\"influencers_data\"), function(err, influencers_dt) {\r\n      //  // influencers_data.influencers_data.find({}, function(err1, influencers_data) {\r\n      //    if (err)  res.json({status:\"failure\",statusCode:100,error:err});\r\n      //    res.json({status:\"success\",statusCode:200,data:influencers_dt});\r\n      //  //});\r\n      // });\r\n\r\n      influencer.influencers.aggregate([\r\n        { \"$lookup\": {\r\n                \"from\": \"influencers_data\",\r\n                //\"startWith\": \"$parent\",\r\n                \"localField\": \"_id\",\r\n                \"foreignField\": \"influencerid\",\r\n                \"as\": \"vals\"\r\n              }\r\n        }\r\n\r\n        ], function(err, res_data) {\r\n             if (err)  res.json({status:\"failure\",statusCode:100,error:err});\r\n              res.json({status:\"success\",statusCode:200,data:res_data});\r\n            })\r\n\r\n     });\r\n\r\n     router.post('/singleInfluencer', function(req, res) {\r\n      influencer.influencers.find({_id:req.body.id}, function(err, influencer_data) {\r\n        if (err)  res.json({status:\"failure\",statusCode:100,error:err});\r\n        res.json({status:\"success\",statusCode:200,data:influencer_data});\r\n      });\r\n    });\r\n\r\n\r\n    module.exports = router;"
      ]
    },
    "sourceType": "module",
    "mtime": 1609336813870
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Codenomad\\\\Desktop\\\\boom-advertise\\\\boom-advertise\\\\serverapi\\\\models\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Codenomad\\\\Desktop\\\\boom-advertise\\\\boom-advertise\\\\serverapi\",\"filename\":\"C:\\\\Users\\\\Codenomad\\\\Desktop\\\\boom-advertise\\\\boom-advertise\\\\serverapi\\\\models\\\\influencers.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Codenomad\\\\Desktop\\\\boom-advertise\\\\boom-advertise\\\\serverapi\",\"plugins\":[],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi\\models\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi",
      "filename": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi\\models\\influencers.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi\\models\\influencers.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi\\models\\influencers.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi\\models\\",
        "sourceFileName": "influencers.js"
      }
    },
    "ast": null,
    "code": "var mongoose = require('mongoose');\n\nconst Schema = mongoose.Schema;\nconst influencersSchema = new Schema({\n  id: String,\n  // String is shorthand for {type: String}\n  name: String,\n  email: String,\n  password: String,\n  tiktok: Boolean,\n  instagram: Boolean,\n  facebook: Boolean,\n  twitter: Boolean,\n  joindate: Date\n});\nconst influencers = mongoose.model('influencers', influencersSchema);\nmodule.exports = {\n  influencers,\n  influencersSchema\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZmx1ZW5jZXJzLmpzIl0sIm5hbWVzIjpbIm1vbmdvb3NlIiwicmVxdWlyZSIsIlNjaGVtYSIsImluZmx1ZW5jZXJzU2NoZW1hIiwiaWQiLCJTdHJpbmciLCJuYW1lIiwiZW1haWwiLCJwYXNzd29yZCIsInRpa3RvayIsIkJvb2xlYW4iLCJpbnN0YWdyYW0iLCJmYWNlYm9vayIsInR3aXR0ZXIiLCJqb2luZGF0ZSIsIkRhdGUiLCJpbmZsdWVuY2VycyIsIm1vZGVsIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsSUFBSUEsUUFBUSxHQUFHQyxPQUFPLENBQUMsVUFBRCxDQUF0Qjs7QUFDQSxNQUFNQyxNQUFNLEdBQUdGLFFBQVEsQ0FBQ0UsTUFBeEI7QUFFQSxNQUFNQyxpQkFBaUIsR0FBRyxJQUFJRCxNQUFKLENBQVc7QUFDbkNFLEVBQUFBLEVBQUUsRUFBR0MsTUFEOEI7QUFDdEI7QUFDYkMsRUFBQUEsSUFBSSxFQUFFRCxNQUY2QjtBQUduQ0UsRUFBQUEsS0FBSyxFQUFJRixNQUgwQjtBQUluQ0csRUFBQUEsUUFBUSxFQUFJSCxNQUp1QjtBQUtuQ0ksRUFBQUEsTUFBTSxFQUFJQyxPQUx5QjtBQU1uQ0MsRUFBQUEsU0FBUyxFQUFJRCxPQU5zQjtBQU9uQ0UsRUFBQUEsUUFBUSxFQUFJRixPQVB1QjtBQVFuQ0csRUFBQUEsT0FBTyxFQUFJSCxPQVJ3QjtBQVNuQ0ksRUFBQUEsUUFBUSxFQUFJQztBQVR1QixDQUFYLENBQTFCO0FBWUEsTUFBT0MsV0FBVyxHQUFHaEIsUUFBUSxDQUFDaUIsS0FBVCxDQUFlLGFBQWYsRUFBOEJkLGlCQUE5QixDQUFyQjtBQUNBZSxNQUFNLENBQUNDLE9BQVAsR0FBaUI7QUFBRUgsRUFBQUEsV0FBRjtBQUFjYixFQUFBQTtBQUFkLENBQWpCIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcQ29kZW5vbWFkXFxEZXNrdG9wXFxib29tLWFkdmVydGlzZVxcYm9vbS1hZHZlcnRpc2VcXHNlcnZlcmFwaVxcbW9kZWxzXFwiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgbW9uZ29vc2UgPSByZXF1aXJlKCdtb25nb29zZScpO1xyXG5jb25zdCBTY2hlbWEgPSBtb25nb29zZS5TY2hlbWE7XHJcblxyXG5jb25zdCBpbmZsdWVuY2Vyc1NjaGVtYSA9IG5ldyBTY2hlbWEoe1xyXG4gIGlkOiAgU3RyaW5nLCAvLyBTdHJpbmcgaXMgc2hvcnRoYW5kIGZvciB7dHlwZTogU3RyaW5nfVxyXG4gIG5hbWU6IFN0cmluZyxcclxuICBlbWFpbDogICBTdHJpbmcsXHJcbiAgcGFzc3dvcmQ6ICAgU3RyaW5nLFxyXG4gIHRpa3RvazogICBCb29sZWFuLFxyXG4gIGluc3RhZ3JhbTogICBCb29sZWFuLFxyXG4gIGZhY2Vib29rOiAgIEJvb2xlYW4sXHJcbiAgdHdpdHRlcjogICBCb29sZWFuLFxyXG4gIGpvaW5kYXRlOiAgIERhdGUsXHJcbn1cclxuKTtcclxuY29uc3QgIGluZmx1ZW5jZXJzID0gbW9uZ29vc2UubW9kZWwoJ2luZmx1ZW5jZXJzJywgaW5mbHVlbmNlcnNTY2hlbWEpO1xyXG5tb2R1bGUuZXhwb3J0cyA9IHsgaW5mbHVlbmNlcnMsaW5mbHVlbmNlcnNTY2hlbWEgfSA7Il19",
    "map": {
      "version": 3,
      "sources": [
        "influencers.js"
      ],
      "names": [
        "mongoose",
        "require",
        "Schema",
        "influencersSchema",
        "id",
        "String",
        "name",
        "email",
        "password",
        "tiktok",
        "Boolean",
        "instagram",
        "facebook",
        "twitter",
        "joindate",
        "Date",
        "influencers",
        "model",
        "module",
        "exports"
      ],
      "mappings": "AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAtB;;AACA,MAAMC,MAAM,GAAGF,QAAQ,CAACE,MAAxB;AAEA,MAAMC,iBAAiB,GAAG,IAAID,MAAJ,CAAW;AACnCE,EAAAA,EAAE,EAAGC,MAD8B;AACtB;AACbC,EAAAA,IAAI,EAAED,MAF6B;AAGnCE,EAAAA,KAAK,EAAIF,MAH0B;AAInCG,EAAAA,QAAQ,EAAIH,MAJuB;AAKnCI,EAAAA,MAAM,EAAIC,OALyB;AAMnCC,EAAAA,SAAS,EAAID,OANsB;AAOnCE,EAAAA,QAAQ,EAAIF,OAPuB;AAQnCG,EAAAA,OAAO,EAAIH,OARwB;AASnCI,EAAAA,QAAQ,EAAIC;AATuB,CAAX,CAA1B;AAYA,MAAOC,WAAW,GAAGhB,QAAQ,CAACiB,KAAT,CAAe,aAAf,EAA8Bd,iBAA9B,CAArB;AACAe,MAAM,CAACC,OAAP,GAAiB;AAAEH,EAAAA,WAAF;AAAcb,EAAAA;AAAd,CAAjB",
      "sourceRoot": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi\\models\\",
      "sourcesContent": [
        "var mongoose = require('mongoose');\r\nconst Schema = mongoose.Schema;\r\n\r\nconst influencersSchema = new Schema({\r\n  id:  String, // String is shorthand for {type: String}\r\n  name: String,\r\n  email:   String,\r\n  password:   String,\r\n  tiktok:   Boolean,\r\n  instagram:   Boolean,\r\n  facebook:   Boolean,\r\n  twitter:   Boolean,\r\n  joindate:   Date,\r\n}\r\n);\r\nconst  influencers = mongoose.model('influencers', influencersSchema);\r\nmodule.exports = { influencers,influencersSchema } ;"
      ]
    },
    "sourceType": "module",
    "mtime": 1609322948471
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Codenomad\\\\Desktop\\\\boom-advertise\\\\boom-advertise\\\\serverapi\\\\models\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Codenomad\\\\Desktop\\\\boom-advertise\\\\boom-advertise\\\\serverapi\",\"filename\":\"C:\\\\Users\\\\Codenomad\\\\Desktop\\\\boom-advertise\\\\boom-advertise\\\\serverapi\\\\models\\\\influencers_data.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Codenomad\\\\Desktop\\\\boom-advertise\\\\boom-advertise\\\\serverapi\",\"plugins\":[],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi\\models\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi",
      "filename": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi\\models\\influencers_data.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi\\models\\influencers_data.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi\\models\\influencers_data.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi\\models\\",
        "sourceFileName": "influencers_data.js"
      }
    },
    "ast": null,
    "code": "var mongoose = require('mongoose');\n\nconst Schema = mongoose.Schema;\nconst influencers_dataSchema = new Schema({\n  id: String,\n  // String is shorthand for {type: String}\n  influencerid: {\n    type: mongoose.Schema.ObjectId\n  },\n  tiktokfollowers: String,\n  instagramfollowers: String,\n  facebookfollowers: String,\n  twitterfollowers: String\n});\nconst influencers_data = mongoose.model('influencers_data', influencers_dataSchema);\nmodule.exports = {\n  influencers_data,\n  influencers_dataSchema\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZmx1ZW5jZXJzX2RhdGEuanMiXSwibmFtZXMiOlsibW9uZ29vc2UiLCJyZXF1aXJlIiwiU2NoZW1hIiwiaW5mbHVlbmNlcnNfZGF0YVNjaGVtYSIsImlkIiwiU3RyaW5nIiwiaW5mbHVlbmNlcmlkIiwidHlwZSIsIk9iamVjdElkIiwidGlrdG9rZm9sbG93ZXJzIiwiaW5zdGFncmFtZm9sbG93ZXJzIiwiZmFjZWJvb2tmb2xsb3dlcnMiLCJ0d2l0dGVyZm9sbG93ZXJzIiwiaW5mbHVlbmNlcnNfZGF0YSIsIm1vZGVsIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsSUFBSUEsUUFBUSxHQUFHQyxPQUFPLENBQUMsVUFBRCxDQUF0Qjs7QUFDQSxNQUFNQyxNQUFNLEdBQUdGLFFBQVEsQ0FBQ0UsTUFBeEI7QUFFQSxNQUFNQyxzQkFBc0IsR0FBRyxJQUFJRCxNQUFKLENBQVc7QUFDeENFLEVBQUFBLEVBQUUsRUFBR0MsTUFEbUM7QUFDM0I7QUFDYkMsRUFBQUEsWUFBWSxFQUFFO0FBQUVDLElBQUFBLElBQUksRUFBRVAsUUFBUSxDQUFDRSxNQUFULENBQWdCTTtBQUF4QixHQUYwQjtBQUd4Q0MsRUFBQUEsZUFBZSxFQUFJSixNQUhxQjtBQUl4Q0ssRUFBQUEsa0JBQWtCLEVBQUlMLE1BSmtCO0FBS3hDTSxFQUFBQSxpQkFBaUIsRUFBSU4sTUFMbUI7QUFNeENPLEVBQUFBLGdCQUFnQixFQUFJUDtBQU5vQixDQUFYLENBQS9CO0FBUUEsTUFBT1EsZ0JBQWdCLEdBQUdiLFFBQVEsQ0FBQ2MsS0FBVCxDQUFlLGtCQUFmLEVBQW1DWCxzQkFBbkMsQ0FBMUI7QUFDQVksTUFBTSxDQUFDQyxPQUFQLEdBQWlCO0FBQUVILEVBQUFBLGdCQUFGO0FBQW1CVixFQUFBQTtBQUFuQixDQUFqQiIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXENvZGVub21hZFxcRGVza3RvcFxcYm9vbS1hZHZlcnRpc2VcXGJvb20tYWR2ZXJ0aXNlXFxzZXJ2ZXJhcGlcXG1vZGVsc1xcIiwic291cmNlc0NvbnRlbnQiOlsidmFyIG1vbmdvb3NlID0gcmVxdWlyZSgnbW9uZ29vc2UnKTtcclxuY29uc3QgU2NoZW1hID0gbW9uZ29vc2UuU2NoZW1hO1xyXG5cclxuY29uc3QgaW5mbHVlbmNlcnNfZGF0YVNjaGVtYSA9IG5ldyBTY2hlbWEoe1xyXG4gIGlkOiAgU3RyaW5nLCAvLyBTdHJpbmcgaXMgc2hvcnRoYW5kIGZvciB7dHlwZTogU3RyaW5nfVxyXG4gIGluZmx1ZW5jZXJpZDogeyB0eXBlOiBtb25nb29zZS5TY2hlbWEuT2JqZWN0SWR9LFxyXG4gIHRpa3Rva2ZvbGxvd2VyczogICBTdHJpbmcsXHJcbiAgaW5zdGFncmFtZm9sbG93ZXJzOiAgIFN0cmluZyxcclxuICBmYWNlYm9va2ZvbGxvd2VyczogICBTdHJpbmcsXHJcbiAgdHdpdHRlcmZvbGxvd2VyczogICBTdHJpbmdcclxufSk7XHJcbmNvbnN0ICBpbmZsdWVuY2Vyc19kYXRhID0gbW9uZ29vc2UubW9kZWwoJ2luZmx1ZW5jZXJzX2RhdGEnLCBpbmZsdWVuY2Vyc19kYXRhU2NoZW1hKTtcclxubW9kdWxlLmV4cG9ydHMgPSB7IGluZmx1ZW5jZXJzX2RhdGEsaW5mbHVlbmNlcnNfZGF0YVNjaGVtYSB9IDsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "influencers_data.js"
      ],
      "names": [
        "mongoose",
        "require",
        "Schema",
        "influencers_dataSchema",
        "id",
        "String",
        "influencerid",
        "type",
        "ObjectId",
        "tiktokfollowers",
        "instagramfollowers",
        "facebookfollowers",
        "twitterfollowers",
        "influencers_data",
        "model",
        "module",
        "exports"
      ],
      "mappings": "AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAtB;;AACA,MAAMC,MAAM,GAAGF,QAAQ,CAACE,MAAxB;AAEA,MAAMC,sBAAsB,GAAG,IAAID,MAAJ,CAAW;AACxCE,EAAAA,EAAE,EAAGC,MADmC;AAC3B;AACbC,EAAAA,YAAY,EAAE;AAAEC,IAAAA,IAAI,EAAEP,QAAQ,CAACE,MAAT,CAAgBM;AAAxB,GAF0B;AAGxCC,EAAAA,eAAe,EAAIJ,MAHqB;AAIxCK,EAAAA,kBAAkB,EAAIL,MAJkB;AAKxCM,EAAAA,iBAAiB,EAAIN,MALmB;AAMxCO,EAAAA,gBAAgB,EAAIP;AANoB,CAAX,CAA/B;AAQA,MAAOQ,gBAAgB,GAAGb,QAAQ,CAACc,KAAT,CAAe,kBAAf,EAAmCX,sBAAnC,CAA1B;AACAY,MAAM,CAACC,OAAP,GAAiB;AAAEH,EAAAA,gBAAF;AAAmBV,EAAAA;AAAnB,CAAjB",
      "sourceRoot": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi\\models\\",
      "sourcesContent": [
        "var mongoose = require('mongoose');\r\nconst Schema = mongoose.Schema;\r\n\r\nconst influencers_dataSchema = new Schema({\r\n  id:  String, // String is shorthand for {type: String}\r\n  influencerid: { type: mongoose.Schema.ObjectId},\r\n  tiktokfollowers:   String,\r\n  instagramfollowers:   String,\r\n  facebookfollowers:   String,\r\n  twitterfollowers:   String\r\n});\r\nconst  influencers_data = mongoose.model('influencers_data', influencers_dataSchema);\r\nmodule.exports = { influencers_data,influencers_dataSchema } ;"
      ]
    },
    "sourceType": "module",
    "mtime": 1609322944353
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Codenomad\\\\Desktop\\\\boom-advertise\\\\boom-advertise\\\\serverapi\\\\routes\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Codenomad\\\\Desktop\\\\boom-advertise\\\\boom-advertise\\\\serverapi\",\"filename\":\"C:\\\\Users\\\\Codenomad\\\\Desktop\\\\boom-advertise\\\\boom-advertise\\\\serverapi\\\\routes\\\\login.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Codenomad\\\\Desktop\\\\boom-advertise\\\\boom-advertise\\\\serverapi\",\"plugins\":[],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi\\routes\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi",
      "filename": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi\\routes\\login.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi\\routes\\login.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi\\routes\\login.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi\\routes\\",
        "sourceFileName": "login.js"
      }
    },
    "ast": null,
    "code": "var express = require('express');\n\nvar router = express.Router(); //const nodemailer = require('nodemailer');\n\nvar mongoose = require('mongoose');\n\nconst promoters = require('../models/promoters');\n\nconst influencers = require('../models/influencers');\n\nvar passwordHash = require('password-hash'); //const user = require('../models/users');\n//const email = require('../config/email');\n// const app = express();\n// const cors = require(\"cors\");\n// app.use(function (req, res, next) {\n//     //Enabling CORS\n//     res.header(\"Access-Control-Allow-Origin\", \"*\");\n//     res.header(\"Access-Control-Allow-Methods\", \"GET,HEAD,OPTIONS,POST,PUT\");\n//     res.header(\"Access-Control-Allow-Headers\", \"Origin, X-Requested-With, Content-Type, Accept, x-client-key, x-client-token, x-client-secret, Authorization\");\n//     next();\n// });\n\n\nrouter.post('/', function (req, res) {\n  console.log(req.body.signin);\n\n  if (req.body.signin.user_type == 0) {\n    if (!passwordHash.isHashed(req.body.signin.password)) {\n      var hashedPassword = passwordHash.generate(req.body.signin.password); //console.log(hashedPassword)\n\n      influencers.influencers.find({\n        $or: [{\n          name: req.body.signin.email\n        }, {\n          'email': req.body.signin.email\n        }]\n      }, function (err, influencers) {\n        if (err) {\n          res.json({\n            status: \"failure\",\n            statusCode: 600,\n            msg: err\n          });\n        } else if (influencers.length == 0) {\n          console.log('hii man');\n          console.log(influencers.length);\n          res.json({\n            status: \"failure\",\n            statusCode: 500,\n            msg: \"Invalid Credentials!!!\"\n          });\n        } else {\n          if (passwordHash.verify(req.body.signin.password, influencers[0].password)) {\n            console.log(influencers);\n            res.json({\n              status: \"success\",\n              statusCode: 200,\n              data: influencers,\n              msg: \"Login successfully...\"\n            });\n          } else {\n            res.json({\n              status: \"failure\",\n              statusCode: 100,\n              msg: \"Invalid Credentials!!!\"\n            });\n          }\n        }\n      });\n    }\n  } else {\n    if (!passwordHash.isHashed(req.body.signin.password)) {\n      var hashedPassword = passwordHash.generate(req.body.signin.password); //console.log(hashedPassword)\n\n      promoters.promoters.find({\n        $or: [{\n          name: req.body.signin.email\n        }, {\n          'email': req.body.signin.email\n        }]\n      }, function (err, promoters) {\n        if (err) {\n          res.json({\n            status: \"failure\",\n            statusCode: 100,\n            msg: err\n          });\n        } else if (promoters.length == 0) {\n          res.json({\n            status: \"failure\",\n            statusCode: 100,\n            msg: \"Invalid Credentials!!!\"\n          });\n        } else {\n          if (passwordHash.verify(req.body.signin.password, promoters[0].password)) {\n            console.log(promoters);\n            res.json({\n              status: \"success\",\n              statusCode: 200,\n              data: promoters,\n              msg: \"Login successfully...\"\n            });\n          } else {\n            res.json({\n              status: \"failure\",\n              statusCode: 100,\n              msg: \"Invalid Credentials!!!\"\n            });\n          }\n        }\n      });\n    }\n  } // else{\n  // promoters.promoters\n  // .find({ $or : [{name:req.body.signin.email},{'email':req.body.signin.email}]},function (err, promoters) {\n  //     if (err) {\n  //         res.json({status:\"failure\",statusCode:100,data:err});\n  //     }else if(promoters.length==0){\n  //       res.json({status:\"failure\",statusCode:100,data:\"Invalid Credentials!!!\"});\n  //       }\n  //       else{\n  //         if(passwordHash.verify(req.body.signin.password, promoters[0].password)){\n  //           console.log(promoters)\n  //           res.json({status:\"success\",statusCode:200,data:promoters});\n  //         }\n  //       }\n  //   });\n  // } \n\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "login.js"
      ],
      "names": [
        "express",
        "require",
        "router",
        "Router",
        "mongoose",
        "promoters",
        "influencers",
        "passwordHash",
        "post",
        "req",
        "res",
        "console",
        "log",
        "body",
        "signin",
        "user_type",
        "isHashed",
        "password",
        "hashedPassword",
        "generate",
        "find",
        "$or",
        "name",
        "email",
        "err",
        "json",
        "status",
        "statusCode",
        "msg",
        "length",
        "verify",
        "data",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi\\routes\\",
      "sourcesContent": [
        "\r\nvar express = require('express');\r\nvar router = express.Router();\r\n//const nodemailer = require('nodemailer');\r\nvar mongoose = require('mongoose');\r\nconst promoters = require('../models/promoters');\r\nconst influencers = require('../models/influencers');\r\nvar passwordHash = require('password-hash');\r\n//const user = require('../models/users');\r\n//const email = require('../config/email');\r\n// const app = express();\r\n// const cors = require(\"cors\");\r\n// app.use(function (req, res, next) {\r\n//     //Enabling CORS\r\n//     res.header(\"Access-Control-Allow-Origin\", \"*\");\r\n//     res.header(\"Access-Control-Allow-Methods\", \"GET,HEAD,OPTIONS,POST,PUT\");\r\n//     res.header(\"Access-Control-Allow-Headers\", \"Origin, X-Requested-With, Content-Type, Accept, x-client-key, x-client-token, x-client-secret, Authorization\");\r\n//     next();\r\n// });\r\n\r\n\r\nrouter.post('/', function(req, res) {\r\n   console.log(req.body.signin)\r\n  if(req.body.signin.user_type == 0){\r\n\r\n    if(!passwordHash.isHashed(req.body.signin.password)){\r\n      var hashedPassword = passwordHash.generate(req.body.signin.password);\r\n      //console.log(hashedPassword)\r\n      influencers.influencers\r\n        .find({ $or : [{name:req.body.signin.email},{'email':req.body.signin.email}]},function (err, influencers) {\r\n        if (err) {\r\n            res.json({status:\"failure\",statusCode:600,msg:err});\r\n        }else if(influencers.length==0){\r\n          console.log('hii man');\r\n          console.log(influencers.length);\r\n          res.json({status:\"failure\",statusCode:500,msg:\"Invalid Credentials!!!\"});\r\n        }\r\n          else{\r\n            if(passwordHash.verify(req.body.signin.password, influencers[0].password)){\r\n              console.log(influencers)\r\n              res.json({status:\"success\",statusCode:200,data:influencers,msg:\"Login successfully...\"});\r\n            }else{\r\n              res.json({status:\"failure\",statusCode:100,msg:\"Invalid Credentials!!!\"});\r\n            }\r\n          }\r\n      });\r\n    }\r\n\r\n  }else{\r\n    if(!passwordHash.isHashed(req.body.signin.password)){\r\n      var hashedPassword = passwordHash.generate(req.body.signin.password);\r\n      //console.log(hashedPassword)\r\n      promoters.promoters\r\n        .find({ $or : [{name:req.body.signin.email},{'email':req.body.signin.email}]},function (err, promoters) {\r\n        if (err) {\r\n            res.json({status:\"failure\",statusCode:100,msg:err});\r\n        }else if(promoters.length==0){\r\n          res.json({status:\"failure\",statusCode:100,msg:\"Invalid Credentials!!!\"});\r\n        }\r\n          else{\r\n            if(passwordHash.verify(req.body.signin.password, promoters[0].password)){\r\n              console.log(promoters)\r\n              res.json({status:\"success\",statusCode:200,data:promoters,msg:\"Login successfully...\"});\r\n            }else{\r\n              res.json({status:\"failure\",statusCode:100,msg:\"Invalid Credentials!!!\"});\r\n            }\r\n          }\r\n      });\r\n    }\r\n  }\r\n    // else{\r\n    // promoters.promoters\r\n    // .find({ $or : [{name:req.body.signin.email},{'email':req.body.signin.email}]},function (err, promoters) {\r\n      \r\n    //     if (err) {\r\n    //         res.json({status:\"failure\",statusCode:100,data:err});\r\n    //     }else if(promoters.length==0){\r\n    //       res.json({status:\"failure\",statusCode:100,data:\"Invalid Credentials!!!\"});\r\n    //       }\r\n    //       else{\r\n    //         if(passwordHash.verify(req.body.signin.password, promoters[0].password)){\r\n    //           console.log(promoters)\r\n    //           res.json({status:\"success\",statusCode:200,data:promoters});\r\n    //         }\r\n    //       }\r\n    //   });\r\n    // } \r\n  });\r\n\r\n  module.exports = router;"
      ]
    },
    "sourceType": "module",
    "mtime": 1608881607826
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Codenomad\\\\Desktop\\\\boom-advertise\\\\boom-advertise\\\\serverapi\\\\routes\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Codenomad\\\\Desktop\\\\boom-advertise\\\\boom-advertise\\\\serverapi\",\"filename\":\"C:\\\\Users\\\\Codenomad\\\\Desktop\\\\boom-advertise\\\\boom-advertise\\\\serverapi\\\\routes\\\\sessionsController.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Codenomad\\\\Desktop\\\\boom-advertise\\\\boom-advertise\\\\serverapi\",\"plugins\":[],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi\\routes\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi",
      "filename": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi\\routes\\sessionsController.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi\\routes\\sessionsController.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi\\routes\\sessionsController.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi\\routes\\",
        "sourceFileName": "sessionsController.js"
      }
    },
    "ast": null,
    "code": "const express = require('express');\n\nconst router = express.Router();\n\nconst CryptoJS = require(\"crypto-js\");\n\nconst oauth = require('oauth');\n\nconst _twitterConsumerKey = process.env.TWITTER_CONSUMER_KEY;\nconst _twitterConsumerSecret = process.env.TWITTER_CONSUMER_SECRET;\nconst twitterCallbackUrl = process.env.TWITTER_CALLBACK_URL;\nconst consumer = new oauth.OAuth(\"https://twitter.com/oauth/request_token\", \"https://twitter.com/oauth/access_token\", _twitterConsumerKey, _twitterConsumerSecret, \"1.0A\", twitterCallbackUrl, \"HMAC-SHA1\");\nrouter.get('/connect', (req, res) => {\n  consumer.getOAuthRequestToken(function (error, oauthToken, oauthTokenSecret, results) {\n    if (error) {\n      res.send(error, 500);\n    } else {\n      req.session.oauthRequestToken = oauthToken;\n      req.session.oauthRequestTokenSecret = oauthTokenSecret;\n      const redirect = {\n        redirectUrl: `https://twitter.com/oauth/authorize?  oauth_token=${req.session.oauthRequestToken}`\n      };\n      res.send(redirect);\n    }\n  });\n});\nrouter.get('/saveAccessTokens', authCheck, (req, res) => {\n  consumer.getOAuthAccessToken(req.query.oauth_token, req.session.oauthRequestTokenSecret, req.query.oauth_verifier, (error, oauthAccessToken, oauthAccessTokenSecret, results) => {\n    if (error) {\n      logger.error(error);\n      res.send(error, 500);\n    } else {\n      req.session.oauthAccessToken = oauthAccessToken;\n      req.session.oauthAccessTokenSecret = oauthAccessTokenSecret;\n      return res.send({\n        message: 'token saved'\n      });\n    }\n  });\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlc3Npb25zQ29udHJvbGxlci5qcyJdLCJuYW1lcyI6WyJleHByZXNzIiwicmVxdWlyZSIsInJvdXRlciIsIlJvdXRlciIsIkNyeXB0b0pTIiwib2F1dGgiLCJfdHdpdHRlckNvbnN1bWVyS2V5IiwicHJvY2VzcyIsImVudiIsIlRXSVRURVJfQ09OU1VNRVJfS0VZIiwiX3R3aXR0ZXJDb25zdW1lclNlY3JldCIsIlRXSVRURVJfQ09OU1VNRVJfU0VDUkVUIiwidHdpdHRlckNhbGxiYWNrVXJsIiwiVFdJVFRFUl9DQUxMQkFDS19VUkwiLCJjb25zdW1lciIsIk9BdXRoIiwiZ2V0IiwicmVxIiwicmVzIiwiZ2V0T0F1dGhSZXF1ZXN0VG9rZW4iLCJlcnJvciIsIm9hdXRoVG9rZW4iLCJvYXV0aFRva2VuU2VjcmV0IiwicmVzdWx0cyIsInNlbmQiLCJzZXNzaW9uIiwib2F1dGhSZXF1ZXN0VG9rZW4iLCJvYXV0aFJlcXVlc3RUb2tlblNlY3JldCIsInJlZGlyZWN0IiwicmVkaXJlY3RVcmwiLCJhdXRoQ2hlY2siLCJnZXRPQXV0aEFjY2Vzc1Rva2VuIiwicXVlcnkiLCJvYXV0aF90b2tlbiIsIm9hdXRoX3ZlcmlmaWVyIiwib2F1dGhBY2Nlc3NUb2tlbiIsIm9hdXRoQWNjZXNzVG9rZW5TZWNyZXQiLCJsb2dnZXIiLCJtZXNzYWdlIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsT0FBTyxHQUFHQyxPQUFPLENBQUMsU0FBRCxDQUF2Qjs7QUFDQSxNQUFNQyxNQUFNLEdBQUdGLE9BQU8sQ0FBQ0csTUFBUixFQUFmOztBQUNBLE1BQU1DLFFBQVEsR0FBR0gsT0FBTyxDQUFDLFdBQUQsQ0FBeEI7O0FBQ0EsTUFBTUksS0FBSyxHQUFHSixPQUFPLENBQUMsT0FBRCxDQUFyQjs7QUFDQSxNQUFNSyxtQkFBbUIsR0FBR0MsT0FBTyxDQUFDQyxHQUFSLENBQVlDLG9CQUF4QztBQUNBLE1BQU1DLHNCQUFzQixHQUFHSCxPQUFPLENBQUNDLEdBQVIsQ0FBWUcsdUJBQTNDO0FBQ0EsTUFBTUMsa0JBQWtCLEdBQUdMLE9BQU8sQ0FBQ0MsR0FBUixDQUFZSyxvQkFBdkM7QUFDQSxNQUFNQyxRQUFRLEdBQUcsSUFBSVQsS0FBSyxDQUFDVSxLQUFWLENBQWdCLHlDQUFoQixFQUEyRCx3Q0FBM0QsRUFBb0dULG1CQUFwRyxFQUF5SEksc0JBQXpILEVBQWlKLE1BQWpKLEVBQXlKRSxrQkFBekosRUFBNkssV0FBN0ssQ0FBakI7QUFDQVYsTUFBTSxDQUFDYyxHQUFQLENBQVcsVUFBWCxFQUF1QixDQUFDQyxHQUFELEVBQU1DLEdBQU4sS0FBYztBQUNuQ0osRUFBQUEsUUFBUSxDQUFDSyxvQkFBVCxDQUE4QixVQUFVQyxLQUFWLEVBQWlCQyxVQUFqQixFQUErQkMsZ0JBQS9CLEVBQWlEQyxPQUFqRCxFQUEwRDtBQUN0RixRQUFJSCxLQUFKLEVBQVc7QUFDVEYsTUFBQUEsR0FBRyxDQUFDTSxJQUFKLENBQVNKLEtBQVQsRUFBZ0IsR0FBaEI7QUFDRCxLQUZELE1BRU87QUFDTEgsTUFBQUEsR0FBRyxDQUFDUSxPQUFKLENBQVlDLGlCQUFaLEdBQWdDTCxVQUFoQztBQUNBSixNQUFBQSxHQUFHLENBQUNRLE9BQUosQ0FBWUUsdUJBQVosR0FBc0NMLGdCQUF0QztBQUNBLFlBQU1NLFFBQVEsR0FBRztBQUN2QkMsUUFBQUEsV0FBVyxFQUFHLHFEQUFvRFosR0FBRyxDQUFDUSxPQUFKLENBQVlDLGlCQUFrQjtBQUR6RSxPQUFqQjtBQUdBUixNQUFBQSxHQUFHLENBQUNNLElBQUosQ0FBU0ksUUFBVDtBQUNEO0FBQ0YsR0FYRDtBQVlELENBYkQ7QUFjQTFCLE1BQU0sQ0FBQ2MsR0FBUCxDQUFXLG1CQUFYLEVBQWdDYyxTQUFoQyxFQUEyQyxDQUFDYixHQUFELEVBQU1DLEdBQU4sS0FBYztBQUN2REosRUFBQUEsUUFBUSxDQUFDaUIsbUJBQVQsQ0FDQWQsR0FBRyxDQUFDZSxLQUFKLENBQVVDLFdBRFYsRUFFQWhCLEdBQUcsQ0FBQ1EsT0FBSixDQUFZRSx1QkFGWixFQUdBVixHQUFHLENBQUNlLEtBQUosQ0FBVUUsY0FIVixFQUlBLENBQUNkLEtBQUQsRUFBUWUsZ0JBQVIsRUFBMEJDLHNCQUExQixFQUFrRGIsT0FBbEQsS0FBOEQ7QUFDNUQsUUFBSUgsS0FBSixFQUFXO0FBQ1RpQixNQUFBQSxNQUFNLENBQUNqQixLQUFQLENBQWFBLEtBQWI7QUFDQUYsTUFBQUEsR0FBRyxDQUFDTSxJQUFKLENBQVNKLEtBQVQsRUFBZ0IsR0FBaEI7QUFDRCxLQUhELE1BSUs7QUFDSEgsTUFBQUEsR0FBRyxDQUFDUSxPQUFKLENBQVlVLGdCQUFaLEdBQStCQSxnQkFBL0I7QUFDQWxCLE1BQUFBLEdBQUcsQ0FBQ1EsT0FBSixDQUFZVyxzQkFBWixHQUFxQ0Esc0JBQXJDO0FBQ0EsYUFBT2xCLEdBQUcsQ0FBQ00sSUFBSixDQUFTO0FBQUVjLFFBQUFBLE9BQU8sRUFBRTtBQUFYLE9BQVQsQ0FBUDtBQUNEO0FBQ0YsR0FkRDtBQWVELENBaEJEO0FBaUJBQyxNQUFNLENBQUNDLE9BQVAsR0FBaUJ0QyxNQUFqQiIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXENvZGVub21hZFxcRGVza3RvcFxcYm9vbS1hZHZlcnRpc2VcXGJvb20tYWR2ZXJ0aXNlXFxzZXJ2ZXJhcGlcXHJvdXRlc1xcIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgZXhwcmVzcyA9IHJlcXVpcmUoJ2V4cHJlc3MnKTtcclxuY29uc3Qgcm91dGVyID0gZXhwcmVzcy5Sb3V0ZXIoKTtcclxuY29uc3QgQ3J5cHRvSlMgPSByZXF1aXJlKFwiY3J5cHRvLWpzXCIpO1xyXG5jb25zdCBvYXV0aCA9IHJlcXVpcmUoJ29hdXRoJyk7XHJcbmNvbnN0IF90d2l0dGVyQ29uc3VtZXJLZXkgPSBwcm9jZXNzLmVudi5UV0lUVEVSX0NPTlNVTUVSX0tFWTtcclxuY29uc3QgX3R3aXR0ZXJDb25zdW1lclNlY3JldCA9IHByb2Nlc3MuZW52LlRXSVRURVJfQ09OU1VNRVJfU0VDUkVUO1xyXG5jb25zdCB0d2l0dGVyQ2FsbGJhY2tVcmwgPSBwcm9jZXNzLmVudi5UV0lUVEVSX0NBTExCQUNLX1VSTDtcclxuY29uc3QgY29uc3VtZXIgPSBuZXcgb2F1dGguT0F1dGgoXCJodHRwczovL3R3aXR0ZXIuY29tL29hdXRoL3JlcXVlc3RfdG9rZW5cIiwgXCJodHRwczovL3R3aXR0ZXIuY29tL29hdXRoL2FjY2Vzc190b2tlblwiLF90d2l0dGVyQ29uc3VtZXJLZXksIF90d2l0dGVyQ29uc3VtZXJTZWNyZXQsIFwiMS4wQVwiLCB0d2l0dGVyQ2FsbGJhY2tVcmwsIFwiSE1BQy1TSEExXCIpO1xyXG5yb3V0ZXIuZ2V0KCcvY29ubmVjdCcsIChyZXEsIHJlcykgPT4ge1xyXG4gIGNvbnN1bWVyLmdldE9BdXRoUmVxdWVzdFRva2VuKGZ1bmN0aW9uIChlcnJvciwgb2F1dGhUb2tlbiwgICBvYXV0aFRva2VuU2VjcmV0LCByZXN1bHRzKSB7XHJcbiAgICBpZiAoZXJyb3IpIHtcclxuICAgICAgcmVzLnNlbmQoZXJyb3IsIDUwMCk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICByZXEuc2Vzc2lvbi5vYXV0aFJlcXVlc3RUb2tlbiA9IG9hdXRoVG9rZW47XHJcbiAgICAgIHJlcS5zZXNzaW9uLm9hdXRoUmVxdWVzdFRva2VuU2VjcmV0ID0gb2F1dGhUb2tlblNlY3JldDtcclxuICAgICAgY29uc3QgcmVkaXJlY3QgPSB7IFxyXG5yZWRpcmVjdFVybDogYGh0dHBzOi8vdHdpdHRlci5jb20vb2F1dGgvYXV0aG9yaXplPyAgb2F1dGhfdG9rZW49JHtyZXEuc2Vzc2lvbi5vYXV0aFJlcXVlc3RUb2tlbn1gXHJcbiAgICB9XHJcbiAgICAgIHJlcy5zZW5kKHJlZGlyZWN0KTtcclxuICAgIH1cclxuICB9KTtcclxufSk7XHJcbnJvdXRlci5nZXQoJy9zYXZlQWNjZXNzVG9rZW5zJywgYXV0aENoZWNrLCAocmVxLCByZXMpID0+IHtcclxuICBjb25zdW1lci5nZXRPQXV0aEFjY2Vzc1Rva2VuKFxyXG4gIHJlcS5xdWVyeS5vYXV0aF90b2tlbixcclxuICByZXEuc2Vzc2lvbi5vYXV0aFJlcXVlc3RUb2tlblNlY3JldCxcclxuICByZXEucXVlcnkub2F1dGhfdmVyaWZpZXIsXHJcbiAgKGVycm9yLCBvYXV0aEFjY2Vzc1Rva2VuLCBvYXV0aEFjY2Vzc1Rva2VuU2VjcmV0LCByZXN1bHRzKSA9PiB7XHJcbiAgICBpZiAoZXJyb3IpIHtcclxuICAgICAgbG9nZ2VyLmVycm9yKGVycm9yKTtcclxuICAgICAgcmVzLnNlbmQoZXJyb3IsIDUwMCk7XHJcbiAgICB9XHJcbiAgICBlbHNlIHtcclxuICAgICAgcmVxLnNlc3Npb24ub2F1dGhBY2Nlc3NUb2tlbiA9IG9hdXRoQWNjZXNzVG9rZW47XHJcbiAgICAgIHJlcS5zZXNzaW9uLm9hdXRoQWNjZXNzVG9rZW5TZWNyZXQgPSBvYXV0aEFjY2Vzc1Rva2VuU2VjcmV0XHJcbiAgICAgIHJldHVybiByZXMuc2VuZCh7IG1lc3NhZ2U6ICd0b2tlbiBzYXZlZCcgfSk7XHJcbiAgICB9XHJcbiAgfSk7XHJcbn0pO1xyXG5tb2R1bGUuZXhwb3J0cyA9IHJvdXRlcjsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "sessionsController.js"
      ],
      "names": [
        "express",
        "require",
        "router",
        "Router",
        "CryptoJS",
        "oauth",
        "_twitterConsumerKey",
        "process",
        "env",
        "TWITTER_CONSUMER_KEY",
        "_twitterConsumerSecret",
        "TWITTER_CONSUMER_SECRET",
        "twitterCallbackUrl",
        "TWITTER_CALLBACK_URL",
        "consumer",
        "OAuth",
        "get",
        "req",
        "res",
        "getOAuthRequestToken",
        "error",
        "oauthToken",
        "oauthTokenSecret",
        "results",
        "send",
        "session",
        "oauthRequestToken",
        "oauthRequestTokenSecret",
        "redirect",
        "redirectUrl",
        "authCheck",
        "getOAuthAccessToken",
        "query",
        "oauth_token",
        "oauth_verifier",
        "oauthAccessToken",
        "oauthAccessTokenSecret",
        "logger",
        "message",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAMC,MAAM,GAAGF,OAAO,CAACG,MAAR,EAAf;;AACA,MAAMC,QAAQ,GAAGH,OAAO,CAAC,WAAD,CAAxB;;AACA,MAAMI,KAAK,GAAGJ,OAAO,CAAC,OAAD,CAArB;;AACA,MAAMK,mBAAmB,GAAGC,OAAO,CAACC,GAAR,CAAYC,oBAAxC;AACA,MAAMC,sBAAsB,GAAGH,OAAO,CAACC,GAAR,CAAYG,uBAA3C;AACA,MAAMC,kBAAkB,GAAGL,OAAO,CAACC,GAAR,CAAYK,oBAAvC;AACA,MAAMC,QAAQ,GAAG,IAAIT,KAAK,CAACU,KAAV,CAAgB,yCAAhB,EAA2D,wCAA3D,EAAoGT,mBAApG,EAAyHI,sBAAzH,EAAiJ,MAAjJ,EAAyJE,kBAAzJ,EAA6K,WAA7K,CAAjB;AACAV,MAAM,CAACc,GAAP,CAAW,UAAX,EAAuB,CAACC,GAAD,EAAMC,GAAN,KAAc;AACnCJ,EAAAA,QAAQ,CAACK,oBAAT,CAA8B,UAAUC,KAAV,EAAiBC,UAAjB,EAA+BC,gBAA/B,EAAiDC,OAAjD,EAA0D;AACtF,QAAIH,KAAJ,EAAW;AACTF,MAAAA,GAAG,CAACM,IAAJ,CAASJ,KAAT,EAAgB,GAAhB;AACD,KAFD,MAEO;AACLH,MAAAA,GAAG,CAACQ,OAAJ,CAAYC,iBAAZ,GAAgCL,UAAhC;AACAJ,MAAAA,GAAG,CAACQ,OAAJ,CAAYE,uBAAZ,GAAsCL,gBAAtC;AACA,YAAMM,QAAQ,GAAG;AACvBC,QAAAA,WAAW,EAAG,qDAAoDZ,GAAG,CAACQ,OAAJ,CAAYC,iBAAkB;AADzE,OAAjB;AAGAR,MAAAA,GAAG,CAACM,IAAJ,CAASI,QAAT;AACD;AACF,GAXD;AAYD,CAbD;AAcA1B,MAAM,CAACc,GAAP,CAAW,mBAAX,EAAgCc,SAAhC,EAA2C,CAACb,GAAD,EAAMC,GAAN,KAAc;AACvDJ,EAAAA,QAAQ,CAACiB,mBAAT,CACAd,GAAG,CAACe,KAAJ,CAAUC,WADV,EAEAhB,GAAG,CAACQ,OAAJ,CAAYE,uBAFZ,EAGAV,GAAG,CAACe,KAAJ,CAAUE,cAHV,EAIA,CAACd,KAAD,EAAQe,gBAAR,EAA0BC,sBAA1B,EAAkDb,OAAlD,KAA8D;AAC5D,QAAIH,KAAJ,EAAW;AACTiB,MAAAA,MAAM,CAACjB,KAAP,CAAaA,KAAb;AACAF,MAAAA,GAAG,CAACM,IAAJ,CAASJ,KAAT,EAAgB,GAAhB;AACD,KAHD,MAIK;AACHH,MAAAA,GAAG,CAACQ,OAAJ,CAAYU,gBAAZ,GAA+BA,gBAA/B;AACAlB,MAAAA,GAAG,CAACQ,OAAJ,CAAYW,sBAAZ,GAAqCA,sBAArC;AACA,aAAOlB,GAAG,CAACM,IAAJ,CAAS;AAAEc,QAAAA,OAAO,EAAE;AAAX,OAAT,CAAP;AACD;AACF,GAdD;AAeD,CAhBD;AAiBAC,MAAM,CAACC,OAAP,GAAiBtC,MAAjB",
      "sourceRoot": "C:\\Users\\Codenomad\\Desktop\\boom-advertise\\boom-advertise\\serverapi\\routes\\",
      "sourcesContent": [
        "const express = require('express');\r\nconst router = express.Router();\r\nconst CryptoJS = require(\"crypto-js\");\r\nconst oauth = require('oauth');\r\nconst _twitterConsumerKey = process.env.TWITTER_CONSUMER_KEY;\r\nconst _twitterConsumerSecret = process.env.TWITTER_CONSUMER_SECRET;\r\nconst twitterCallbackUrl = process.env.TWITTER_CALLBACK_URL;\r\nconst consumer = new oauth.OAuth(\"https://twitter.com/oauth/request_token\", \"https://twitter.com/oauth/access_token\",_twitterConsumerKey, _twitterConsumerSecret, \"1.0A\", twitterCallbackUrl, \"HMAC-SHA1\");\r\nrouter.get('/connect', (req, res) => {\r\n  consumer.getOAuthRequestToken(function (error, oauthToken,   oauthTokenSecret, results) {\r\n    if (error) {\r\n      res.send(error, 500);\r\n    } else {\r\n      req.session.oauthRequestToken = oauthToken;\r\n      req.session.oauthRequestTokenSecret = oauthTokenSecret;\r\n      const redirect = { \r\nredirectUrl: `https://twitter.com/oauth/authorize?  oauth_token=${req.session.oauthRequestToken}`\r\n    }\r\n      res.send(redirect);\r\n    }\r\n  });\r\n});\r\nrouter.get('/saveAccessTokens', authCheck, (req, res) => {\r\n  consumer.getOAuthAccessToken(\r\n  req.query.oauth_token,\r\n  req.session.oauthRequestTokenSecret,\r\n  req.query.oauth_verifier,\r\n  (error, oauthAccessToken, oauthAccessTokenSecret, results) => {\r\n    if (error) {\r\n      logger.error(error);\r\n      res.send(error, 500);\r\n    }\r\n    else {\r\n      req.session.oauthAccessToken = oauthAccessToken;\r\n      req.session.oauthAccessTokenSecret = oauthAccessTokenSecret\r\n      return res.send({ message: 'token saved' });\r\n    }\r\n  });\r\n});\r\nmodule.exports = router;"
      ]
    },
    "sourceType": "module",
    "mtime": 1609408188018
  }
}