{
  "{\"sourceRoot\":\"E:\\\\boomadvertisement\\\\serverapi\\\\routes\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"E:\\\\boomadvertisement\\\\serverapi\",\"filename\":\"E:\\\\boomadvertisement\\\\serverapi\\\\routes\\\\promoters.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"E:\\\\boomadvertisement\\\\serverapi\",\"plugins\":[],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "E:\\boomadvertisement\\serverapi\\routes\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "E:\\boomadvertisement\\serverapi",
      "filename": "E:\\boomadvertisement\\serverapi\\routes\\promoters.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "E:\\boomadvertisement\\serverapi",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "E:\\boomadvertisement\\serverapi\\routes\\promoters.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "E:\\boomadvertisement\\serverapi\\routes\\promoters.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "E:\\boomadvertisement\\serverapi\\routes\\",
        "sourceFileName": "promoters.js"
      }
    },
    "ast": null,
    "code": "var express = require('express');\n\nvar router = express.Router();\n\nvar mongoose = require('mongoose');\n\nconst promoter = require('../models/promoters');\n\nconst email = require('../config/email');\n\nconst nodemailer = require('nodemailer');\n\nvar passwordHash = require('password-hash'); //process.env.NODE_TLS_REJECT_UNAUTHORIZED = \"1\";\n// Send Email Function \n\n\nvar sendEmail = function (to, subject, html) {\n  return new Promise(function (resolve, reject) {\n    var transporter = nodemailer.createTransport({\n      service: 'gmail',\n      port: 465,\n      auth: {\n        user: email.email,\n        pass: email.password\n      },\n      tls: {\n        // do not fail on invalid certs\n        rejectUnauthorized: false\n      }\n    });\n    var mailOptions = {\n      from: email.email + ' <http://boomadvertise.com/>',\n      to: to,\n      subject: subject,\n      html: html\n    };\n    transporter.sendMail(mailOptions, function (error, info) {\n      if (error) {\n        reject(error);\n      } else {\n        resolve(1);\n      }\n    });\n  });\n};\n\nrouter.post('/register', function (req, res) {\n  var promoterCreate = new promoter.promoters(req.body.promoter_signup);\n  var datetime = new Date();\n  let pass = passwordHash.generate(req.body.promoter_signup.password);\n  promoterCreate.joindate = datetime;\n  promoterCreate.password = pass;\n  promoter.promoters.findOne({\n    email: req.body.promoter_signup.email\n  }, function (err, promoters) {\n    if (err) res.json({\n      status: \"failure\",\n      statusCode: 100,\n      msg: err\n    });\n\n    if (promoters) {\n      res.json({\n        status: \"failure\",\n        statusCode: 100,\n        msg: \"Email already exists!!\"\n      });\n    } else {\n      promoter.promoters.findOne({\n        name: req.body.promoter_signup.name\n      }, function (err, promoters) {\n        if (err) res.json({\n          status: \"failure\",\n          statusCode: 100,\n          msg: err\n        });\n\n        if (promoters) {\n          res.json({\n            status: \"failure\",\n            statusCode: 100,\n            msg: \"Username already exists!!\"\n          });\n        } else {\n          promoterCreate.save(function (err, promoter) {\n            if (err) res.json({\n              status: \"failure\",\n              statusCode: 100,\n              msg: err\n            });\n            res.json({\n              status: \"success\",\n              statusCode: 200,\n              data: promoter,\n              msg: \"Signup & SignIn successfully!\"\n            });\n          });\n        }\n      });\n    }\n  });\n});\nrouter.post('/singlePromoter', function (req, res) {\n  promoter.promoters.find({\n    _id: req.body.id\n  }, function (err, promoter_data) {\n    if (err) res.json({\n      status: \"failure\",\n      statusCode: 100,\n      error: err\n    });\n    res.json({\n      status: \"success\",\n      statusCode: 200,\n      data: promoter_data\n    });\n  });\n});\nrouter.post('/send_request_quotes', function (req, res) {\n  let html_content = req.body.description;\n  let subject = \"Request Quotes\";\n  let to_email = req.body.email.trim();\n  var a = sendEmail(to_email, subject, html_content);\n  a.then(result => {\n    if (result) {\n      res.json({\n        status: \"success\",\n        statusCode: 100,\n        message: 'Email sent successfully...'\n      });\n    } else {\n      res.json({\n        status: \"failure\",\n        statusCode: 200,\n        message: \"There was some error in youyr request!!!\",\n        data: ''\n      });\n    }\n  }).catch(err => {\n    res.json({\n      status: \"failure\",\n      statusCode: 200,\n      message: \"Could Not Send Email!!!\",\n      data: err\n    });\n  });\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "promoters.js"
      ],
      "names": [
        "express",
        "require",
        "router",
        "Router",
        "mongoose",
        "promoter",
        "email",
        "nodemailer",
        "passwordHash",
        "sendEmail",
        "to",
        "subject",
        "html",
        "Promise",
        "resolve",
        "reject",
        "transporter",
        "createTransport",
        "service",
        "port",
        "auth",
        "user",
        "pass",
        "password",
        "tls",
        "rejectUnauthorized",
        "mailOptions",
        "from",
        "sendMail",
        "error",
        "info",
        "post",
        "req",
        "res",
        "promoterCreate",
        "promoters",
        "body",
        "promoter_signup",
        "datetime",
        "Date",
        "generate",
        "joindate",
        "findOne",
        "err",
        "json",
        "status",
        "statusCode",
        "msg",
        "name",
        "save",
        "data",
        "find",
        "_id",
        "id",
        "promoter_data",
        "html_content",
        "description",
        "to_email",
        "trim",
        "a",
        "then",
        "result",
        "message",
        "catch",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "E:\\boomadvertisement\\serverapi\\routes\\",
      "sourcesContent": [
        "\r\nvar   express       = require('express');\r\nvar   router        = express.Router();\r\nvar   mongoose      = require('mongoose');\r\nconst promoter      = require('../models/promoters');\r\nconst email         = require('../config/email');\r\nconst nodemailer    = require('nodemailer');\r\nvar   passwordHash  = require('password-hash');\r\n\r\n  //process.env.NODE_TLS_REJECT_UNAUTHORIZED = \"1\";\r\n\r\n  // Send Email Function \r\n\r\n  var sendEmail = function(to,subject,html) {\r\n\r\n    \r\n    return new Promise(function(resolve, reject) {\r\n      var transporter = nodemailer.createTransport({\r\n        \r\n        service: 'gmail', \r\n        port:465,\r\n        auth: { \r\n          user: email.email,\r\n          pass: email.password\r\n        } ,\r\n        tls: {\r\n          // do not fail on invalid certs\r\n          rejectUnauthorized: false\r\n        }\r\n      });\r\n    \r\n    var mailOptions = {\r\n      from: email.email+' <http://boomadvertise.com/>',\r\n      to: to,\r\n      subject: subject,\r\n      html: html\r\n    };\r\n\r\n      transporter.sendMail(mailOptions, function(error, info){\r\n      if (error) {\r\n        reject(error);\r\n      } else {\r\n      resolve(1)\r\n      }\r\n    });\r\n\r\n    \r\n  });\r\n\r\n  }\r\n\r\n    router.post('/register', function(req,res) {\r\n          \r\n          var promoterCreate =  new promoter.promoters(req.body.promoter_signup);\r\n\r\n          var datetime = new Date();\r\n          let pass = passwordHash.generate(req.body.promoter_signup.password)\r\n\r\n          promoterCreate.joindate = datetime;\r\n          promoterCreate.password = pass;\r\n          \r\n          promoter.promoters.findOne({email:req.body.promoter_signup.email}, function(err, promoters) {\r\n            if (err)  res.json({status:\"failure\",statusCode:100,msg:err});\r\n            \r\n            if(promoters){\r\n             \r\n              res.json({status:\"failure\",statusCode:100,msg:\"Email already exists!!\"});\r\n            }else{\r\n                promoter.promoters.findOne({name:req.body.promoter_signup.name}, function(err, promoters) {\r\n                if (err)  res.json({status:\"failure\",statusCode:100,msg:err});\r\n            \r\n                if(promoters){\r\n                  \r\n                  res.json({status:\"failure\",statusCode:100,msg:\"Username already exists!!\"});\r\n                }\r\n                else{\r\n                    promoterCreate.save(function (err, promoter) {\r\n                    if (err) res.json({status:\"failure\",statusCode:100,msg:err});\r\n                \r\n                    res.json({status:\"success\",statusCode:200,data:promoter,msg:\"Signup & SignIn successfully!\"});\r\n                  });\r\n                }\r\n              })\r\n            }\r\n          }); \r\n          \r\n        });\r\n\r\n    router.post('/singlePromoter', function(req, res) {\r\n      promoter.promoters.find({_id:req.body.id}, function(err, promoter_data) {\r\n        if (err)  res.json({status:\"failure\",statusCode:100,error:err});\r\n        res.json({status:\"success\",statusCode:200,data:promoter_data});\r\n      });\r\n    });\r\n\r\n    router.post('/send_request_quotes',function(req , res){\r\n\r\n      \r\n      let html_content  = req.body.description;\r\n      let subject       = \"Request Quotes\";\r\n      let to_email      = req.body.email.trim();\r\n      \r\n      var a =  sendEmail(to_email , subject,html_content)\r\n        a.then((result) => { \r\n\r\n          if(result){\r\n          \r\n            res.json({status:\"success\",statusCode:100,message:'Email sent successfully...'});\r\n          } else {\r\n\r\n            res.json({status:\"failure\",statusCode:200,message:\"There was some error in youyr request!!!\",data:''});\r\n          }\r\n\r\n        }).catch((err) => {\r\n          \r\n          res.json({status:\"failure\",statusCode:200,message:\"Could Not Send Email!!!\",data:err});\r\n        });\r\n\r\n     \r\n    });\r\n\r\n    module.exports = router;"
      ]
    },
    "sourceType": "module",
    "mtime": 1615963662853
  },
  "{\"sourceRoot\":\"E:\\\\boomadvertisement\\\\serverapi\\\\models\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"E:\\\\boomadvertisement\\\\serverapi\",\"filename\":\"E:\\\\boomadvertisement\\\\serverapi\\\\models\\\\promoters.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"E:\\\\boomadvertisement\\\\serverapi\",\"plugins\":[],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "E:\\boomadvertisement\\serverapi\\models\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "E:\\boomadvertisement\\serverapi",
      "filename": "E:\\boomadvertisement\\serverapi\\models\\promoters.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "E:\\boomadvertisement\\serverapi",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "E:\\boomadvertisement\\serverapi\\models\\promoters.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "E:\\boomadvertisement\\serverapi\\models\\promoters.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "E:\\boomadvertisement\\serverapi\\models\\",
        "sourceFileName": "promoters.js"
      }
    },
    "ast": null,
    "code": "var mongoose = require('mongoose');\n\nconst Schema = mongoose.Schema;\nconst promotersSchema = new Schema({\n  id: Boolean,\n  // String is shorthand for {type: String}\n  name: String,\n  email: String,\n  password: String,\n  joindate: Date\n});\nconst promoters = mongoose.model('promoters', promotersSchema);\nmodule.exports = {\n  promoters,\n  promotersSchema\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb21vdGVycy5qcyJdLCJuYW1lcyI6WyJtb25nb29zZSIsInJlcXVpcmUiLCJTY2hlbWEiLCJwcm9tb3RlcnNTY2hlbWEiLCJpZCIsIkJvb2xlYW4iLCJuYW1lIiwiU3RyaW5nIiwiZW1haWwiLCJwYXNzd29yZCIsImpvaW5kYXRlIiwiRGF0ZSIsInByb21vdGVycyIsIm1vZGVsIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsSUFBSUEsUUFBUSxHQUFHQyxPQUFPLENBQUMsVUFBRCxDQUF0Qjs7QUFDQSxNQUFNQyxNQUFNLEdBQUdGLFFBQVEsQ0FBQ0UsTUFBeEI7QUFFQSxNQUFNQyxlQUFlLEdBQUcsSUFBSUQsTUFBSixDQUFXO0FBQ2pDRSxFQUFBQSxFQUFFLEVBQUdDLE9BRDRCO0FBQ25CO0FBQ2RDLEVBQUFBLElBQUksRUFBRUMsTUFGMkI7QUFHakNDLEVBQUFBLEtBQUssRUFBSUQsTUFId0I7QUFJakNFLEVBQUFBLFFBQVEsRUFBSUYsTUFKcUI7QUFLakNHLEVBQUFBLFFBQVEsRUFBSUM7QUFMcUIsQ0FBWCxDQUF4QjtBQU9BLE1BQU9DLFNBQVMsR0FBR1osUUFBUSxDQUFDYSxLQUFULENBQWUsV0FBZixFQUE0QlYsZUFBNUIsQ0FBbkI7QUFDQVcsTUFBTSxDQUFDQyxPQUFQLEdBQWlCO0FBQUVILEVBQUFBLFNBQUY7QUFBWVQsRUFBQUE7QUFBWixDQUFqQiIsInNvdXJjZVJvb3QiOiJFOlxcYm9vbWFkdmVydGlzZW1lbnRcXHNlcnZlcmFwaVxcbW9kZWxzXFwiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgbW9uZ29vc2UgPSByZXF1aXJlKCdtb25nb29zZScpO1xyXG5jb25zdCBTY2hlbWEgPSBtb25nb29zZS5TY2hlbWE7XHJcblxyXG5jb25zdCBwcm9tb3RlcnNTY2hlbWEgPSBuZXcgU2NoZW1hKHtcclxuICBpZDogIEJvb2xlYW4sIC8vIFN0cmluZyBpcyBzaG9ydGhhbmQgZm9yIHt0eXBlOiBTdHJpbmd9XHJcbiAgbmFtZTogU3RyaW5nLFxyXG4gIGVtYWlsOiAgIFN0cmluZyxcclxuICBwYXNzd29yZDogICBTdHJpbmcsXHJcbiAgam9pbmRhdGU6ICAgRGF0ZVxyXG59KTtcclxuY29uc3QgIHByb21vdGVycyA9IG1vbmdvb3NlLm1vZGVsKCdwcm9tb3RlcnMnLCBwcm9tb3RlcnNTY2hlbWEpO1xyXG5tb2R1bGUuZXhwb3J0cyA9IHsgcHJvbW90ZXJzLHByb21vdGVyc1NjaGVtYSB9IDsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "promoters.js"
      ],
      "names": [
        "mongoose",
        "require",
        "Schema",
        "promotersSchema",
        "id",
        "Boolean",
        "name",
        "String",
        "email",
        "password",
        "joindate",
        "Date",
        "promoters",
        "model",
        "module",
        "exports"
      ],
      "mappings": "AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAtB;;AACA,MAAMC,MAAM,GAAGF,QAAQ,CAACE,MAAxB;AAEA,MAAMC,eAAe,GAAG,IAAID,MAAJ,CAAW;AACjCE,EAAAA,EAAE,EAAGC,OAD4B;AACnB;AACdC,EAAAA,IAAI,EAAEC,MAF2B;AAGjCC,EAAAA,KAAK,EAAID,MAHwB;AAIjCE,EAAAA,QAAQ,EAAIF,MAJqB;AAKjCG,EAAAA,QAAQ,EAAIC;AALqB,CAAX,CAAxB;AAOA,MAAOC,SAAS,GAAGZ,QAAQ,CAACa,KAAT,CAAe,WAAf,EAA4BV,eAA5B,CAAnB;AACAW,MAAM,CAACC,OAAP,GAAiB;AAAEH,EAAAA,SAAF;AAAYT,EAAAA;AAAZ,CAAjB",
      "sourceRoot": "E:\\boomadvertisement\\serverapi\\models\\",
      "sourcesContent": [
        "var mongoose = require('mongoose');\r\nconst Schema = mongoose.Schema;\r\n\r\nconst promotersSchema = new Schema({\r\n  id:  Boolean, // String is shorthand for {type: String}\r\n  name: String,\r\n  email:   String,\r\n  password:   String,\r\n  joindate:   Date\r\n});\r\nconst  promoters = mongoose.model('promoters', promotersSchema);\r\nmodule.exports = { promoters,promotersSchema } ;"
      ]
    },
    "sourceType": "module",
    "mtime": 1608315962000
  },
  "{\"sourceRoot\":\"E:\\\\boomadvertisement\\\\serverapi\\\\config\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"E:\\\\boomadvertisement\\\\serverapi\",\"filename\":\"E:\\\\boomadvertisement\\\\serverapi\\\\config\\\\email.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"E:\\\\boomadvertisement\\\\serverapi\",\"plugins\":[],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "E:\\boomadvertisement\\serverapi\\config\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "E:\\boomadvertisement\\serverapi",
      "filename": "E:\\boomadvertisement\\serverapi\\config\\email.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "E:\\boomadvertisement\\serverapi",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "E:\\boomadvertisement\\serverapi\\config\\email.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "E:\\boomadvertisement\\serverapi\\config\\email.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "E:\\boomadvertisement\\serverapi\\config\\",
        "sourceFileName": "email.js"
      }
    },
    "ast": null,
    "code": "var config = {}; // config.email = 'deligoch@gmail.com'\n// config.password= 'deey5old4rhus_GEEN'\n\nconfig.email = 'vsingh@codenomad.net';\nconfig.password = '1502252504';\nconfig.adminemail = 'deligoch@gmail.com';\nconfig.url = 'http://boomadvertise.com/';\nconfig.adminurl = 'http://boomadvertise.com/';\nmodule.exports = config; // MAIL_DRIVER=smtp\n// MAIL_HOST=email-smtp.ap-south-1.amazonaws.com\n// MAIL_PORT=587\n// MAIL_ENCRYPTION=tls\n// MAIL_USERNAME=AKIAREDTCB4G4N4SJUKF\n// MAIL_PASSWORD=BFz7nWPoZc0jAYpUr5FkCeZsYpVYyTwjnuILc0vE3EaP\n// host : smtp.gmail.com\n// email port :587\n// email : deligoch@gmail.com\n// MAIL_ENCRYPTION : tls\n// email_username : deligoch@gmail.com\n// email pass : ifwmxlltkurvvctb\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImVtYWlsLmpzIl0sIm5hbWVzIjpbImNvbmZpZyIsImVtYWlsIiwicGFzc3dvcmQiLCJhZG1pbmVtYWlsIiwidXJsIiwiYWRtaW51cmwiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQSxJQUFJQSxNQUFNLEdBQUcsRUFBYixDLENBR0E7QUFDQTs7QUFDQUEsTUFBTSxDQUFDQyxLQUFQLEdBQWUsc0JBQWY7QUFDQUQsTUFBTSxDQUFDRSxRQUFQLEdBQWlCLFlBQWpCO0FBRUFGLE1BQU0sQ0FBQ0csVUFBUCxHQUFrQixvQkFBbEI7QUFDQUgsTUFBTSxDQUFDSSxHQUFQLEdBQVcsMkJBQVg7QUFDQUosTUFBTSxDQUFDSyxRQUFQLEdBQWdCLDJCQUFoQjtBQUNBQyxNQUFNLENBQUNDLE9BQVAsR0FBaUJQLE1BQWpCLEMsQ0FHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiRTpcXGJvb21hZHZlcnRpc2VtZW50XFxzZXJ2ZXJhcGlcXGNvbmZpZ1xcIiwic291cmNlc0NvbnRlbnQiOlsidmFyIGNvbmZpZyA9IHt9O1xyXG5cclxuXHJcbi8vIGNvbmZpZy5lbWFpbCA9ICdkZWxpZ29jaEBnbWFpbC5jb20nXHJcbi8vIGNvbmZpZy5wYXNzd29yZD0gJ2RlZXk1b2xkNHJodXNfR0VFTidcclxuY29uZmlnLmVtYWlsID0gJ3ZzaW5naEBjb2Rlbm9tYWQubmV0JztcclxuY29uZmlnLnBhc3N3b3JkPSAnMTUwMjI1MjUwNCc7XHJcblxyXG5jb25maWcuYWRtaW5lbWFpbD0nZGVsaWdvY2hAZ21haWwuY29tJztcclxuY29uZmlnLnVybD0naHR0cDovL2Jvb21hZHZlcnRpc2UuY29tLyc7XHJcbmNvbmZpZy5hZG1pbnVybD0naHR0cDovL2Jvb21hZHZlcnRpc2UuY29tLyc7XHJcbm1vZHVsZS5leHBvcnRzID0gY29uZmlnO1xyXG5cclxuXHJcbi8vIE1BSUxfRFJJVkVSPXNtdHBcclxuLy8gTUFJTF9IT1NUPWVtYWlsLXNtdHAuYXAtc291dGgtMS5hbWF6b25hd3MuY29tXHJcbi8vIE1BSUxfUE9SVD01ODdcclxuLy8gTUFJTF9FTkNSWVBUSU9OPXRsc1xyXG4vLyBNQUlMX1VTRVJOQU1FPUFLSUFSRURUQ0I0RzRONFNKVUtGXHJcbi8vIE1BSUxfUEFTU1dPUkQ9QkZ6N25XUG9aYzBqQVlwVXI1RmtDZVpzWXBWWXlUd2pudUlMYzB2RTNFYVBcclxuLy8gaG9zdCA6IHNtdHAuZ21haWwuY29tXHJcbi8vIGVtYWlsIHBvcnQgOjU4N1xyXG4vLyBlbWFpbCA6IGRlbGlnb2NoQGdtYWlsLmNvbVxyXG4vLyBNQUlMX0VOQ1JZUFRJT04gOiB0bHNcclxuLy8gZW1haWxfdXNlcm5hbWUgOiBkZWxpZ29jaEBnbWFpbC5jb21cclxuLy8gZW1haWwgcGFzcyA6IGlmd214bGx0a3VydnZjdGJcclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "email.js"
      ],
      "names": [
        "config",
        "email",
        "password",
        "adminemail",
        "url",
        "adminurl",
        "module",
        "exports"
      ],
      "mappings": "AAAA,IAAIA,MAAM,GAAG,EAAb,C,CAGA;AACA;;AACAA,MAAM,CAACC,KAAP,GAAe,sBAAf;AACAD,MAAM,CAACE,QAAP,GAAiB,YAAjB;AAEAF,MAAM,CAACG,UAAP,GAAkB,oBAAlB;AACAH,MAAM,CAACI,GAAP,GAAW,2BAAX;AACAJ,MAAM,CAACK,QAAP,GAAgB,2BAAhB;AACAC,MAAM,CAACC,OAAP,GAAiBP,MAAjB,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA",
      "sourceRoot": "E:\\boomadvertisement\\serverapi\\config\\",
      "sourcesContent": [
        "var config = {};\r\n\r\n\r\n// config.email = 'deligoch@gmail.com'\r\n// config.password= 'deey5old4rhus_GEEN'\r\nconfig.email = 'vsingh@codenomad.net';\r\nconfig.password= '1502252504';\r\n\r\nconfig.adminemail='deligoch@gmail.com';\r\nconfig.url='http://boomadvertise.com/';\r\nconfig.adminurl='http://boomadvertise.com/';\r\nmodule.exports = config;\r\n\r\n\r\n// MAIL_DRIVER=smtp\r\n// MAIL_HOST=email-smtp.ap-south-1.amazonaws.com\r\n// MAIL_PORT=587\r\n// MAIL_ENCRYPTION=tls\r\n// MAIL_USERNAME=AKIAREDTCB4G4N4SJUKF\r\n// MAIL_PASSWORD=BFz7nWPoZc0jAYpUr5FkCeZsYpVYyTwjnuILc0vE3EaP\r\n// host : smtp.gmail.com\r\n// email port :587\r\n// email : deligoch@gmail.com\r\n// MAIL_ENCRYPTION : tls\r\n// email_username : deligoch@gmail.com\r\n// email pass : ifwmxlltkurvvctb\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1619587531098
  },
  "{\"sourceRoot\":\"E:\\\\boomadvertisement\\\\serverapi\\\\routes\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"E:\\\\boomadvertisement\\\\serverapi\",\"filename\":\"E:\\\\boomadvertisement\\\\serverapi\\\\routes\\\\workers.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"E:\\\\boomadvertisement\\\\serverapi\",\"plugins\":[],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "E:\\boomadvertisement\\serverapi\\routes\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "E:\\boomadvertisement\\serverapi",
      "filename": "E:\\boomadvertisement\\serverapi\\routes\\workers.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "E:\\boomadvertisement\\serverapi",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "E:\\boomadvertisement\\serverapi\\routes\\workers.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "E:\\boomadvertisement\\serverapi\\routes\\workers.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "E:\\boomadvertisement\\serverapi\\routes\\",
        "sourceFileName": "workers.js"
      }
    },
    "ast": null,
    "code": "var express = require('express');\n\nvar router = express.Router();\n\nvar mongoose = require('mongoose');\n\nconst worker = require('../models/workers');\n\nconst email = require('../config/email');\n\nconst nodemailer = require('nodemailer');\n\nvar passwordHash = require('password-hash'); //process.env.NODE_TLS_REJECT_UNAUTHORIZED = \"1\";\n\n\nvar sendEmail = function (to, subject, html) {\n  return new Promise(function (resolve, reject) {\n    var transporter = nodemailer.createTransport({\n      service: 'gmail',\n      port: 465,\n      auth: {\n        user: email.email,\n        pass: email.password\n      },\n      tls: {\n        // do not fail on invalid certs\n        rejectUnauthorized: false\n      }\n    });\n    var mailOptions = {\n      from: 'faanmanagement@gmail.com  <http://boomadvertise.com/>',\n      to: to,\n      subject: subject,\n      html: html\n    };\n    transporter.sendMail(mailOptions, function (error, info) {\n      if (error) {\n        reject(error);\n      } else {\n        resolve(1);\n      }\n    });\n  });\n};\n\nrouter.post('/register', function (req, res) {\n  var coupon_code = Math.random().toString(36).slice(2);\n  var workerCreate = new worker.workers(req.body.worker_signup);\n  var datetime = new Date();\n  let pass = passwordHash.generate(req.body.worker_signup.password);\n  workerCreate.joindate = datetime;\n  workerCreate.password = pass;\n  workerCreate.coupon_code = coupon_code;\n  worker.workers.findOne({\n    email: req.body.worker_signup.email\n  }, function (err, workers) {\n    if (err) res.json({\n      status: \"failure\",\n      statusCode: 100,\n      msg: err\n    });\n\n    if (workers) {\n      res.json({\n        status: \"failure\",\n        statusCode: 100,\n        msg: \"Email already exists!!\"\n      });\n    } else {\n      worker.workers.findOne({\n        name: req.body.worker_signup.name\n      }, function (err, workers) {\n        if (err) res.json({\n          status: \"failure\",\n          statusCode: 100,\n          msg: err\n        });\n\n        if (workers) {\n          res.json({\n            status: \"failure\",\n            statusCode: 100,\n            msg: \"Username already exists!!\"\n          });\n        } else {\n          workerCreate.save(function (err, worker) {\n            sendEmail('vsingh@codenomad.net', \"my subject\", \"Your login account!\", \"You have been added as a Worker on <b>http://boomadvertise.com/</b><br> Here are your login credentials along with other details. <br> Username: \" + req.body.worker_signup.name + \"<br> Email: \" + req.body.worker_signup.email + \"<br> Password: \" + req.body.worker_signup.password + \" Promo code: fjhdgggdffg <br> Sharaeble Urls with others : http://boomadvertise.com/\" + worker['_id']);\n            if (err) res.json({\n              status: \"failure\",\n              statusCode: 100,\n              msg: error\n            });\n            res.json({\n              status: \"success\",\n              statusCode: 200,\n              data: worker,\n              msg: \"Worker added successfully and an email has been sent to the worker.\"\n            });\n          });\n        }\n      });\n    }\n  });\n});\nrouter.post('/email', function (req, res) {\n  /******Send email***** */\n  var a = sendEmail('vsingh@codenomad.net', \"Your login account!\", 'You have been added as a Worker on <b>http://boomadvertise.com/</b><br> Here are your login credentials along with other details. <br> Promo code: fjhdgggdffg <br> Sharaeble Urls with others : http://boomadvertise.com/');\n  a.then(result => {\n    if (result) {\n      res.json({\n        status: \"success\",\n        statusCode: 200,\n        data: 'hii sent email...'\n      });\n    } else {\n      res.json({\n        status: \"failure\",\n        statusCode: 100,\n        message: \"There was some error in youyr request!!!\",\n        data: []\n      });\n    }\n  }).catch(err => {\n    res.json({\n      status: \"failure\",\n      statusCode: 100,\n      message: \"Could Not Send Email!!!\",\n      data: err\n    });\n  });\n  /******Send email end***** */\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "workers.js"
      ],
      "names": [
        "express",
        "require",
        "router",
        "Router",
        "mongoose",
        "worker",
        "email",
        "nodemailer",
        "passwordHash",
        "sendEmail",
        "to",
        "subject",
        "html",
        "Promise",
        "resolve",
        "reject",
        "transporter",
        "createTransport",
        "service",
        "port",
        "auth",
        "user",
        "pass",
        "password",
        "tls",
        "rejectUnauthorized",
        "mailOptions",
        "from",
        "sendMail",
        "error",
        "info",
        "post",
        "req",
        "res",
        "coupon_code",
        "Math",
        "random",
        "toString",
        "slice",
        "workerCreate",
        "workers",
        "body",
        "worker_signup",
        "datetime",
        "Date",
        "generate",
        "joindate",
        "findOne",
        "err",
        "json",
        "status",
        "statusCode",
        "msg",
        "name",
        "save",
        "data",
        "a",
        "then",
        "result",
        "message",
        "catch",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "E:\\boomadvertisement\\serverapi\\routes\\",
      "sourcesContent": [
        "\r\nvar express = require('express');\r\nvar router = express.Router();\r\nvar mongoose = require('mongoose');\r\nconst worker = require('../models/workers');\r\nconst email = require('../config/email');\r\nconst nodemailer = require('nodemailer');\r\nvar passwordHash = require('password-hash');\r\n\r\n//process.env.NODE_TLS_REJECT_UNAUTHORIZED = \"1\";\r\n\r\nvar sendEmail = function(to,subject,html) {\r\n  return new Promise(function(resolve, reject) {\r\n    var transporter = nodemailer.createTransport({\r\n        \r\n      service: 'gmail', \r\n      port:465,\r\n      auth: { \r\n        user: email.email,\r\n        pass: email.password\r\n      } ,\r\n      tls: {\r\n        // do not fail on invalid certs\r\n        rejectUnauthorized: false\r\n      }\r\n    });\r\n  \r\n  var mailOptions = {\r\n    from: 'faanmanagement@gmail.com  <http://boomadvertise.com/>',\r\n    to: to,\r\n    subject: subject,\r\n    html: html\r\n  };\r\n\r\n    transporter.sendMail(mailOptions, function(error, info){\r\n    if (error) {\r\n      reject(error);\r\n    } else {\r\n     resolve(1)\r\n    }\r\n  });\r\n\r\n  \r\n});\r\n\r\n}\r\n\r\n\r\nrouter.post('/register', function(req,res) {\r\n  var coupon_code  = Math.random().toString(36).slice(2)\r\n\r\n      var workerCreate =  new worker.workers(req.body.worker_signup);\r\n\r\n      var datetime = new Date();\r\n      let pass = passwordHash.generate(req.body.worker_signup.password)\r\n\r\n      workerCreate.joindate = datetime\r\n      workerCreate.password = pass\r\n      workerCreate.coupon_code = coupon_code\r\n      \r\n      worker.workers.findOne({email:req.body.worker_signup.email}, function(err, workers) {\r\n        if (err)  res.json({status:\"failure\",statusCode:100,msg:err});\r\n        \r\n        if(workers){\r\n          res.json({status:\"failure\",statusCode:100,msg:\"Email already exists!!\"});\r\n        }else{\r\n            worker.workers.findOne({name:req.body.worker_signup.name}, function(err, workers) {\r\n            if (err)  res.json({status:\"failure\",statusCode:100,msg:err});\r\n        \r\n            if(workers){\r\n              \r\n              res.json({status:\"failure\",statusCode:100,msg:\"Username already exists!!\"});\r\n            }\r\n            else{\r\n                workerCreate.save(function (err, worker) {\r\n                  sendEmail('vsingh@codenomad.net',\"my subject\",\r\n                     \"Your login account!\",\"You have been added as a Worker on <b>http://boomadvertise.com/</b><br> Here are your login credentials along with other details. <br> Username: \" + req.body.worker_signup.name + \"<br> Email: \" +req.body.worker_signup.email +\"<br> Password: \" + req.body.worker_signup.password +\" Promo code: fjhdgggdffg <br> Sharaeble Urls with others : http://boomadvertise.com/\"+worker['_id']);\r\n                  if (err) res.json({status:\"failure\",statusCode:100,msg:error});\r\n                  res.json({status:\"success\",statusCode:200,data:worker,msg:\"Worker added successfully and an email has been sent to the worker.\"});\r\n                \r\n              });\r\n            }\r\n          })\r\n        }\r\n      }); \r\n      \r\n    });\r\n\r\n    \r\n    router.post('/email', function(req,res) { \r\n      /******Send email***** */\r\n     \r\n      \r\n      var a =  sendEmail('vsingh@codenomad.net',\r\n        \"Your login account!\",\r\n        'You have been added as a Worker on <b>http://boomadvertise.com/</b><br> Here are your login credentials along with other details. <br> Promo code: fjhdgggdffg <br> Sharaeble Urls with others : http://boomadvertise.com/')\r\n        a.then((result) => { \r\n       if(result){\r\n        res.json({status:\"success\",statusCode:200,data:'hii sent email...'});\r\n       }\r\n       else{\r\n        res.json({status:\"failure\",statusCode:100,message:\"There was some error in youyr request!!!\",data:[]});\r\n       }\r\n        }).catch((err) => {\r\n          res.json({status:\"failure\",statusCode:100,message:\"Could Not Send Email!!!\",data:err});\r\n        });\r\n     /******Send email end***** */\r\n      });\r\n\r\n\r\n\r\n\r\n    \r\n    \r\n    module.exports = router;\r\n\r\n\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1614846629700
  },
  "{\"sourceRoot\":\"E:\\\\boomadvertisement\\\\serverapi\\\\models\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"E:\\\\boomadvertisement\\\\serverapi\",\"filename\":\"E:\\\\boomadvertisement\\\\serverapi\\\\models\\\\workers.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"E:\\\\boomadvertisement\\\\serverapi\",\"plugins\":[],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "E:\\boomadvertisement\\serverapi\\models\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "E:\\boomadvertisement\\serverapi",
      "filename": "E:\\boomadvertisement\\serverapi\\models\\workers.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "E:\\boomadvertisement\\serverapi",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "E:\\boomadvertisement\\serverapi\\models\\workers.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "E:\\boomadvertisement\\serverapi\\models\\workers.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "E:\\boomadvertisement\\serverapi\\models\\",
        "sourceFileName": "workers.js"
      }
    },
    "ast": null,
    "code": "var mongoose = require('mongoose');\n\nconst Schema = mongoose.Schema;\nconst workersSchema = new Schema({\n  id: Boolean,\n  // String is shorthand for {type: String}\n  name: String,\n  email: String,\n  password: String,\n  coupon_code: String,\n  joindate: Date\n});\nconst workers = mongoose.model('workers', workersSchema);\nmodule.exports = {\n  workers,\n  workersSchema\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndvcmtlcnMuanMiXSwibmFtZXMiOlsibW9uZ29vc2UiLCJyZXF1aXJlIiwiU2NoZW1hIiwid29ya2Vyc1NjaGVtYSIsImlkIiwiQm9vbGVhbiIsIm5hbWUiLCJTdHJpbmciLCJlbWFpbCIsInBhc3N3b3JkIiwiY291cG9uX2NvZGUiLCJqb2luZGF0ZSIsIkRhdGUiLCJ3b3JrZXJzIiwibW9kZWwiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQSxJQUFJQSxRQUFRLEdBQUdDLE9BQU8sQ0FBQyxVQUFELENBQXRCOztBQUNBLE1BQU1DLE1BQU0sR0FBR0YsUUFBUSxDQUFDRSxNQUF4QjtBQUVBLE1BQU1DLGFBQWEsR0FBRyxJQUFJRCxNQUFKLENBQVc7QUFDL0JFLEVBQUFBLEVBQUUsRUFBR0MsT0FEMEI7QUFDakI7QUFDZEMsRUFBQUEsSUFBSSxFQUFFQyxNQUZ5QjtBQUcvQkMsRUFBQUEsS0FBSyxFQUFJRCxNQUhzQjtBQUkvQkUsRUFBQUEsUUFBUSxFQUFJRixNQUptQjtBQUsvQkcsRUFBQUEsV0FBVyxFQUFJSCxNQUxnQjtBQU0vQkksRUFBQUEsUUFBUSxFQUFJQztBQU5tQixDQUFYLENBQXRCO0FBUUEsTUFBTUMsT0FBTyxHQUFHYixRQUFRLENBQUNjLEtBQVQsQ0FBZSxTQUFmLEVBQTBCWCxhQUExQixDQUFoQjtBQUNBWSxNQUFNLENBQUNDLE9BQVAsR0FBaUI7QUFBRUgsRUFBQUEsT0FBRjtBQUFVVixFQUFBQTtBQUFWLENBQWpCIiwic291cmNlUm9vdCI6IkU6XFxib29tYWR2ZXJ0aXNlbWVudFxcc2VydmVyYXBpXFxtb2RlbHNcXCIsInNvdXJjZXNDb250ZW50IjpbInZhciBtb25nb29zZSA9IHJlcXVpcmUoJ21vbmdvb3NlJyk7XHJcbmNvbnN0IFNjaGVtYSA9IG1vbmdvb3NlLlNjaGVtYTtcclxuXHJcbmNvbnN0IHdvcmtlcnNTY2hlbWEgPSBuZXcgU2NoZW1hKHtcclxuICBpZDogIEJvb2xlYW4sIC8vIFN0cmluZyBpcyBzaG9ydGhhbmQgZm9yIHt0eXBlOiBTdHJpbmd9XHJcbiAgbmFtZTogU3RyaW5nLFxyXG4gIGVtYWlsOiAgIFN0cmluZyxcclxuICBwYXNzd29yZDogICBTdHJpbmcsXHJcbiAgY291cG9uX2NvZGU6ICAgU3RyaW5nLFxyXG4gIGpvaW5kYXRlOiAgIERhdGVcclxufSk7XHJcbmNvbnN0IHdvcmtlcnMgPSBtb25nb29zZS5tb2RlbCgnd29ya2VycycsIHdvcmtlcnNTY2hlbWEpO1xyXG5tb2R1bGUuZXhwb3J0cyA9IHsgd29ya2Vycyx3b3JrZXJzU2NoZW1hIH0gOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "workers.js"
      ],
      "names": [
        "mongoose",
        "require",
        "Schema",
        "workersSchema",
        "id",
        "Boolean",
        "name",
        "String",
        "email",
        "password",
        "coupon_code",
        "joindate",
        "Date",
        "workers",
        "model",
        "module",
        "exports"
      ],
      "mappings": "AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAtB;;AACA,MAAMC,MAAM,GAAGF,QAAQ,CAACE,MAAxB;AAEA,MAAMC,aAAa,GAAG,IAAID,MAAJ,CAAW;AAC/BE,EAAAA,EAAE,EAAGC,OAD0B;AACjB;AACdC,EAAAA,IAAI,EAAEC,MAFyB;AAG/BC,EAAAA,KAAK,EAAID,MAHsB;AAI/BE,EAAAA,QAAQ,EAAIF,MAJmB;AAK/BG,EAAAA,WAAW,EAAIH,MALgB;AAM/BI,EAAAA,QAAQ,EAAIC;AANmB,CAAX,CAAtB;AAQA,MAAMC,OAAO,GAAGb,QAAQ,CAACc,KAAT,CAAe,SAAf,EAA0BX,aAA1B,CAAhB;AACAY,MAAM,CAACC,OAAP,GAAiB;AAAEH,EAAAA,OAAF;AAAUV,EAAAA;AAAV,CAAjB",
      "sourceRoot": "E:\\boomadvertisement\\serverapi\\models\\",
      "sourcesContent": [
        "var mongoose = require('mongoose');\r\nconst Schema = mongoose.Schema;\r\n\r\nconst workersSchema = new Schema({\r\n  id:  Boolean, // String is shorthand for {type: String}\r\n  name: String,\r\n  email:   String,\r\n  password:   String,\r\n  coupon_code:   String,\r\n  joindate:   Date\r\n});\r\nconst workers = mongoose.model('workers', workersSchema);\r\nmodule.exports = { workers,workersSchema } ;"
      ]
    },
    "sourceType": "module",
    "mtime": 1608803440000
  },
  "{\"sourceRoot\":\"E:\\\\boomadvertisement\\\\serverapi\\\\routes\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"E:\\\\boomadvertisement\\\\serverapi\",\"filename\":\"E:\\\\boomadvertisement\\\\serverapi\\\\routes\\\\influencers.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"E:\\\\boomadvertisement\\\\serverapi\",\"plugins\":[],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "E:\\boomadvertisement\\serverapi\\routes\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "E:\\boomadvertisement\\serverapi",
      "filename": "E:\\boomadvertisement\\serverapi\\routes\\influencers.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "E:\\boomadvertisement\\serverapi",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "E:\\boomadvertisement\\serverapi\\routes\\influencers.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "E:\\boomadvertisement\\serverapi\\routes\\influencers.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "E:\\boomadvertisement\\serverapi\\routes\\",
        "sourceFileName": "influencers.js"
      }
    },
    "ast": null,
    "code": "var express = require('express');\n\nvar router = express.Router();\n\nvar mongoose = require('mongoose');\n\nconst influencer = require('../models/influencers');\n\nconst influencers_data = require('../models/influencers_data');\n\nconst influencer_posts = require('../models/influencers_posts');\n\nconst checkout = require('../models/checkout');\n\nconst account_data = require('../models/account_data');\n\nvar passwordHash = require('password-hash');\n\nconst {\n  ObjectId\n} = require('mongodb');\n\nconst multer = require('multer');\n\nvar fileExtension = require('file-extension');\n\nvar fs = require('fs');\n\nconst path = require('path');\n\nconst stripe_detail = require('../config/stripe');\n\nconst account_id = stripe_detail.account_id; // get it from stripe's account profile info \n\nvar Publishable_Key = stripe_detail.Publishable_Key;\nvar Secret_Key = stripe_detail.Secret_Key;\n\nconst stripe = require('stripe')(Secret_Key); //process.env.NODE_TLS_REJECT_UNAUTHORIZED = \"1\";\n\n\nvar storage = multer.diskStorage({\n  // Setting directory on disk to save uploaded files\n  destination: function (req, file, cb) {\n    //cb(null, './uploads')\n    cb(null, path.join(__dirname, '../uploads'));\n  },\n  // Setting name of file saved\n  filename: function (req, file, cb) {\n    cb(null, file.fieldname + '-' + Date.now() + '.' + fileExtension(file.originalname));\n  }\n});\nvar upload = multer({\n  storage: storage,\n  limits: {\n    fileSize: 200000000 // Setting Image Size Limit to 2MBs\n\n  },\n\n  fileFilter(req, file, cb) {\n    // if (!file.originalname.match(/\\.(jpg|jpeg|png)$/)) {\n    //     //Error \n    //     cb(new Error('Please upload JPG and PNG images only!'))\n    // }\n    //Success \n    cb(undefined, true);\n  }\n\n});\nrouter.post('/register', async function (req, res) {\n  var influencerCreate = new influencer.influencers(req.body.influencer_signup);\n  var influencerData = new influencers_data.influencers_data(req.body.influencer_signup);\n  var datetime = new Date();\n  let pass = passwordHash.generate(req.body.influencer_signup.password);\n  influencerCreate.joindate = datetime;\n  influencerCreate.password = pass;\n  influencerCreate.tiktok = req.body.influencer_signup.tiktok;\n  influencerCreate.instagram = req.body.influencer_signup.insta;\n  influencerCreate.facebook = req.body.influencer_signup.fb;\n  influencerCreate.twitter = req.body.influencer_signup.twitter;\n  influencerData.twitterfollowers = req.body.influencer_signup.twitter_followers;\n  influencerData.tiktokfollowers = req.body.influencer_signup.tiktok_followers;\n  influencerData.facebookfollowers = req.body.influencer_signup.fb_followers;\n  influencerData.instagramfollowers = req.body.influencer_signup.insta_followers;\n  influencerData.tiktok_post_price = 0;\n  influencerData.tiktok_story_price = 0;\n  influencerData.facebook_post_price = 0;\n  influencerData.facebook_friend_price = 0;\n  influencerData.facebook_comment_price = 0;\n  influencerData.facebook_like_price = 0;\n  influencerData.twitter_tweet_price = 0;\n  influencerData.twitter_retweet_price = 0;\n  influencerData.twitter_comment_price = 0;\n  influencerData.twitter_like_price = 0;\n  influencerData.twitter_follow_price = 0;\n  influencerData.instagram_post_price = 0;\n  influencerData.instagram_story_price = 0;\n  influencerData.instagram_comment_price = 0;\n  influencerData.instagram_like_price = 0;\n  influencerData.instagram_follow_price = 0;\n  influencer.influencers.findOne({\n    email: req.body.influencer_signup.email\n  }, function (err, influencers) {\n    if (err) res.json({\n      status: \"failure\",\n      statusCode: 100,\n      msg: err\n    });\n\n    if (influencers) {\n      res.json({\n        status: \"failure\",\n        statusCode: 100,\n        msg: \"Email already exists!!\"\n      });\n    } else {\n      influencer.influencers.findOne({\n        name: req.body.influencer_signup.name\n      }, function (err, influencers) {\n        if (err) res.json({\n          status: \"failure\",\n          statusCode: 100,\n          msg: err\n        });\n\n        if (influencers) {\n          res.json({\n            status: \"failure\",\n            statusCode: 100,\n            msg: \"Username already exists!!\"\n          });\n        } else {\n          influencerCreate.save(function (influencer_res_err, influencer_res) {\n            influencerData.influencerid = influencer_res._id;\n            influencerData.influencermatchid = influencer_res._id;\n            influencerData.save(function (influencer_data_err, influencer_data_res) {\n              if (influencer_res_err) res.json({\n                status: 'failure',\n                statusCode: 100,\n                msg: influencer_res_err\n              });\n              res.json({\n                status: \"success\",\n                statusCode: 200,\n                data: influencer_res,\n                msg: \"Signup & SignIn successfully!\"\n              });\n            });\n          });\n        }\n      });\n    }\n  });\n});\nrouter.get('/test', function (req, res) {\n  res.json(\"it worked vijay\");\n});\nrouter.get('/getInfluencers', function (req, res, next) {\n  influencers_data.influencers_data.aggregate([{\n    \"$lookup\": {\n      \"from\": \"influencers\",\n      \"localField\": \"influencerid\",\n      \"foreignField\": \"_id\",\n      \"as\": \"vals\"\n    }\n  }], function (err, res_data) {\n    if (err) res.json({\n      status: \"failure\",\n      statusCode: 100,\n      error: err\n    });\n\n    for (var i = 0; i < res_data.length; i++) {\n      res_data[i].tiktok_story_price = res_data[i].tiktok_story_price ? res_data[i].tiktok_story_price : 0;\n      res_data[i].tiktok_post_price = res_data[i].tiktok_post_price ? res_data[i].tiktok_post_price : 0;\n      res_data[i].twitter_tweet_price = res_data[i].twitter_tweet_price ? res_data[i].twitter_tweet_price : 0;\n      res_data[i].twitter_retweet_price = res_data[i].twitter_retweet_price ? res_data[i].twitter_retweet_price : 0;\n      res_data[i].twitter_like_price = res_data[i].twitter_like_price ? res_data[i].twitter_like_price : 0;\n      res_data[i].twitter_follow_price = res_data[i].twitter_follow_price ? res_data[i].twitter_follow_price : 0;\n      res_data[i].twitter_comment_price = res_data[i].twitter_comment_price ? res_data[i].twitter_comment_price : 0;\n      res_data[i].instagram_post_price = res_data[i].instagram_post_price ? res_data[i].instagram_post_price : 0;\n      res_data[i].instagram_story_price = res_data[i].instagram_story_price ? res_data[i].instagram_story_price : 0;\n      res_data[i].instagram_comment_price = res_data[i].instagram_comment_price ? res_data[i].instagram_comment_price : 0;\n      res_data[i].instagram_follow_price = res_data[i].instagram_follow_price ? res_data[i].instagram_follow_price : 0;\n      res_data[i].instagram_like_price = res_data[i].instagram_like_price ? res_data[i].instagram_like_price : 0;\n      res_data[i].facebook_post_price = res_data[i].facebook_post_price ? res_data[i].facebook_post_price : 0;\n      res_data[i].facebook_like_price = res_data[i].facebook_like_price ? res_data[i].facebook_like_price : 0;\n      res_data[i].facebook_friend_price = res_data[i].facebook_friend_price ? res_data[i].facebook_friend_price : 0;\n      res_data[i].facebook_comment_price = res_data[i].facebook_comment_price ? res_data[i].facebook_comment_price : 0;\n    }\n\n    res.json({\n      status: \"success\",\n      statusCode: 200,\n      data: res_data\n    });\n  });\n});\n/**** Trying to get all influencers data as first table influencers ***/\n// router.get('/getInfluencers1', function(req, res, next) {\n//       influencer.influencers.aggregate([\n//         { \"$lookup\": {\n//                 \"from\": \"influencers_data\",\n//                 \"localField\": \"_id\",\n//                 \"foreignField\": \"influencerid\",\n//                 \"as\": \"vals\"\n//               }\n//         }\n//         ], function(err, res_data) {\n//             if (err)  res.json({status:\"failure\",statusCode:100,error:err});\n//               res.json({status:\"success\",statusCode:200,data:res_data});\n//             })\n// });\n\nrouter.get('/singleInfluencer', function (req, res) {\n  var user_id = req.query.user_id;\n  influencers_data.influencers_data.aggregate([{\n    \"$lookup\": {\n      \"from\": \"influencers\",\n      \"localField\": \"influencerid\",\n      \"foreignField\": \"_id\",\n      \"as\": \"vals\"\n    }\n  }, {\n    \"$match\": {\n      \"influencermatchid\": user_id\n    }\n  }], function (err, influencer_data) {\n    if (err) res.json({\n      status: \"failure\",\n      statusCode: 100,\n      error: err\n    });\n    var return_data = {\n      price_data: {\n        tiktok: {\n          post_price: 0,\n          story_price: 0\n        },\n        instagram: {\n          post_price: 0,\n          story_price: 0,\n          comment_price: 10,\n          like_price: 20,\n          follow_price: 30\n        },\n        facebook: {\n          post_price: 0,\n          friend_price: 40,\n          comment_price: 50,\n          like_price: 60\n        },\n        twitter: {\n          tweet_price: 70,\n          retweet_price: 80,\n          comment_price: 90,\n          like_price: 70,\n          follow_price: 80\n        }\n      },\n      profile_data: \"\",\n      followers: 0,\n      posts: []\n    };\n\n    if (influencer_data[0]) {\n      return_data.price_data.tiktok.post_price = influencer_data[0].tiktok_post_price ? influencer_data[0].tiktok_post_price : 0;\n      return_data.price_data.tiktok.story_price = influencer_data[0].tiktok_story_price ? influencer_data[0].tiktok_story_price : 0;\n      return_data.price_data.facebook.post_price = influencer_data[0].facebook_post_price ? influencer_data[0].facebook_post_price : 0;\n      return_data.price_data.facebook.friend_price = influencer_data[0].facebook_friend_price ? influencer_data[0].facebook_friend_price : 0;\n      return_data.price_data.facebook.comment_price = influencer_data[0].facebook_comment_price ? influencer_data[0].facebook_comment_price : 0;\n      return_data.price_data.facebook.like_price = influencer_data[0].facebook_like_price ? influencer_data[0].facebook_like_price : 0;\n      return_data.price_data.instagram.post_price = influencer_data[0].instagram_post_price ? influencer_data[0].instagram_post_price : 0;\n      return_data.price_data.instagram.story_price = influencer_data[0].instagram_story_price ? influencer_data[0].instagram_story_price : 0;\n      return_data.price_data.instagram.comment_price = influencer_data[0].instagram_comment_price ? influencer_data[0].instagram_comment_price : 0;\n      return_data.price_data.instagram.like_price = influencer_data[0].instagram_follow_price ? influencer_data[0].instagram_follow_price : 0;\n      return_data.price_data.instagram.follow_price = influencer_data[0].instagram_like_price ? influencer_data[0].instagram_like_price : 0;\n      return_data.price_data.twitter.tweet_price = influencer_data[0].twitter_tweet_price ? influencer_data[0].twitter_tweet_price : 0;\n      return_data.price_data.twitter.retweet_price = influencer_data[0].twitter_retweet_price ? influencer_data[0].twitter_retweet_price : 0;\n      return_data.price_data.twitter.comment_price = influencer_data[0].twitter_comment_price ? influencer_data[0].twitter_comment_price : 0;\n      return_data.price_data.twitter.like_price = influencer_data[0].twitter_like_price ? influencer_data[0].twitter_like_price : 0;\n      return_data.price_data.twitter.follow_price = influencer_data[0].twitter_follow_price ? influencer_data[0].twitter_follow_price : 0;\n      return_data.followers = influencer_data[0] ? influencer_data[0] : 0;\n      return_data.profile_data = influencer_data[0].vals ? influencer_data[0].vals[0] : \"\";\n    }\n\n    influencer.influencers.findOne({\n      _id: user_id\n    }, function (err, profile_data) {\n      if (err) res.json({\n        status: \"failure\",\n        statusCode: 100,\n        msg: err\n      });\n\n      if (profile_data) {\n        //profile_data.profile_picture =  profile_data.profile_picture ? \"http://\"+req.headers.host+\"/\"+profile_data.profile_picture : \"/assets/images/man-avatar-profile.jpg\";\n        profile_data.profile_picture = profile_data.profile_picture ? \"http://\" + req.headers.host + \"/\" + profile_data.profile_picture : \"\";\n      }\n\n      return_data.profile_data = profile_data;\n      influencer_posts.influencer_posts.find({\n        influencerid: user_id\n      }, function (post_error, posts) {\n        if (post_error) res.json({\n          status: \"failure\",\n          statusCode: 100,\n          msg: post_error\n        });\n\n        if (posts) {\n          for (var i = 0; i < posts.length; i++) {\n            var post_value = {\n              id: posts[i]._id,\n              influencer_id: posts[i].influencerid,\n              image: \"http://\" + req.headers.host + \"/\" + posts[i].post_name,\n              upload_type: posts[i].upload_type ? posts[i].upload_type : 'image',\n              //text_name     : \"@lorengray \"+posts[i].media_type+i,\n              description: posts[i].description,\n              price: posts[i].price,\n              likes_count: \"50.8K\",\n              comments_count: \"20.8K\"\n            };\n            return_data.posts[i] = post_value;\n          } //return_data.posts=posts;\n\n\n          res.json({\n            status: \"success\",\n            statusCode: 200,\n            data: influencer_data,\n            mydata: return_data\n          });\n        } else {\n          res.json({\n            status: \"success\",\n            statusCode: 200,\n            data: influencer_data,\n            mydata: return_data\n          });\n        }\n      });\n    });\n  });\n});\nrouter.post('/update_price', function (req, res) {\n  var user_data = req.body;\n\n  if (user_data.media_type == \"tiktok\") {\n    var update_data = {\n      tiktok_post_price: user_data.post_price,\n      tiktok_story_price: user_data.story_price\n    };\n  } else if (user_data.media_type == \"facebook\") {\n    var update_data = {\n      facebook_post_price: user_data.post_price,\n      facebook_friend_price: user_data.friend_price,\n      facebook_comment_price: user_data.comment_price,\n      facebook_like_price: user_data.like_price\n    };\n  } else if (user_data.media_type == \"instagram\") {\n    var update_data = {\n      instagram_post_price: user_data.post_price,\n      instagram_story_price: user_data.story_price,\n      instagram_comment_price: user_data.comment_price,\n      instagram_like_price: user_data.like_price,\n      instagram_follow_price: user_data.follow_price\n    };\n  } else if (user_data.media_type == \"twitter\") {\n    var update_data = {\n      twitter_tweet_price: user_data.tweet_price,\n      twitter_retweet_price: user_data.retweet_price,\n      twitter_comment_price: user_data.comment_price,\n      twitter_like_price: user_data.like_price,\n      twitter_follow_price: user_data.follow_price\n    };\n  } //console.log(update_data);return;\n\n\n  influencers_data.influencers_data.updateOne({\n    influencerid: new ObjectId(user_data.user_id)\n  }, {\n    $set: update_data\n  }, function (err, data) {\n    if (err) {\n      res.json({\n        status: \"failure\",\n        statusCode: 100,\n        data: err\n      });\n    } else {\n      res.json({\n        status: \"success\",\n        statusCode: 200,\n        data: data\n      });\n    }\n  });\n});\nrouter.post('/update_profile', function (req, res) {\n  let user_data = req.body;\n  var update_data = {\n    name: user_data.name //email:user_data.email,\n\n  };\n  influencer.influencers.updateOne({\n    _id: user_data.user_id\n  }, {\n    $set: update_data\n  }, function (err, data) {\n    if (err) {\n      res.json({\n        status: \"failure\",\n        statusCode: 100,\n        data: err\n      });\n    } else {\n      res.json({\n        status: \"success\",\n        statusCode: 200,\n        data: data\n      });\n    }\n  });\n});\nrouter.post('/upload_post', upload.single('uploadedImage'), (req, res, next) => {\n  const file = req.file;\n  var user_data = req.body;\n\n  if (!file) {\n    const error = new Error('Please upload a file');\n    error.httpStatusCode = 400;\n    return next(error);\n  }\n\n  var post_create = new influencer_posts.influencer_posts();\n  post_create.post_name = file.filename;\n  post_create.influencerid = user_data.user_id; // post_create.media_type    = user_data.media_type;\n  // post_create.post_type     = user_data.post_type;\n\n  post_create.price = user_data.price;\n  post_create.description = user_data.description;\n  post_create.upload_type = user_data.upload_type;\n  post_create.save(function (err, data) {\n    if (err) res.json({\n      status: \"failure\",\n      statusCode: 100,\n      msg: err\n    });\n    res.status(200).send({\n      statusCode: 200,\n      status: 'success',\n      data: file\n    });\n  });\n}, (error, req, res, next) => {\n  res.status(400).send({\n    error: error.message\n  });\n});\nrouter.get(\"/delete_post\", function (req, res) {\n  var post_id = req.query.post_id;\n  influencer_posts.influencer_posts.deleteOne({\n    _id: post_id\n  }, function (error, data) {\n    if (error) res.json({\n      status: \"failure\",\n      statusCode: 100,\n      data: error\n    });\n    res.json({\n      statusCode: 200,\n      status: 'success',\n      data: data\n    });\n  });\n});\nrouter.post('/upload_profile_image', upload.single('profileImage'), (req, res, next) => {\n  const file = req.file;\n  var user_data = req.body;\n\n  if (!file) {\n    const error = new Error('Please upload a file');\n    error.httpStatusCode = 400;\n    return next(error);\n  }\n\n  let update_data = {\n    profile_picture: file.filename\n  };\n  influencer.influencers.updateOne({\n    _id: user_data.user_id\n  }, {\n    $set: update_data\n  }, function (err, update_dta) {\n    if (err) {\n      res.json({\n        status: \"failure\",\n        statusCode: 100,\n        data: err\n      });\n    } else {\n      res.json({\n        status: \"success\",\n        statusCode: 200,\n        data: update_dta\n      });\n    }\n  });\n}, (error, req, res, next) => {\n  res.status(400).send({\n    error: error.message\n  });\n});\nrouter.get('/influencers', function (req, res, next) {\n  influencers_data.influencers_data.aggregate([{\n    \"$lookup\": {\n      \"from\": \"influencers\",\n      \"localField\": \"influencerid\",\n      \"foreignField\": \"_id\",\n      \"as\": \"vals\"\n    }\n  }], function (err, res_data) {\n    if (err) res.json({\n      status: \"failure\",\n      statusCode: 100,\n      error: err\n    });\n\n    for (var i = 0; i < res_data.length; i++) {\n      res_data[i].twitterfollowers = res_data[i].twitterfollowers ? res_data[i].twitterfollowers : 0;\n      res_data[i].tiktokfollowers = res_data[i].tiktokfollowers ? res_data[i].tiktokfollowers : 0;\n      res_data[i].facebookfollowers = res_data[i].facebookfollowers ? res_data[i].facebookfollowers : 0;\n      res_data[i].instagramfollowers = res_data[i].instagramfollowers ? res_data[i].instagramfollowers : 0;\n      res_data[i].tiktok_story_price = res_data[i].tiktok_story_price ? res_data[i].tiktok_story_price : 0;\n      res_data[i].tiktok_post_price = res_data[i].tiktok_post_price ? res_data[i].tiktok_post_price : 0;\n      res_data[i].twitter_tweet_price = res_data[i].twitter_tweet_price ? res_data[i].twitter_tweet_price : 0;\n      res_data[i].twitter_retweet_price = res_data[i].twitter_retweet_price ? res_data[i].twitter_retweet_price : 0;\n      res_data[i].twitter_like_price = res_data[i].twitter_like_price ? res_data[i].twitter_like_price : 0;\n      res_data[i].twitter_follow_price = res_data[i].twitter_follow_price ? res_data[i].twitter_follow_price : 0;\n      res_data[i].twitter_comment_price = res_data[i].twitter_comment_price ? res_data[i].twitter_comment_price : 0;\n      res_data[i].instagram_post_price = res_data[i].instagram_post_price ? res_data[i].instagram_post_price : 0;\n      res_data[i].instagram_story_price = res_data[i].instagram_story_price ? res_data[i].instagram_story_price : 0;\n      res_data[i].instagram_comment_price = res_data[i].instagram_comment_price ? res_data[i].instagram_comment_price : 0;\n      res_data[i].instagram_follow_price = res_data[i].instagram_follow_price ? res_data[i].instagram_follow_price : 0;\n      res_data[i].instagram_like_price = res_data[i].instagram_like_price ? res_data[i].instagram_like_price : 0;\n      res_data[i].facebook_post_price = res_data[i].facebook_post_price ? res_data[i].facebook_post_price : 0;\n      res_data[i].facebook_like_price = res_data[i].facebook_like_price ? res_data[i].facebook_like_price : 0;\n      res_data[i].facebook_friend_price = res_data[i].facebook_friend_price ? res_data[i].facebook_friend_price : 0;\n      res_data[i].facebook_comment_price = res_data[i].facebook_comment_price ? res_data[i].facebook_comment_price : 0;\n    }\n\n    res.json({\n      status: \"success\",\n      statusCode: 200,\n      data: res_data\n    });\n  });\n});\nrouter.post('/deleteInfluencers', function (req, res, next) {\n  let influencer_id = req.body.influencer_id;\n  influencer_posts.influencer_posts.deleteMany({\n    influencerid: influencer_id\n  }, function (post_error, data) {\n    if (post_error) res.json({\n      status: \"failure\",\n      statusCode: 100,\n      data: post_error\n    });\n    influencers_data.influencers_data.deleteMany({\n      influencerid: influencer_id\n    }, function (influencer_error, data) {\n      if (influencer_error) res.json({\n        status: \"failure\",\n        statusCode: 100,\n        data: error\n      });\n      influencer.influencers.deleteOne({\n        _id: influencer_id\n      }, function (error, data) {\n        if (error) res.json({\n          status: \"failure\",\n          statusCode: 100,\n          data: error\n        });\n        res.json({\n          statusCode: 200,\n          status: 'success',\n          data: 'Influencer deleted successfully.'\n        });\n      }); //res.json({statusCode: 200, status: 'success', data: 'Influencer deleted successfully.'});\n    }); //res.json({statusCode: 200, status: 'success', data: data});\n  });\n});\nrouter.get('/getNotifications', function (req, res, next) {\n  let influencer_id = req.query.influencer_id;\n  checkout.checkout.find({\n    influencerid: influencer_id\n  }).sort([['_id', -1]]).exec(function (error, all_notifications) {\n    if (error) res.json({\n      statusCode: 200,\n      status: 'error',\n      data: error\n    });\n    checkout.checkout.updateMany({\n      influencerid: influencer_id\n    }, {\n      $set: {\n        status: 1\n      }\n    }, function (err, update_dta) {});\n    res.json({\n      statusCode: 100,\n      status: 'success',\n      data: all_notifications\n    });\n  });\n});\nrouter.get('/getNotificationUnreadCount', function (req, res, next) {\n  let influencer_id = req.query.influencer_id;\n  checkout.checkout.find({\n    influencerid: influencer_id,\n    status: 0\n  }).sort([['_id', -1]]).exec(function (error, all_notifications) {\n    if (error) res.json({\n      statusCode: 200,\n      status: 'error',\n      data: error\n    });\n\n    if (all_notifications.length) {\n      res.json({\n        statusCode: 100,\n        status: 'success',\n        data: all_notifications\n      });\n    } else {\n      res.json({\n        statusCode: 200,\n        status: 'error',\n        data: \"No data found\"\n      });\n    }\n  });\n});\nrouter.post('/addCard', function (req, res) {\n  console.log(\"req.body\");\n  console.log(req.body);\n  let card_number = req.body.card_number;\n  let expiry_month = req.body.expiry_month;\n  let expiry_year = req.body.expiry_year;\n  let cvc = req.body.cvc;\n  let influencer_id = req.body.influencer_id;\n  let email = req.body.email; //  Create token\n\n  const token = stripe.tokens.create({\n    card: {\n      number: card_number,\n      exp_month: expiry_month,\n      exp_year: expiry_year,\n      cvc: cvc,\n      currency: 'USD'\n    }\n  }).then(token => {\n    const bankAccount = stripe.accounts.createExternalAccount(account_id, {\n      external_account: token.id\n    }).then(card_response => {\n      // Craete Bank account id\n      const account = stripe.accounts.create({\n        type: 'custom',\n        country: 'US',\n        email: email,\n        capabilities: {\n          card_payments: {\n            requested: true\n          },\n          transfers: {\n            requested: true\n          }\n        },\n        requested_capabilities: ['card_payments', 'transfers']\n      }).then(account_rsponse => {\n        var account_info = new account_data.account_data();\n        account_info.influencerid = influencer_id;\n        account_info.bank_account_id = account_rsponse.id;\n        account_info.card_id = card_response.id;\n        account_info.last_4 = card_response.last4;\n        account_info.card_added_response = JSON.stringify(card_response);\n        account_info.created_at = new Date();\n        console.log(account_info);\n        account_info.save(function (account_info_err, account_info_response) {\n          if (account_info_err) res.json({\n            status: 'failure',\n            statusCode: 100,\n            msg: account_info_err\n          });\n          res.json({\n            status: \"success\",\n            statusCode: 200,\n            data: account_info,\n            msg: \"Account created successfully\"\n          });\n        });\n      }).catch(account_error => {\n        console.log('account_erro');\n        console.log(account_error);\n        res.send({\n          status: 'failure',\n          statusCode: 100,\n          msg: account_error.raw.message,\n          type: \"account error\"\n        });\n      });\n    }).catch(bankAccountError => {\n      console.log('bankAccountError');\n      console.log(bankAccountError);\n      res.send({\n        status: 'failure',\n        statusCode: 100,\n        msg: bankAccountError.raw.message,\n        type: \"bank account error\"\n      });\n    });\n  }).catch(token_err => {\n    console.log('token_err');\n    console.log(token_err);\n    res.send({\n      status: 'failure',\n      statusCode: 100,\n      msg: token_err.raw.message,\n      type: \"token error\"\n    });\n  });\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZmx1ZW5jZXJzLmpzIl0sIm5hbWVzIjpbImV4cHJlc3MiLCJyZXF1aXJlIiwicm91dGVyIiwiUm91dGVyIiwibW9uZ29vc2UiLCJpbmZsdWVuY2VyIiwiaW5mbHVlbmNlcnNfZGF0YSIsImluZmx1ZW5jZXJfcG9zdHMiLCJjaGVja291dCIsImFjY291bnRfZGF0YSIsInBhc3N3b3JkSGFzaCIsIk9iamVjdElkIiwibXVsdGVyIiwiZmlsZUV4dGVuc2lvbiIsImZzIiwicGF0aCIsInN0cmlwZV9kZXRhaWwiLCJhY2NvdW50X2lkIiwiUHVibGlzaGFibGVfS2V5IiwiU2VjcmV0X0tleSIsInN0cmlwZSIsInN0b3JhZ2UiLCJkaXNrU3RvcmFnZSIsImRlc3RpbmF0aW9uIiwicmVxIiwiZmlsZSIsImNiIiwiam9pbiIsIl9fZGlybmFtZSIsImZpbGVuYW1lIiwiZmllbGRuYW1lIiwiRGF0ZSIsIm5vdyIsIm9yaWdpbmFsbmFtZSIsInVwbG9hZCIsImxpbWl0cyIsImZpbGVTaXplIiwiZmlsZUZpbHRlciIsInVuZGVmaW5lZCIsInBvc3QiLCJyZXMiLCJpbmZsdWVuY2VyQ3JlYXRlIiwiaW5mbHVlbmNlcnMiLCJib2R5IiwiaW5mbHVlbmNlcl9zaWdudXAiLCJpbmZsdWVuY2VyRGF0YSIsImRhdGV0aW1lIiwicGFzcyIsImdlbmVyYXRlIiwicGFzc3dvcmQiLCJqb2luZGF0ZSIsInRpa3RvayIsImluc3RhZ3JhbSIsImluc3RhIiwiZmFjZWJvb2siLCJmYiIsInR3aXR0ZXIiLCJ0d2l0dGVyZm9sbG93ZXJzIiwidHdpdHRlcl9mb2xsb3dlcnMiLCJ0aWt0b2tmb2xsb3dlcnMiLCJ0aWt0b2tfZm9sbG93ZXJzIiwiZmFjZWJvb2tmb2xsb3dlcnMiLCJmYl9mb2xsb3dlcnMiLCJpbnN0YWdyYW1mb2xsb3dlcnMiLCJpbnN0YV9mb2xsb3dlcnMiLCJ0aWt0b2tfcG9zdF9wcmljZSIsInRpa3Rva19zdG9yeV9wcmljZSIsImZhY2Vib29rX3Bvc3RfcHJpY2UiLCJmYWNlYm9va19mcmllbmRfcHJpY2UiLCJmYWNlYm9va19jb21tZW50X3ByaWNlIiwiZmFjZWJvb2tfbGlrZV9wcmljZSIsInR3aXR0ZXJfdHdlZXRfcHJpY2UiLCJ0d2l0dGVyX3JldHdlZXRfcHJpY2UiLCJ0d2l0dGVyX2NvbW1lbnRfcHJpY2UiLCJ0d2l0dGVyX2xpa2VfcHJpY2UiLCJ0d2l0dGVyX2ZvbGxvd19wcmljZSIsImluc3RhZ3JhbV9wb3N0X3ByaWNlIiwiaW5zdGFncmFtX3N0b3J5X3ByaWNlIiwiaW5zdGFncmFtX2NvbW1lbnRfcHJpY2UiLCJpbnN0YWdyYW1fbGlrZV9wcmljZSIsImluc3RhZ3JhbV9mb2xsb3dfcHJpY2UiLCJmaW5kT25lIiwiZW1haWwiLCJlcnIiLCJqc29uIiwic3RhdHVzIiwic3RhdHVzQ29kZSIsIm1zZyIsIm5hbWUiLCJzYXZlIiwiaW5mbHVlbmNlcl9yZXNfZXJyIiwiaW5mbHVlbmNlcl9yZXMiLCJpbmZsdWVuY2VyaWQiLCJfaWQiLCJpbmZsdWVuY2VybWF0Y2hpZCIsImluZmx1ZW5jZXJfZGF0YV9lcnIiLCJpbmZsdWVuY2VyX2RhdGFfcmVzIiwiZGF0YSIsImdldCIsIm5leHQiLCJhZ2dyZWdhdGUiLCJyZXNfZGF0YSIsImVycm9yIiwiaSIsImxlbmd0aCIsInVzZXJfaWQiLCJxdWVyeSIsImluZmx1ZW5jZXJfZGF0YSIsInJldHVybl9kYXRhIiwicHJpY2VfZGF0YSIsInBvc3RfcHJpY2UiLCJzdG9yeV9wcmljZSIsImNvbW1lbnRfcHJpY2UiLCJsaWtlX3ByaWNlIiwiZm9sbG93X3ByaWNlIiwiZnJpZW5kX3ByaWNlIiwidHdlZXRfcHJpY2UiLCJyZXR3ZWV0X3ByaWNlIiwicHJvZmlsZV9kYXRhIiwiZm9sbG93ZXJzIiwicG9zdHMiLCJ2YWxzIiwicHJvZmlsZV9waWN0dXJlIiwiaGVhZGVycyIsImhvc3QiLCJmaW5kIiwicG9zdF9lcnJvciIsInBvc3RfdmFsdWUiLCJpZCIsImluZmx1ZW5jZXJfaWQiLCJpbWFnZSIsInBvc3RfbmFtZSIsInVwbG9hZF90eXBlIiwiZGVzY3JpcHRpb24iLCJwcmljZSIsImxpa2VzX2NvdW50IiwiY29tbWVudHNfY291bnQiLCJteWRhdGEiLCJ1c2VyX2RhdGEiLCJtZWRpYV90eXBlIiwidXBkYXRlX2RhdGEiLCJ1cGRhdGVPbmUiLCIkc2V0Iiwic2luZ2xlIiwiRXJyb3IiLCJodHRwU3RhdHVzQ29kZSIsInBvc3RfY3JlYXRlIiwic2VuZCIsIm1lc3NhZ2UiLCJwb3N0X2lkIiwiZGVsZXRlT25lIiwidXBkYXRlX2R0YSIsImRlbGV0ZU1hbnkiLCJpbmZsdWVuY2VyX2Vycm9yIiwic29ydCIsImV4ZWMiLCJhbGxfbm90aWZpY2F0aW9ucyIsInVwZGF0ZU1hbnkiLCJjb25zb2xlIiwibG9nIiwiY2FyZF9udW1iZXIiLCJleHBpcnlfbW9udGgiLCJleHBpcnlfeWVhciIsImN2YyIsInRva2VuIiwidG9rZW5zIiwiY3JlYXRlIiwiY2FyZCIsIm51bWJlciIsImV4cF9tb250aCIsImV4cF95ZWFyIiwiY3VycmVuY3kiLCJ0aGVuIiwiYmFua0FjY291bnQiLCJhY2NvdW50cyIsImNyZWF0ZUV4dGVybmFsQWNjb3VudCIsImV4dGVybmFsX2FjY291bnQiLCJjYXJkX3Jlc3BvbnNlIiwiYWNjb3VudCIsInR5cGUiLCJjb3VudHJ5IiwiY2FwYWJpbGl0aWVzIiwiY2FyZF9wYXltZW50cyIsInJlcXVlc3RlZCIsInRyYW5zZmVycyIsInJlcXVlc3RlZF9jYXBhYmlsaXRpZXMiLCJhY2NvdW50X3JzcG9uc2UiLCJhY2NvdW50X2luZm8iLCJiYW5rX2FjY291bnRfaWQiLCJjYXJkX2lkIiwibGFzdF80IiwibGFzdDQiLCJjYXJkX2FkZGVkX3Jlc3BvbnNlIiwiSlNPTiIsInN0cmluZ2lmeSIsImNyZWF0ZWRfYXQiLCJhY2NvdW50X2luZm9fZXJyIiwiYWNjb3VudF9pbmZvX3Jlc3BvbnNlIiwiY2F0Y2giLCJhY2NvdW50X2Vycm9yIiwicmF3IiwiYmFua0FjY291bnRFcnJvciIsInRva2VuX2VyciIsIm1vZHVsZSIsImV4cG9ydHMi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QWtCcEQsT0FBeEQ7QUFBa0UrQixVQUFBQSxJQUFJLEVBQUM7QUFBdkUsU0FBVDtBQUNELE9BbENnQixDQUFqQjtBQXNDRCxLQWpEb0IsRUFpRGxCbUIsS0FqRGtCLENBaURYRyxnQkFBRCxJQUFzQjtBQUU3QjNDLE1BQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLGtCQUFaO0FBQ0VELE1BQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZMEMsZ0JBQVo7QUFDRmpLLE1BQUFBLEdBQUcsQ0FBQzJHLElBQUosQ0FBUztBQUFDOUQsUUFBQUEsTUFBTSxFQUFDLFNBQVI7QUFBbUJDLFFBQUFBLFVBQVUsRUFBQyxHQUE5QjtBQUFrQ0MsUUFBQUEsR0FBRyxFQUFDa0gsZ0JBQWdCLENBQUNELEdBQWpCLENBQXFCcEQsT0FBM0Q7QUFBcUUrQixRQUFBQSxJQUFJLEVBQUM7QUFBMUUsT0FBVDtBQUNELEtBdERvQixDQUFyQjtBQXdERCxHQXBFYyxFQW9FWm1CLEtBcEVZLENBb0VMSSxTQUFELElBQWU7QUFFdEI1QyxJQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxXQUFaO0FBQ0lELElBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZMkMsU0FBWjtBQUNKbEssSUFBQUEsR0FBRyxDQUFDMkcsSUFBSixDQUFTO0FBQUM5RCxNQUFBQSxNQUFNLEVBQUMsU0FBUjtBQUFtQkMsTUFBQUEsVUFBVSxFQUFDLEdBQTlCO0FBQWtDQyxNQUFBQSxHQUFHLEVBQUNtSCxTQUFTLENBQUNGLEdBQVYsQ0FBY3BELE9BQXBEO0FBQThEK0IsTUFBQUEsSUFBSSxFQUFDO0FBQW5FLEtBQVQ7QUFDRCxHQXpFYyxDQUFmO0FBMkVQLENBM0ZEO0FBNkZBd0IsTUFBTSxDQUFDQyxPQUFQLEdBQWlCMU0sTUFBakIiLCJzb3VyY2VSb290IjoiRTpcXGJvb21hZHZlcnRpc2VtZW50XFxzZXJ2ZXJhcGlcXHJvdXRlc1xcIiwic291cmNlc0NvbnRlbnQiOlsiXHJcbnZhciBleHByZXNzICAgICAgICAgICAgID0gcmVxdWlyZSgnZXhwcmVzcycpO1xyXG52YXIgcm91dGVyICAgICAgICAgICAgICA9IGV4cHJlc3MuUm91dGVyKCk7XHJcbnZhciBtb25nb29zZSAgICAgICAgICAgID0gcmVxdWlyZSgnbW9uZ29vc2UnKTtcclxuY29uc3QgaW5mbHVlbmNlciAgICAgICAgPSByZXF1aXJlKCcuLi9tb2RlbHMvaW5mbHVlbmNlcnMnKTtcclxuY29uc3QgaW5mbHVlbmNlcnNfZGF0YSAgPSByZXF1aXJlKCcuLi9tb2RlbHMvaW5mbHVlbmNlcnNfZGF0YScpO1xyXG5jb25zdCBpbmZsdWVuY2VyX3Bvc3RzICA9IHJlcXVpcmUoJy4uL21vZGVscy9pbmZsdWVuY2Vyc19wb3N0cycpO1xyXG5jb25zdCBjaGVja291dCAgICAgICAgICA9IHJlcXVpcmUoJy4uL21vZGVscy9jaGVja291dCcpO1xyXG5jb25zdCBhY2NvdW50X2RhdGEgICAgICA9IHJlcXVpcmUoJy4uL21vZGVscy9hY2NvdW50X2RhdGEnKTtcclxuXHJcbnZhciBwYXNzd29yZEhhc2ggICAgICAgID0gcmVxdWlyZSgncGFzc3dvcmQtaGFzaCcpO1xyXG5jb25zdCB7T2JqZWN0SWR9ICAgICAgICA9IHJlcXVpcmUoJ21vbmdvZGInKTsgXHJcbmNvbnN0IG11bHRlciAgICAgICAgICAgID0gcmVxdWlyZSgnbXVsdGVyJyk7XHJcbnZhciBmaWxlRXh0ZW5zaW9uICAgICAgID0gcmVxdWlyZSgnZmlsZS1leHRlbnNpb24nKVxyXG52YXIgZnMgICAgICAgICAgICAgICAgICA9IHJlcXVpcmUoJ2ZzJyk7XHJcbmNvbnN0IHBhdGggICAgICAgICAgICAgID0gcmVxdWlyZSgncGF0aCcpO1xyXG5jb25zdCBzdHJpcGVfZGV0YWlsICAgICA9IHJlcXVpcmUoJy4uL2NvbmZpZy9zdHJpcGUnKTtcclxuXHJcbmNvbnN0IGFjY291bnRfaWQgICAgICAgID0gc3RyaXBlX2RldGFpbC5hY2NvdW50X2lkOyAvLyBnZXQgaXQgZnJvbSBzdHJpcGUncyBhY2NvdW50IHByb2ZpbGUgaW5mbyBcclxudmFyICAgUHVibGlzaGFibGVfS2V5ICAgPSBzdHJpcGVfZGV0YWlsLlB1Ymxpc2hhYmxlX0tleTtcclxudmFyICAgU2VjcmV0X0tleSAgICAgICAgPSBzdHJpcGVfZGV0YWlsLlNlY3JldF9LZXk7XHJcblxyXG5cclxuY29uc3Qgc3RyaXBlID0gcmVxdWlyZSgnc3RyaXBlJykoU2VjcmV0X0tleSk7XHJcblxyXG4vL3Byb2Nlc3MuZW52Lk5PREVfVExTX1JFSkVDVF9VTkFVVEhPUklaRUQgPSBcIjFcIjtcclxuXHJcbnZhciBzdG9yYWdlID0gbXVsdGVyLmRpc2tTdG9yYWdlKHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIFNldHRpbmcgZGlyZWN0b3J5IG9uIGRpc2sgdG8gc2F2ZSB1cGxvYWRlZCBmaWxlc1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVzdGluYXRpb246IGZ1bmN0aW9uIChyZXEsIGZpbGUsIGNiKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vY2IobnVsbCwgJy4vdXBsb2FkcycpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNiKG51bGwsIHBhdGguam9pbihfX2Rpcm5hbWUsICcuLi91cGxvYWRzJykpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gU2V0dGluZyBuYW1lIG9mIGZpbGUgc2F2ZWRcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZpbGVuYW1lOiBmdW5jdGlvbiAocmVxLCBmaWxlLCBjYikge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYihudWxsLCBmaWxlLmZpZWxkbmFtZSArICctJyArIERhdGUubm93KCkgKyAnLicgKyBmaWxlRXh0ZW5zaW9uKGZpbGUub3JpZ2luYWxuYW1lKSlcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcclxuXHJcbnZhciB1cGxvYWQgPSBtdWx0ZXIoe1xyXG4gIHN0b3JhZ2UgOiBzdG9yYWdlLFxyXG4gIGxpbWl0cyAgOiB7XHJcbiAgICAgICAgICAgICAgZmlsZVNpemU6IDIwMDAwMDAwMCAvLyBTZXR0aW5nIEltYWdlIFNpemUgTGltaXQgdG8gMk1Cc1xyXG4gICAgICAgICAgICB9LFxyXG4gIGZpbGVGaWx0ZXIocmVxLCBmaWxlLCBjYikge1xyXG4gICAgICBcclxuICAgICAgLy8gaWYgKCFmaWxlLm9yaWdpbmFsbmFtZS5tYXRjaCgvXFwuKGpwZ3xqcGVnfHBuZykkLykpIHtcclxuICAgICAgLy8gICAgIC8vRXJyb3IgXHJcbiAgICAgIC8vICAgICBjYihuZXcgRXJyb3IoJ1BsZWFzZSB1cGxvYWQgSlBHIGFuZCBQTkcgaW1hZ2VzIG9ubHkhJykpXHJcbiAgICAgIC8vIH1cclxuICAgICAgLy9TdWNjZXNzIFxyXG4gICAgICBjYih1bmRlZmluZWQsIHRydWUpXHJcbiAgfVxyXG59KVxyXG5cclxuXHJcbnJvdXRlci5wb3N0KCcvcmVnaXN0ZXInLCBhc3luYyBmdW5jdGlvbihyZXEscmVzKSB7XHJcblxyXG4gICAgICB2YXIgaW5mbHVlbmNlckNyZWF0ZSA9ICBuZXcgaW5mbHVlbmNlci5pbmZsdWVuY2VycyhyZXEuYm9keS5pbmZsdWVuY2VyX3NpZ251cCk7XHJcbiAgICAgIHZhciBpbmZsdWVuY2VyRGF0YSA9ICBuZXcgaW5mbHVlbmNlcnNfZGF0YS5pbmZsdWVuY2Vyc19kYXRhKHJlcS5ib2R5LmluZmx1ZW5jZXJfc2lnbnVwKTtcclxuXHJcbiAgICAgIHZhciBkYXRldGltZSA9IG5ldyBEYXRlKCk7XHJcbiAgICAgIGxldCBwYXNzID0gcGFzc3dvcmRIYXNoLmdlbmVyYXRlKHJlcS5ib2R5LmluZmx1ZW5jZXJfc2lnbnVwLnBhc3N3b3JkKVxyXG5cclxuICAgICAgaW5mbHVlbmNlckNyZWF0ZS5qb2luZGF0ZSA9IGRhdGV0aW1lXHJcbiAgICAgIGluZmx1ZW5jZXJDcmVhdGUucGFzc3dvcmQgPSBwYXNzXHJcbiAgICAgIGluZmx1ZW5jZXJDcmVhdGUudGlrdG9rID0gcmVxLmJvZHkuaW5mbHVlbmNlcl9zaWdudXAudGlrdG9rXHJcbiAgICAgIGluZmx1ZW5jZXJDcmVhdGUuaW5zdGFncmFtID0gcmVxLmJvZHkuaW5mbHVlbmNlcl9zaWdudXAuaW5zdGFcclxuICAgICAgaW5mbHVlbmNlckNyZWF0ZS5mYWNlYm9vayA9IHJlcS5ib2R5LmluZmx1ZW5jZXJfc2lnbnVwLmZiXHJcbiAgICAgIGluZmx1ZW5jZXJDcmVhdGUudHdpdHRlciA9IHJlcS5ib2R5LmluZmx1ZW5jZXJfc2lnbnVwLnR3aXR0ZXJcclxuXHJcbiAgICAgIGluZmx1ZW5jZXJEYXRhLnR3aXR0ZXJmb2xsb3dlcnMgPSByZXEuYm9keS5pbmZsdWVuY2VyX3NpZ251cC50d2l0dGVyX2ZvbGxvd2VycztcclxuICAgICAgaW5mbHVlbmNlckRhdGEudGlrdG9rZm9sbG93ZXJzID0gcmVxLmJvZHkuaW5mbHVlbmNlcl9zaWdudXAudGlrdG9rX2ZvbGxvd2VycztcclxuICAgICAgaW5mbHVlbmNlckRhdGEuZmFjZWJvb2tmb2xsb3dlcnMgPSByZXEuYm9keS5pbmZsdWVuY2VyX3NpZ251cC5mYl9mb2xsb3dlcnM7XHJcbiAgICAgIGluZmx1ZW5jZXJEYXRhLmluc3RhZ3JhbWZvbGxvd2VycyA9IHJlcS5ib2R5LmluZmx1ZW5jZXJfc2lnbnVwLmluc3RhX2ZvbGxvd2VycztcclxuXHJcbiAgICAgIGluZmx1ZW5jZXJEYXRhLnRpa3Rva19wb3N0X3ByaWNlID0gMDtcclxuICAgICAgaW5mbHVlbmNlckRhdGEudGlrdG9rX3N0b3J5X3ByaWNlID0gMDtcclxuICAgICAgaW5mbHVlbmNlckRhdGEuZmFjZWJvb2tfcG9zdF9wcmljZSA9IDA7XHJcbiAgICAgIGluZmx1ZW5jZXJEYXRhLmZhY2Vib29rX2ZyaWVuZF9wcmljZSA9IDA7XHJcbiAgICAgIGluZmx1ZW5jZXJEYXRhLmZhY2Vib29rX2NvbW1lbnRfcHJpY2UgPSAwO1xyXG4gICAgICBpbmZsdWVuY2VyRGF0YS5mYWNlYm9va19saWtlX3ByaWNlID0gMDtcclxuICAgICAgaW5mbHVlbmNlckRhdGEudHdpdHRlcl90d2VldF9wcmljZSA9IDA7XHJcbiAgICAgIGluZmx1ZW5jZXJEYXRhLnR3aXR0ZXJfcmV0d2VldF9wcmljZSA9IDA7XHJcbiAgICAgIGluZmx1ZW5jZXJEYXRhLnR3aXR0ZXJfY29tbWVudF9wcmljZSA9IDA7XHJcbiAgICAgIGluZmx1ZW5jZXJEYXRhLnR3aXR0ZXJfbGlrZV9wcmljZSA9IDA7XHJcbiAgICAgIGluZmx1ZW5jZXJEYXRhLnR3aXR0ZXJfZm9sbG93X3ByaWNlID0gMDtcclxuICAgICAgaW5mbHVlbmNlckRhdGEuaW5zdGFncmFtX3Bvc3RfcHJpY2UgPSAwO1xyXG4gICAgICBpbmZsdWVuY2VyRGF0YS5pbnN0YWdyYW1fc3RvcnlfcHJpY2UgPSAwO1xyXG4gICAgICBpbmZsdWVuY2VyRGF0YS5pbnN0YWdyYW1fY29tbWVudF9wcmljZSA9IDA7XHJcbiAgICAgIGluZmx1ZW5jZXJEYXRhLmluc3RhZ3JhbV9saWtlX3ByaWNlID0gMDtcclxuICAgICAgaW5mbHVlbmNlckRhdGEuaW5zdGFncmFtX2ZvbGxvd19wcmljZSA9IDA7XHJcbiAgICAgXHJcbiAgICAgIFxyXG4gICAgICBcclxuICAgICAgaW5mbHVlbmNlci5pbmZsdWVuY2Vycy5maW5kT25lKHtlbWFpbDpyZXEuYm9keS5pbmZsdWVuY2VyX3NpZ251cC5lbWFpbH0sIGZ1bmN0aW9uKGVyciwgaW5mbHVlbmNlcnMpIHtcclxuICAgICAgICBpZiAoZXJyKSAgcmVzLmpzb24oe3N0YXR1czpcImZhaWx1cmVcIixzdGF0dXNDb2RlOjEwMCxtc2c6ZXJyfSk7XHJcbiAgICAgICAgXHJcbiAgICAgICAgaWYoaW5mbHVlbmNlcnMpe1xyXG4gICAgICAgICBcclxuICAgICAgICAgIHJlcy5qc29uKHtzdGF0dXM6XCJmYWlsdXJlXCIsc3RhdHVzQ29kZToxMDAsbXNnOlwiRW1haWwgYWxyZWFkeSBleGlzdHMhIVwifSk7XHJcbiAgICAgICAgfWVsc2V7XHJcbiAgICAgICAgICAgIGluZmx1ZW5jZXIuaW5mbHVlbmNlcnMuZmluZE9uZSh7bmFtZTpyZXEuYm9keS5pbmZsdWVuY2VyX3NpZ251cC5uYW1lfSwgZnVuY3Rpb24oZXJyLCBpbmZsdWVuY2Vycykge1xyXG4gICAgICAgICAgICBpZiAoZXJyKSAgcmVzLmpzb24oe3N0YXR1czpcImZhaWx1cmVcIixzdGF0dXNDb2RlOjEwMCxtc2c6ZXJyfSk7XHJcbiAgICAgICAgXHJcbiAgICAgICAgICAgIGlmKGluZmx1ZW5jZXJzKXtcclxuICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICByZXMuanNvbih7c3RhdHVzOlwiZmFpbHVyZVwiLHN0YXR1c0NvZGU6MTAwLG1zZzpcIlVzZXJuYW1lIGFscmVhZHkgZXhpc3RzISFcIn0pO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2V7XHJcblxyXG4gICAgICAgICAgICAgIGluZmx1ZW5jZXJDcmVhdGUuc2F2ZShmdW5jdGlvbiAoaW5mbHVlbmNlcl9yZXNfZXJyLCBpbmZsdWVuY2VyX3Jlcykge1xyXG5cclxuICAgICAgICAgICAgICAgIGluZmx1ZW5jZXJEYXRhLmluZmx1ZW5jZXJpZCA9IGluZmx1ZW5jZXJfcmVzLl9pZDtcclxuICAgICAgICAgICAgICAgIGluZmx1ZW5jZXJEYXRhLmluZmx1ZW5jZXJtYXRjaGlkID0gaW5mbHVlbmNlcl9yZXMuX2lkO1xyXG4gICAgICAgICAgICAgICAgaW5mbHVlbmNlckRhdGEuc2F2ZShmdW5jdGlvbiAoaW5mbHVlbmNlcl9kYXRhX2VyciwgaW5mbHVlbmNlcl9kYXRhX3Jlcykge1xyXG5cclxuICAgICAgICAgICAgICAgICAgaWYoaW5mbHVlbmNlcl9yZXNfZXJyKSByZXMuanNvbih7IHN0YXR1czonZmFpbHVyZScgLCBzdGF0dXNDb2RlIDogMTAwICwgbXNnIDppbmZsdWVuY2VyX3Jlc19lcnJ9KTtcclxuICAgICAgICAgICAgICAgICAgcmVzLmpzb24oe3N0YXR1czpcInN1Y2Nlc3NcIixzdGF0dXNDb2RlOjIwMCxkYXRhOmluZmx1ZW5jZXJfcmVzLG1zZzpcIlNpZ251cCAmIFNpZ25JbiBzdWNjZXNzZnVsbHkhXCJ9KTtcclxuICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgfSlcclxuICAgICAgICB9XHJcbiAgICAgIH0pOyBcclxuICAgICAgXHJcbiAgICB9KTtcclxuXHJcbiAgICByb3V0ZXIuZ2V0KCcvdGVzdCcsIGZ1bmN0aW9uKHJlcSxyZXMpIHtcclxuICAgICAgcmVzLmpzb24oXCJpdCB3b3JrZWQgdmlqYXlcIik7XHJcbiAgICB9KTtcclxuXHJcbiAgICByb3V0ZXIuZ2V0KCcvZ2V0SW5mbHVlbmNlcnMnLCBmdW5jdGlvbihyZXEsIHJlcywgbmV4dCkge1xyXG4gICAgICAgIGluZmx1ZW5jZXJzX2RhdGEuaW5mbHVlbmNlcnNfZGF0YS5hZ2dyZWdhdGUoW1xyXG4gICAgICAgICAgICB7IFwiJGxvb2t1cFwiOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgXCJmcm9tXCI6IFwiaW5mbHVlbmNlcnNcIixcclxuICAgICAgICAgICAgICAgICAgICBcImxvY2FsRmllbGRcIjogXCJpbmZsdWVuY2VyaWRcIixcclxuICAgICAgICAgICAgICAgICAgICBcImZvcmVpZ25GaWVsZFwiOiBcIl9pZFwiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwiYXNcIjogXCJ2YWxzXCJcclxuICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICBdLCBmdW5jdGlvbihlcnIsIHJlc19kYXRhKSB7XHJcblxyXG5cclxuICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICBpZiAoZXJyKSAgcmVzLmpzb24oe3N0YXR1czpcImZhaWx1cmVcIixzdGF0dXNDb2RlOjEwMCxlcnJvcjplcnJ9KTtcclxuXHJcblxyXG5cclxuICAgICAgICAgICAgICAgIGZvcih2YXIgaSA9IDA7IGkgPCByZXNfZGF0YS5sZW5ndGg7IGkrKyl7XHJcblxyXG4gICAgICAgICAgICAgICAgICByZXNfZGF0YVtpXS50aWt0b2tfc3RvcnlfcHJpY2UgICAgPSByZXNfZGF0YVtpXS50aWt0b2tfc3RvcnlfcHJpY2UgPyByZXNfZGF0YVtpXS50aWt0b2tfc3RvcnlfcHJpY2UgOiAwO1xyXG4gICAgICAgICAgICAgICAgICByZXNfZGF0YVtpXS50aWt0b2tfcG9zdF9wcmljZSAgICAgPSByZXNfZGF0YVtpXS50aWt0b2tfcG9zdF9wcmljZSA/IHJlc19kYXRhW2ldLnRpa3Rva19wb3N0X3ByaWNlIDogMDtcclxuXHJcbiAgICAgICAgICAgICAgICAgIHJlc19kYXRhW2ldLnR3aXR0ZXJfdHdlZXRfcHJpY2UgICAgICAgPSByZXNfZGF0YVtpXS50d2l0dGVyX3R3ZWV0X3ByaWNlID8gcmVzX2RhdGFbaV0udHdpdHRlcl90d2VldF9wcmljZSA6IDA7XHJcbiAgICAgICAgICAgICAgICAgIHJlc19kYXRhW2ldLnR3aXR0ZXJfcmV0d2VldF9wcmljZSAgICAgPSByZXNfZGF0YVtpXS50d2l0dGVyX3JldHdlZXRfcHJpY2UgPyByZXNfZGF0YVtpXS50d2l0dGVyX3JldHdlZXRfcHJpY2UgOiAwO1xyXG4gICAgICAgICAgICAgICAgICByZXNfZGF0YVtpXS50d2l0dGVyX2xpa2VfcHJpY2UgICAgICAgID0gcmVzX2RhdGFbaV0udHdpdHRlcl9saWtlX3ByaWNlID8gcmVzX2RhdGFbaV0udHdpdHRlcl9saWtlX3ByaWNlIDogMDtcclxuICAgICAgICAgICAgICAgICAgcmVzX2RhdGFbaV0udHdpdHRlcl9mb2xsb3dfcHJpY2UgICAgICA9IHJlc19kYXRhW2ldLnR3aXR0ZXJfZm9sbG93X3ByaWNlID8gcmVzX2RhdGFbaV0udHdpdHRlcl9mb2xsb3dfcHJpY2UgOiAwO1xyXG4gICAgICAgICAgICAgICAgICByZXNfZGF0YVtpXS50d2l0dGVyX2NvbW1lbnRfcHJpY2UgICAgID0gcmVzX2RhdGFbaV0udHdpdHRlcl9jb21tZW50X3ByaWNlID8gcmVzX2RhdGFbaV0udHdpdHRlcl9jb21tZW50X3ByaWNlIDogMDtcclxuXHJcbiAgICAgICAgICAgICAgICAgIHJlc19kYXRhW2ldLmluc3RhZ3JhbV9wb3N0X3ByaWNlICAgICAgPSByZXNfZGF0YVtpXS5pbnN0YWdyYW1fcG9zdF9wcmljZSA/IHJlc19kYXRhW2ldLmluc3RhZ3JhbV9wb3N0X3ByaWNlIDogMDtcclxuICAgICAgICAgICAgICAgICAgcmVzX2RhdGFbaV0uaW5zdGFncmFtX3N0b3J5X3ByaWNlICAgICA9IHJlc19kYXRhW2ldLmluc3RhZ3JhbV9zdG9yeV9wcmljZSA/IHJlc19kYXRhW2ldLmluc3RhZ3JhbV9zdG9yeV9wcmljZSA6IDA7XHJcbiAgICAgICAgICAgICAgICAgIHJlc19kYXRhW2ldLmluc3RhZ3JhbV9jb21tZW50X3ByaWNlICAgPSByZXNfZGF0YVtpXS5pbnN0YWdyYW1fY29tbWVudF9wcmljZSA/IHJlc19kYXRhW2ldLmluc3RhZ3JhbV9jb21tZW50X3ByaWNlIDogMDtcclxuICAgICAgICAgICAgICAgICAgcmVzX2RhdGFbaV0uaW5zdGFncmFtX2ZvbGxvd19wcmljZSAgICA9IHJlc19kYXRhW2ldLmluc3RhZ3JhbV9mb2xsb3dfcHJpY2UgPyByZXNfZGF0YVtpXS5pbnN0YWdyYW1fZm9sbG93X3ByaWNlIDogMDtcclxuICAgICAgICAgICAgICAgICAgcmVzX2RhdGFbaV0uaW5zdGFncmFtX2xpa2VfcHJpY2UgICAgICA9IHJlc19kYXRhW2ldLmluc3RhZ3JhbV9saWtlX3ByaWNlID8gcmVzX2RhdGFbaV0uaW5zdGFncmFtX2xpa2VfcHJpY2UgOiAwO1xyXG4gICAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgICAgcmVzX2RhdGFbaV0uZmFjZWJvb2tfcG9zdF9wcmljZSAgICAgICA9IHJlc19kYXRhW2ldLmZhY2Vib29rX3Bvc3RfcHJpY2UgPyByZXNfZGF0YVtpXS5mYWNlYm9va19wb3N0X3ByaWNlIDogMDtcclxuICAgICAgICAgICAgICAgICAgcmVzX2RhdGFbaV0uZmFjZWJvb2tfbGlrZV9wcmljZSAgICAgICA9IHJlc19kYXRhW2ldLmZhY2Vib29rX2xpa2VfcHJpY2UgPyByZXNfZGF0YVtpXS5mYWNlYm9va19saWtlX3ByaWNlIDogMDtcclxuICAgICAgICAgICAgICAgICAgcmVzX2RhdGFbaV0uZmFjZWJvb2tfZnJpZW5kX3ByaWNlICAgICA9IHJlc19kYXRhW2ldLmZhY2Vib29rX2ZyaWVuZF9wcmljZSA/IHJlc19kYXRhW2ldLmZhY2Vib29rX2ZyaWVuZF9wcmljZSA6IDA7XHJcbiAgICAgICAgICAgICAgICAgIHJlc19kYXRhW2ldLmZhY2Vib29rX2NvbW1lbnRfcHJpY2UgICAgPSByZXNfZGF0YVtpXS5mYWNlYm9va19jb21tZW50X3ByaWNlID8gcmVzX2RhdGFbaV0uZmFjZWJvb2tfY29tbWVudF9wcmljZSA6IDA7XHJcblxyXG4gICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgIHJlcy5qc29uKHtzdGF0dXM6XCJzdWNjZXNzXCIsc3RhdHVzQ29kZToyMDAsZGF0YTpyZXNfZGF0YX0pO1xyXG4gICAgICAgICAgICB9KVxyXG5cclxuICAgIH0pO1xyXG5cclxuICAgIC8qKioqIFRyeWluZyB0byBnZXQgYWxsIGluZmx1ZW5jZXJzIGRhdGEgYXMgZmlyc3QgdGFibGUgaW5mbHVlbmNlcnMgKioqL1xyXG4gICAgICAvLyByb3V0ZXIuZ2V0KCcvZ2V0SW5mbHVlbmNlcnMxJywgZnVuY3Rpb24ocmVxLCByZXMsIG5leHQpIHtcclxuICAgICAgLy8gICAgICAgaW5mbHVlbmNlci5pbmZsdWVuY2Vycy5hZ2dyZWdhdGUoW1xyXG4gICAgICAvLyAgICAgICAgIHsgXCIkbG9va3VwXCI6IHtcclxuICAgICAgLy8gICAgICAgICAgICAgICAgIFwiZnJvbVwiOiBcImluZmx1ZW5jZXJzX2RhdGFcIixcclxuICAgICAgLy8gICAgICAgICAgICAgICAgIFwibG9jYWxGaWVsZFwiOiBcIl9pZFwiLFxyXG4gICAgICAvLyAgICAgICAgICAgICAgICAgXCJmb3JlaWduRmllbGRcIjogXCJpbmZsdWVuY2VyaWRcIixcclxuICAgICAgLy8gICAgICAgICAgICAgICAgIFwiYXNcIjogXCJ2YWxzXCJcclxuICAgICAgLy8gICAgICAgICAgICAgICB9XHJcbiAgICAgIC8vICAgICAgICAgfVxyXG4gICAgICAvLyAgICAgICAgIF0sIGZ1bmN0aW9uKGVyciwgcmVzX2RhdGEpIHtcclxuICAgICAgLy8gICAgICAgICAgICAgaWYgKGVycikgIHJlcy5qc29uKHtzdGF0dXM6XCJmYWlsdXJlXCIsc3RhdHVzQ29kZToxMDAsZXJyb3I6ZXJyfSk7XHJcbiAgICAgIC8vICAgICAgICAgICAgICAgcmVzLmpzb24oe3N0YXR1czpcInN1Y2Nlc3NcIixzdGF0dXNDb2RlOjIwMCxkYXRhOnJlc19kYXRhfSk7XHJcbiAgICAgIC8vICAgICAgICAgICAgIH0pXHJcbiAgICAgIC8vIH0pO1xyXG5cclxuICAgICByb3V0ZXIuZ2V0KCcvc2luZ2xlSW5mbHVlbmNlcicsIGZ1bmN0aW9uKHJlcSwgcmVzKSB7XHJcblxyXG4gICAgICB2YXIgIHVzZXJfaWQgPSByZXEucXVlcnkudXNlcl9pZDtcclxuICAgICAgXHJcbiAgICAgICAgaW5mbHVlbmNlcnNfZGF0YS5pbmZsdWVuY2Vyc19kYXRhLmFnZ3JlZ2F0ZShcclxuICAgICAgICAgICAgW1xyXG4gICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgIFwiJGxvb2t1cFwiOntcclxuXHJcbiAgICAgICAgICAgICAgICAgIFwiZnJvbVwiOiBcImluZmx1ZW5jZXJzXCIsXHJcbiAgICAgICAgICAgICAgICAgIFwibG9jYWxGaWVsZFwiOiBcImluZmx1ZW5jZXJpZFwiLFxyXG4gICAgICAgICAgICAgICAgICBcImZvcmVpZ25GaWVsZFwiOiBcIl9pZFwiLFxyXG4gICAgICAgICAgICAgICAgICBcImFzXCI6IFwidmFsc1wiXHJcbiAgICAgICAgICAgICAgfX1cclxuICAgICAgICAgICAgICAsXHJcbiAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgXCIkbWF0Y2hcIjp7XHJcbiAgICAgICAgICAgICAgICAgIFwiaW5mbHVlbmNlcm1hdGNoaWRcIiA6IHVzZXJfaWRcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICBdXHJcbiAgICAgICAgICAgICxmdW5jdGlvbihlcnIsaW5mbHVlbmNlcl9kYXRhKXtcclxuICAgICAgICAgICAgaWYoZXJyKSByZXMuanNvbih7c3RhdHVzOlwiZmFpbHVyZVwiLHN0YXR1c0NvZGU6MTAwLGVycm9yOmVycn0pO1xyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAgdmFyIHJldHVybl9kYXRhID0ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByaWNlX2RhdGE6e1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGlrdG9rICAgICAgOiB7IHBvc3RfcHJpY2UgOiAwLCBzdG9yeV9wcmljZSA6IDB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaW5zdGFncmFtICAgOiB7IHBvc3RfcHJpY2UgOiAwLCBzdG9yeV9wcmljZSA6IDAsIGNvbW1lbnRfcHJpY2UgOjEwICwgbGlrZV9wcmljZSA6IDIwICwgZm9sbG93X3ByaWNlIDogMzB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZmFjZWJvb2sgICAgOiB7IHBvc3RfcHJpY2UgOiAwLCBmcmllbmRfcHJpY2UgOiA0MCAsIGNvbW1lbnRfcHJpY2UgOiA1MCAsbGlrZV9wcmljZSA6IDYwfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR3aXR0ZXIgICAgIDogeyB0d2VldF9wcmljZSA6IDcwLCByZXR3ZWV0X3ByaWNlIDogODAgLCBjb21tZW50X3ByaWNlIDogOTAgLCBsaWtlX3ByaWNlIDogNzAgLGZvbGxvd19wcmljZSA6IDgwfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByb2ZpbGVfZGF0YSAgOlwiXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9sbG93ZXJzICAgOiAwLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBvc3RzICAgICAgICAgOltdLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAgXHJcblxyXG4gICAgICAgICAgICBpZihpbmZsdWVuY2VyX2RhdGFbMF0pe1xyXG4gICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgIHJldHVybl9kYXRhLnByaWNlX2RhdGEudGlrdG9rLnBvc3RfcHJpY2UgICAgICA9IGluZmx1ZW5jZXJfZGF0YVswXS50aWt0b2tfcG9zdF9wcmljZSA/IGluZmx1ZW5jZXJfZGF0YVswXS50aWt0b2tfcG9zdF9wcmljZSA6IDA7XHJcbiAgICAgICAgICAgICAgcmV0dXJuX2RhdGEucHJpY2VfZGF0YS50aWt0b2suc3RvcnlfcHJpY2UgICAgID0gaW5mbHVlbmNlcl9kYXRhWzBdLnRpa3Rva19zdG9yeV9wcmljZSA/IGluZmx1ZW5jZXJfZGF0YVswXS50aWt0b2tfc3RvcnlfcHJpY2U6IDA7XHJcblxyXG4gICAgICAgICAgICAgIHJldHVybl9kYXRhLnByaWNlX2RhdGEuZmFjZWJvb2sucG9zdF9wcmljZSAgICA9IGluZmx1ZW5jZXJfZGF0YVswXS5mYWNlYm9va19wb3N0X3ByaWNlID8gaW5mbHVlbmNlcl9kYXRhWzBdLmZhY2Vib29rX3Bvc3RfcHJpY2U6IDA7XHJcbiAgICAgICAgICAgICAgcmV0dXJuX2RhdGEucHJpY2VfZGF0YS5mYWNlYm9vay5mcmllbmRfcHJpY2UgID0gaW5mbHVlbmNlcl9kYXRhWzBdLmZhY2Vib29rX2ZyaWVuZF9wcmljZSA/IGluZmx1ZW5jZXJfZGF0YVswXS5mYWNlYm9va19mcmllbmRfcHJpY2UgOiAwO1xyXG4gICAgICAgICAgICAgIHJldHVybl9kYXRhLnByaWNlX2RhdGEuZmFjZWJvb2suY29tbWVudF9wcmljZSA9IGluZmx1ZW5jZXJfZGF0YVswXS5mYWNlYm9va19jb21tZW50X3ByaWNlID8gaW5mbHVlbmNlcl9kYXRhWzBdLmZhY2Vib29rX2NvbW1lbnRfcHJpY2UgOiAwO1xyXG4gICAgICAgICAgICAgIHJldHVybl9kYXRhLnByaWNlX2RhdGEuZmFjZWJvb2subGlrZV9wcmljZSAgICA9IGluZmx1ZW5jZXJfZGF0YVswXS5mYWNlYm9va19saWtlX3ByaWNlID8gaW5mbHVlbmNlcl9kYXRhWzBdLmZhY2Vib29rX2xpa2VfcHJpY2UgOiAwO1xyXG4gICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgIHJldHVybl9kYXRhLnByaWNlX2RhdGEuaW5zdGFncmFtLnBvc3RfcHJpY2UgICAgID0gaW5mbHVlbmNlcl9kYXRhWzBdLmluc3RhZ3JhbV9wb3N0X3ByaWNlID8gaW5mbHVlbmNlcl9kYXRhWzBdLmluc3RhZ3JhbV9wb3N0X3ByaWNlOiAwO1xyXG4gICAgICAgICAgICAgIHJldHVybl9kYXRhLnByaWNlX2RhdGEuaW5zdGFncmFtLnN0b3J5X3ByaWNlICAgID0gaW5mbHVlbmNlcl9kYXRhWzBdLmluc3RhZ3JhbV9zdG9yeV9wcmljZSA/IGluZmx1ZW5jZXJfZGF0YVswXS5pbnN0YWdyYW1fc3RvcnlfcHJpY2U6IDA7XHJcbiAgICAgICAgICAgICAgcmV0dXJuX2RhdGEucHJpY2VfZGF0YS5pbnN0YWdyYW0uY29tbWVudF9wcmljZSAgPSBpbmZsdWVuY2VyX2RhdGFbMF0uaW5zdGFncmFtX2NvbW1lbnRfcHJpY2UgPyBpbmZsdWVuY2VyX2RhdGFbMF0uaW5zdGFncmFtX2NvbW1lbnRfcHJpY2U6IDA7XHJcbiAgICAgICAgICAgICAgcmV0dXJuX2RhdGEucHJpY2VfZGF0YS5pbnN0YWdyYW0ubGlrZV9wcmljZSAgICAgPSBpbmZsdWVuY2VyX2RhdGFbMF0uaW5zdGFncmFtX2ZvbGxvd19wcmljZSA/IGluZmx1ZW5jZXJfZGF0YVswXS5pbnN0YWdyYW1fZm9sbG93X3ByaWNlOiAwO1xyXG4gICAgICAgICAgICAgIHJldHVybl9kYXRhLnByaWNlX2RhdGEuaW5zdGFncmFtLmZvbGxvd19wcmljZSAgID0gaW5mbHVlbmNlcl9kYXRhWzBdLmluc3RhZ3JhbV9saWtlX3ByaWNlID8gaW5mbHVlbmNlcl9kYXRhWzBdLmluc3RhZ3JhbV9saWtlX3ByaWNlOiAwO1xyXG4gICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgIHJldHVybl9kYXRhLnByaWNlX2RhdGEudHdpdHRlci50d2VldF9wcmljZSAgICA9IGluZmx1ZW5jZXJfZGF0YVswXS50d2l0dGVyX3R3ZWV0X3ByaWNlID8gaW5mbHVlbmNlcl9kYXRhWzBdLnR3aXR0ZXJfdHdlZXRfcHJpY2U6IDA7XHJcbiAgICAgICAgICAgICAgcmV0dXJuX2RhdGEucHJpY2VfZGF0YS50d2l0dGVyLnJldHdlZXRfcHJpY2UgID0gaW5mbHVlbmNlcl9kYXRhWzBdLnR3aXR0ZXJfcmV0d2VldF9wcmljZSA/IGluZmx1ZW5jZXJfZGF0YVswXS50d2l0dGVyX3JldHdlZXRfcHJpY2U6IDA7XHJcbiAgICAgICAgICAgICAgcmV0dXJuX2RhdGEucHJpY2VfZGF0YS50d2l0dGVyLmNvbW1lbnRfcHJpY2UgID0gaW5mbHVlbmNlcl9kYXRhWzBdLnR3aXR0ZXJfY29tbWVudF9wcmljZSA/IGluZmx1ZW5jZXJfZGF0YVswXS50d2l0dGVyX2NvbW1lbnRfcHJpY2U6IDA7XHJcbiAgICAgICAgICAgICAgcmV0dXJuX2RhdGEucHJpY2VfZGF0YS50d2l0dGVyLmxpa2VfcHJpY2UgICAgID0gaW5mbHVlbmNlcl9kYXRhWzBdLnR3aXR0ZXJfbGlrZV9wcmljZSA/IGluZmx1ZW5jZXJfZGF0YVswXS50d2l0dGVyX2xpa2VfcHJpY2U6IDA7XHJcbiAgICAgICAgICAgICAgcmV0dXJuX2RhdGEucHJpY2VfZGF0YS50d2l0dGVyLmZvbGxvd19wcmljZSAgID0gaW5mbHVlbmNlcl9kYXRhWzBdLnR3aXR0ZXJfZm9sbG93X3ByaWNlID8gaW5mbHVlbmNlcl9kYXRhWzBdLnR3aXR0ZXJfZm9sbG93X3ByaWNlOiAwO1xyXG4gICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgIHJldHVybl9kYXRhLmZvbGxvd2VycyAgICAgPSBpbmZsdWVuY2VyX2RhdGFbMF0gPyBpbmZsdWVuY2VyX2RhdGFbMF0gOiAwO1xyXG4gICAgICAgICAgICAgIHJldHVybl9kYXRhLnByb2ZpbGVfZGF0YSAgPSBpbmZsdWVuY2VyX2RhdGFbMF0udmFscyA/IGluZmx1ZW5jZXJfZGF0YVswXS52YWxzWzBdIDogXCJcIjtcclxuICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgaW5mbHVlbmNlci5pbmZsdWVuY2Vycy5maW5kT25lKHtfaWQgOiB1c2VyX2lkfSxmdW5jdGlvbihlcnIgLCBwcm9maWxlX2RhdGEpe1xyXG5cclxuICAgICAgICAgICAgICBpZiAoZXJyKSAgcmVzLmpzb24oe3N0YXR1czpcImZhaWx1cmVcIixzdGF0dXNDb2RlOjEwMCxtc2c6ZXJyfSk7XHJcbiAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgaWYocHJvZmlsZV9kYXRhKXtcclxuICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICAvL3Byb2ZpbGVfZGF0YS5wcm9maWxlX3BpY3R1cmUgPSAgcHJvZmlsZV9kYXRhLnByb2ZpbGVfcGljdHVyZSA/IFwiaHR0cDovL1wiK3JlcS5oZWFkZXJzLmhvc3QrXCIvXCIrcHJvZmlsZV9kYXRhLnByb2ZpbGVfcGljdHVyZSA6IFwiL2Fzc2V0cy9pbWFnZXMvbWFuLWF2YXRhci1wcm9maWxlLmpwZ1wiO1xyXG4gICAgICAgICAgICAgICAgcHJvZmlsZV9kYXRhLnByb2ZpbGVfcGljdHVyZSA9ICBwcm9maWxlX2RhdGEucHJvZmlsZV9waWN0dXJlID8gXCJodHRwOi8vXCIrcmVxLmhlYWRlcnMuaG9zdCtcIi9cIitwcm9maWxlX2RhdGEucHJvZmlsZV9waWN0dXJlIDogXCJcIjtcclxuICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgIH0gXHJcbiAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgcmV0dXJuX2RhdGEucHJvZmlsZV9kYXRhID0gcHJvZmlsZV9kYXRhO1xyXG4gICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgIGluZmx1ZW5jZXJfcG9zdHMuaW5mbHVlbmNlcl9wb3N0cy5maW5kKHtpbmZsdWVuY2VyaWQ6dXNlcl9pZH0sIGZ1bmN0aW9uKHBvc3RfZXJyb3IsIHBvc3RzKSB7XHJcbiAgICAgICAgICAgICAgICBpZiAocG9zdF9lcnJvcikgIHJlcy5qc29uKHtzdGF0dXM6XCJmYWlsdXJlXCIsc3RhdHVzQ29kZToxMDAsbXNnOnBvc3RfZXJyb3J9KTtcclxuICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICBpZihwb3N0cyl7XHJcbiAgICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICAgIGZvcih2YXIgaSA9IDAgOyBpIDwgcG9zdHMubGVuZ3RoO2krKyl7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgIHZhciBwb3N0X3ZhbHVlID0geyBcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlkICAgICAgICAgICAgOiBwb3N0c1tpXS5faWQgLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaW5mbHVlbmNlcl9pZCA6IHBvc3RzW2ldLmluZmx1ZW5jZXJpZCAsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbWFnZSAgICAgICAgIDogXCJodHRwOi8vXCIrcmVxLmhlYWRlcnMuaG9zdCtcIi9cIitwb3N0c1tpXS5wb3N0X25hbWUsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB1cGxvYWRfdHlwZSAgIDogcG9zdHNbaV0udXBsb2FkX3R5cGUgPyBwb3N0c1tpXS51cGxvYWRfdHlwZSA6ICdpbWFnZScsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvL3RleHRfbmFtZSAgICAgOiBcIkBsb3JlbmdyYXkgXCIrcG9zdHNbaV0ubWVkaWFfdHlwZStpLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVzY3JpcHRpb24gICA6IHBvc3RzW2ldLmRlc2NyaXB0aW9uLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJpY2UgICAgICAgICA6IHBvc3RzW2ldLnByaWNlLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGlrZXNfY291bnQgICA6IFwiNTAuOEtcIixcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbW1lbnRzX2NvdW50OiBcIjIwLjhLXCJcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9O1xyXG4gICAgXHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuX2RhdGEucG9zdHNbaV0gPSBwb3N0X3ZhbHVlOyBcclxuICAgICAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgICAgLy9yZXR1cm5fZGF0YS5wb3N0cz1wb3N0cztcclxuICAgICAgICAgICAgICAgICAgXHJcblxyXG4gICAgICAgICAgICAgICAgICByZXMuanNvbih7c3RhdHVzOlwic3VjY2Vzc1wiLHN0YXR1c0NvZGU6MjAwLGRhdGE6aW5mbHVlbmNlcl9kYXRhLG15ZGF0YTpyZXR1cm5fZGF0YX0pO1xyXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgcmVzLmpzb24oe3N0YXR1czpcInN1Y2Nlc3NcIixzdGF0dXNDb2RlOjIwMCxkYXRhOmluZmx1ZW5jZXJfZGF0YSxteWRhdGE6cmV0dXJuX2RhdGF9KTtcclxuICAgICAgICAgICAgICAgIH1cclxuICBcclxuICAgICAgICAgICAgICB9KVxyXG5cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgICAgfSk7XHJcbiAgICAgIH0pO1xyXG5cclxuICAgICAgcm91dGVyLnBvc3QoJy91cGRhdGVfcHJpY2UnLCBmdW5jdGlvbihyZXEgLCByZXMpe1xyXG5cclxuICAgICAgICB2YXIgdXNlcl9kYXRhID0gcmVxLmJvZHk7XHJcbiAgICAgICAgXHJcblxyXG4gICAgICAgIGlmKHVzZXJfZGF0YS5tZWRpYV90eXBlID09IFwidGlrdG9rXCIpe1xyXG4gICAgICAgICAgdmFyIHVwZGF0ZV9kYXRhID0ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aWt0b2tfcG9zdF9wcmljZSA6IHVzZXJfZGF0YS5wb3N0X3ByaWNlLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aWt0b2tfc3RvcnlfcHJpY2UgOiB1c2VyX2RhdGEuc3RvcnlfcHJpY2UsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgIH1lbHNlIGlmKHVzZXJfZGF0YS5tZWRpYV90eXBlID09IFwiZmFjZWJvb2tcIil7XHJcblxyXG4gICAgICAgICAgdmFyIHVwZGF0ZV9kYXRhID0ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmYWNlYm9va19wb3N0X3ByaWNlICAgICA6IHVzZXJfZGF0YS5wb3N0X3ByaWNlLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmYWNlYm9va19mcmllbmRfcHJpY2UgICA6IHVzZXJfZGF0YS5mcmllbmRfcHJpY2UsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZhY2Vib29rX2NvbW1lbnRfcHJpY2UgIDogdXNlcl9kYXRhLmNvbW1lbnRfcHJpY2UsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZhY2Vib29rX2xpa2VfcHJpY2UgICAgIDogdXNlcl9kYXRhLmxpa2VfcHJpY2UsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgIH1lbHNlIGlmKHVzZXJfZGF0YS5tZWRpYV90eXBlID09IFwiaW5zdGFncmFtXCIpe1xyXG5cclxuICAgICAgICAgIHZhciB1cGRhdGVfZGF0YSA9IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaW5zdGFncmFtX3Bvc3RfcHJpY2UgOiB1c2VyX2RhdGEucG9zdF9wcmljZSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaW5zdGFncmFtX3N0b3J5X3ByaWNlIDogdXNlcl9kYXRhLnN0b3J5X3ByaWNlLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbnN0YWdyYW1fY29tbWVudF9wcmljZSA6IHVzZXJfZGF0YS5jb21tZW50X3ByaWNlLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbnN0YWdyYW1fbGlrZV9wcmljZSA6IHVzZXJfZGF0YS5saWtlX3ByaWNlLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbnN0YWdyYW1fZm9sbG93X3ByaWNlIDogdXNlcl9kYXRhLmZvbGxvd19wcmljZSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgfWVsc2UgaWYodXNlcl9kYXRhLm1lZGlhX3R5cGUgPT0gXCJ0d2l0dGVyXCIpe1xyXG5cclxuICAgICAgICAgIHZhciB1cGRhdGVfZGF0YSA9IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHdpdHRlcl90d2VldF9wcmljZSAgIDogdXNlcl9kYXRhLnR3ZWV0X3ByaWNlLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0d2l0dGVyX3JldHdlZXRfcHJpY2UgOiB1c2VyX2RhdGEucmV0d2VldF9wcmljZSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHdpdHRlcl9jb21tZW50X3ByaWNlIDogdXNlcl9kYXRhLmNvbW1lbnRfcHJpY2UsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR3aXR0ZXJfbGlrZV9wcmljZSAgICA6IHVzZXJfZGF0YS5saWtlX3ByaWNlLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0d2l0dGVyX2ZvbGxvd19wcmljZSAgOiB1c2VyX2RhdGEuZm9sbG93X3ByaWNlLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC8vY29uc29sZS5sb2codXBkYXRlX2RhdGEpO3JldHVybjtcclxuICAgICAgICBpbmZsdWVuY2Vyc19kYXRhLmluZmx1ZW5jZXJzX2RhdGEudXBkYXRlT25lKHtpbmZsdWVuY2VyaWQgOiBuZXcgT2JqZWN0SWQodXNlcl9kYXRhLnVzZXJfaWQpfSAsIHskc2V0OnVwZGF0ZV9kYXRhfSxmdW5jdGlvbihlcnIgLCBkYXRhKXtcclxuXHJcbiAgICAgICAgICBpZihlcnIpe1xyXG4gICAgICAgICAgICByZXMuanNvbih7c3RhdHVzOlwiZmFpbHVyZVwiLHN0YXR1c0NvZGU6MTAwLGRhdGE6ZXJyfSk7XHJcbiAgICAgICAgICB9ZWxzZXtcclxuXHJcbiAgICAgICAgICAgIHJlcy5qc29uKHtzdGF0dXM6XCJzdWNjZXNzXCIsc3RhdHVzQ29kZToyMDAsZGF0YTpkYXRhfSk7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfSlcclxuXHJcbiAgICAgIH0pO1xyXG5cclxuICAgICAgcm91dGVyLnBvc3QoJy91cGRhdGVfcHJvZmlsZScsZnVuY3Rpb24ocmVxICwgcmVzKXtcclxuXHJcbiAgICAgICAgbGV0IHVzZXJfZGF0YSA9IHJlcS5ib2R5O1xyXG4gICAgICAgIHZhciB1cGRhdGVfZGF0YSA9IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTp1c2VyX2RhdGEubmFtZSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy9lbWFpbDp1c2VyX2RhdGEuZW1haWwsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgfTtcclxuICAgICAgICBcclxuICAgICAgICBpbmZsdWVuY2VyLmluZmx1ZW5jZXJzLnVwZGF0ZU9uZSh7X2lkIDogdXNlcl9kYXRhLnVzZXJfaWR9ICwgeyRzZXQ6dXBkYXRlX2RhdGF9LGZ1bmN0aW9uKGVyciAsIGRhdGEpe1xyXG5cclxuICAgICAgICAgIGlmKGVycil7XHJcbiAgICAgICAgICAgIHJlcy5qc29uKHtzdGF0dXM6XCJmYWlsdXJlXCIsc3RhdHVzQ29kZToxMDAsZGF0YTplcnJ9KTtcclxuICAgICAgICAgIH1lbHNle1xyXG5cclxuICAgICAgICAgICAgcmVzLmpzb24oe3N0YXR1czpcInN1Y2Nlc3NcIixzdGF0dXNDb2RlOjIwMCxkYXRhOmRhdGF9KTtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgICAgfSk7XHJcblxyXG5cclxuICAgICAgcm91dGVyLnBvc3QoJy91cGxvYWRfcG9zdCcsIHVwbG9hZC5zaW5nbGUoJ3VwbG9hZGVkSW1hZ2UnKSwgKHJlcSwgcmVzLCBuZXh0KSA9PiB7XHJcbiAgICAgICAgXHJcbiAgICAgICAgY29uc3QgZmlsZSA9IHJlcS5maWxlXHJcbiAgICAgICAgdmFyIHVzZXJfZGF0YSA9IHJlcS5ib2R5O1xyXG4gICAgICAgIFxyXG4gICAgICAgIGlmICghZmlsZSkge1xyXG4gICAgICAgICAgICBjb25zdCBlcnJvciA9IG5ldyBFcnJvcignUGxlYXNlIHVwbG9hZCBhIGZpbGUnKVxyXG4gICAgICAgICAgICBlcnJvci5odHRwU3RhdHVzQ29kZSA9IDQwMFxyXG4gICAgICAgICAgICByZXR1cm4gbmV4dChlcnJvcilcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHZhciBwb3N0X2NyZWF0ZSA9IG5ldyBpbmZsdWVuY2VyX3Bvc3RzLmluZmx1ZW5jZXJfcG9zdHMoKTtcclxuICAgICAgICBcclxuICAgICAgICBwb3N0X2NyZWF0ZS5wb3N0X25hbWUgICAgID0gZmlsZS5maWxlbmFtZTtcclxuICAgICAgICBwb3N0X2NyZWF0ZS5pbmZsdWVuY2VyaWQgID0gdXNlcl9kYXRhLnVzZXJfaWQ7XHJcbiAgICAgICAgLy8gcG9zdF9jcmVhdGUubWVkaWFfdHlwZSAgICA9IHVzZXJfZGF0YS5tZWRpYV90eXBlO1xyXG4gICAgICAgIC8vIHBvc3RfY3JlYXRlLnBvc3RfdHlwZSAgICAgPSB1c2VyX2RhdGEucG9zdF90eXBlO1xyXG4gICAgICAgIHBvc3RfY3JlYXRlLnByaWNlICAgICAgICAgPSB1c2VyX2RhdGEucHJpY2U7XHJcbiAgICAgICAgcG9zdF9jcmVhdGUuZGVzY3JpcHRpb24gICA9IHVzZXJfZGF0YS5kZXNjcmlwdGlvbjtcclxuICAgICAgICBwb3N0X2NyZWF0ZS51cGxvYWRfdHlwZSAgID0gdXNlcl9kYXRhLnVwbG9hZF90eXBlO1xyXG4gICAgICAgIFxyXG4gICAgICAgIFxyXG4gICAgICAgIHBvc3RfY3JlYXRlLnNhdmUoZnVuY3Rpb24oZXJyICxkYXRhKXtcclxuXHJcbiAgICAgICAgICBpZiAoZXJyKSAgcmVzLmpzb24oe3N0YXR1czpcImZhaWx1cmVcIixzdGF0dXNDb2RlOjEwMCxtc2c6ZXJyfSk7XHJcbiAgICAgICAgICByZXMuc3RhdHVzKDIwMCkuc2VuZCh7IHN0YXR1c0NvZGU6IDIwMCwgc3RhdHVzOiAnc3VjY2VzcycsIGRhdGE6IGZpbGUsIH0pXHJcbiAgICAgICAgfSk7XHJcbiAgICAgIFxyXG4gICAgICB9LCAoZXJyb3IsIHJlcSwgcmVzLCBuZXh0KSA9PiB7XHJcbiAgICAgICAgXHJcbiAgICAgICAgcmVzLnN0YXR1cyg0MDApLnNlbmQoeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KVxyXG4gICAgICB9KTtcclxuXHJcbiAgICAgIHJvdXRlci5nZXQoXCIvZGVsZXRlX3Bvc3RcIixmdW5jdGlvbihyZXEgLCByZXMpeyBcclxuXHJcbiAgICAgICAgdmFyICBwb3N0X2lkID0gcmVxLnF1ZXJ5LnBvc3RfaWQ7XHJcblxyXG4gICAgICAgIGluZmx1ZW5jZXJfcG9zdHMuaW5mbHVlbmNlcl9wb3N0cy5kZWxldGVPbmUoe19pZDpwb3N0X2lkfSxmdW5jdGlvbihlcnJvciAsIGRhdGEpe1xyXG4gICAgICAgICAgaWYoZXJyb3IpIHJlcy5qc29uKHtzdGF0dXM6XCJmYWlsdXJlXCIsc3RhdHVzQ29kZToxMDAsZGF0YTplcnJvcn0pO1xyXG4gICAgICAgICAgcmVzLmpzb24oe3N0YXR1c0NvZGU6IDIwMCwgc3RhdHVzOiAnc3VjY2VzcycsIGRhdGE6IGRhdGF9KTtcclxuICAgICAgICB9KVxyXG4gICAgICB9KTtcclxuXHJcblxyXG4gICAgICByb3V0ZXIucG9zdCgnL3VwbG9hZF9wcm9maWxlX2ltYWdlJywgdXBsb2FkLnNpbmdsZSgncHJvZmlsZUltYWdlJyksIChyZXEsIHJlcywgbmV4dCkgPT4ge1xyXG4gICAgICAgIGNvbnN0IGZpbGUgPSByZXEuZmlsZVxyXG4gICAgICAgIHZhciB1c2VyX2RhdGEgPSByZXEuYm9keTtcclxuICAgICAgICBcclxuICAgICAgICBpZiAoIWZpbGUpIHtcclxuICAgICAgICAgICAgY29uc3QgZXJyb3IgPSBuZXcgRXJyb3IoJ1BsZWFzZSB1cGxvYWQgYSBmaWxlJylcclxuICAgICAgICAgICAgZXJyb3IuaHR0cFN0YXR1c0NvZGUgPSA0MDBcclxuICAgICAgICAgICAgcmV0dXJuIG5leHQoZXJyb3IpXHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBsZXQgdXBkYXRlX2RhdGEgPSB7IHByb2ZpbGVfcGljdHVyZSA6IGZpbGUuZmlsZW5hbWUgfTtcclxuXHJcbiAgICAgICAgaW5mbHVlbmNlci5pbmZsdWVuY2Vycy51cGRhdGVPbmUoe19pZCA6IHVzZXJfZGF0YS51c2VyX2lkfSx7JHNldDp1cGRhdGVfZGF0YX0sZnVuY3Rpb24oZXJyICwgdXBkYXRlX2R0YSl7XHJcblxyXG4gICAgICAgICAgaWYoZXJyKXtcclxuICAgICAgICAgICAgcmVzLmpzb24oe3N0YXR1czpcImZhaWx1cmVcIixzdGF0dXNDb2RlOjEwMCxkYXRhOmVycn0pO1xyXG4gICAgICAgICAgfWVsc2V7XHJcblxyXG4gICAgICAgICAgICByZXMuanNvbih7c3RhdHVzOlwic3VjY2Vzc1wiLHN0YXR1c0NvZGU6MjAwLGRhdGE6dXBkYXRlX2R0YX0pO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIFxyXG4gICAgICBcclxuICAgICAgfSwgKGVycm9yLCByZXEsIHJlcywgbmV4dCkgPT4ge1xyXG4gICAgICAgIHJlcy5zdGF0dXMoNDAwKS5zZW5kKHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSlcclxuICAgICAgfSk7XHJcblxyXG4gICAgICByb3V0ZXIuZ2V0KCcvaW5mbHVlbmNlcnMnLGZ1bmN0aW9uKHJlcSwgcmVzLCBuZXh0KSB7XHJcbiAgICAgICAgaW5mbHVlbmNlcnNfZGF0YS5pbmZsdWVuY2Vyc19kYXRhLmFnZ3JlZ2F0ZShbXHJcbiAgICAgICAgICAgIHsgXCIkbG9va3VwXCI6IHtcclxuICAgICAgICAgICAgICAgICAgICBcImZyb21cIjogXCJpbmZsdWVuY2Vyc1wiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwibG9jYWxGaWVsZFwiOiBcImluZmx1ZW5jZXJpZFwiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwiZm9yZWlnbkZpZWxkXCI6IFwiX2lkXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJhc1wiOiBcInZhbHNcIlxyXG4gICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIF0sIGZ1bmN0aW9uKGVyciwgcmVzX2RhdGEpIHtcclxuICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICBpZiAoZXJyKSAgcmVzLmpzb24oe3N0YXR1czpcImZhaWx1cmVcIixzdGF0dXNDb2RlOjEwMCxlcnJvcjplcnJ9KTtcclxuXHJcbiAgICAgICAgICAgICAgICBmb3IodmFyIGkgPSAwOyBpIDwgcmVzX2RhdGEubGVuZ3RoOyBpKyspe1xyXG5cclxuICAgICAgICAgICAgICAgICAgcmVzX2RhdGFbaV0udHdpdHRlcmZvbGxvd2VycyAgICAgICAgICA9IHJlc19kYXRhW2ldLnR3aXR0ZXJmb2xsb3dlcnMgPyByZXNfZGF0YVtpXS50d2l0dGVyZm9sbG93ZXJzIDogMDtcclxuICAgICAgICAgICAgICAgICAgcmVzX2RhdGFbaV0udGlrdG9rZm9sbG93ZXJzICAgICAgICAgICA9IHJlc19kYXRhW2ldLnRpa3Rva2ZvbGxvd2VycyA/IHJlc19kYXRhW2ldLnRpa3Rva2ZvbGxvd2VycyA6IDA7XHJcbiAgICAgICAgICAgICAgICAgIHJlc19kYXRhW2ldLmZhY2Vib29rZm9sbG93ZXJzICAgICAgICAgPSByZXNfZGF0YVtpXS5mYWNlYm9va2ZvbGxvd2VycyA/IHJlc19kYXRhW2ldLmZhY2Vib29rZm9sbG93ZXJzIDogMDtcclxuICAgICAgICAgICAgICAgICAgcmVzX2RhdGFbaV0uaW5zdGFncmFtZm9sbG93ZXJzICAgICAgICA9IHJlc19kYXRhW2ldLmluc3RhZ3JhbWZvbGxvd2VycyA/IHJlc19kYXRhW2ldLmluc3RhZ3JhbWZvbGxvd2VycyA6IDA7XHJcbiAgICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgICAgcmVzX2RhdGFbaV0udGlrdG9rX3N0b3J5X3ByaWNlICAgICAgICA9IHJlc19kYXRhW2ldLnRpa3Rva19zdG9yeV9wcmljZSA/IHJlc19kYXRhW2ldLnRpa3Rva19zdG9yeV9wcmljZSA6IDA7XHJcbiAgICAgICAgICAgICAgICAgIHJlc19kYXRhW2ldLnRpa3Rva19wb3N0X3ByaWNlICAgICAgICAgPSByZXNfZGF0YVtpXS50aWt0b2tfcG9zdF9wcmljZSA/IHJlc19kYXRhW2ldLnRpa3Rva19wb3N0X3ByaWNlIDogMDtcclxuXHJcbiAgICAgICAgICAgICAgICAgIHJlc19kYXRhW2ldLnR3aXR0ZXJfdHdlZXRfcHJpY2UgICAgICAgPSByZXNfZGF0YVtpXS50d2l0dGVyX3R3ZWV0X3ByaWNlID8gcmVzX2RhdGFbaV0udHdpdHRlcl90d2VldF9wcmljZSA6IDA7XHJcbiAgICAgICAgICAgICAgICAgIHJlc19kYXRhW2ldLnR3aXR0ZXJfcmV0d2VldF9wcmljZSAgICAgPSByZXNfZGF0YVtpXS50d2l0dGVyX3JldHdlZXRfcHJpY2UgPyByZXNfZGF0YVtpXS50d2l0dGVyX3JldHdlZXRfcHJpY2UgOiAwO1xyXG4gICAgICAgICAgICAgICAgICByZXNfZGF0YVtpXS50d2l0dGVyX2xpa2VfcHJpY2UgICAgICAgID0gcmVzX2RhdGFbaV0udHdpdHRlcl9saWtlX3ByaWNlID8gcmVzX2RhdGFbaV0udHdpdHRlcl9saWtlX3ByaWNlIDogMDtcclxuICAgICAgICAgICAgICAgICAgcmVzX2RhdGFbaV0udHdpdHRlcl9mb2xsb3dfcHJpY2UgICAgICA9IHJlc19kYXRhW2ldLnR3aXR0ZXJfZm9sbG93X3ByaWNlID8gcmVzX2RhdGFbaV0udHdpdHRlcl9mb2xsb3dfcHJpY2UgOiAwO1xyXG4gICAgICAgICAgICAgICAgICByZXNfZGF0YVtpXS50d2l0dGVyX2NvbW1lbnRfcHJpY2UgICAgID0gcmVzX2RhdGFbaV0udHdpdHRlcl9jb21tZW50X3ByaWNlID8gcmVzX2RhdGFbaV0udHdpdHRlcl9jb21tZW50X3ByaWNlIDogMDtcclxuXHJcbiAgICAgICAgICAgICAgICAgIHJlc19kYXRhW2ldLmluc3RhZ3JhbV9wb3N0X3ByaWNlICAgICAgPSByZXNfZGF0YVtpXS5pbnN0YWdyYW1fcG9zdF9wcmljZSA/IHJlc19kYXRhW2ldLmluc3RhZ3JhbV9wb3N0X3ByaWNlIDogMDtcclxuICAgICAgICAgICAgICAgICAgcmVzX2RhdGFbaV0uaW5zdGFncmFtX3N0b3J5X3ByaWNlICAgICA9IHJlc19kYXRhW2ldLmluc3RhZ3JhbV9zdG9yeV9wcmljZSA/IHJlc19kYXRhW2ldLmluc3RhZ3JhbV9zdG9yeV9wcmljZSA6IDA7XHJcbiAgICAgICAgICAgICAgICAgIHJlc19kYXRhW2ldLmluc3RhZ3JhbV9jb21tZW50X3ByaWNlICAgPSByZXNfZGF0YVtpXS5pbnN0YWdyYW1fY29tbWVudF9wcmljZSA/IHJlc19kYXRhW2ldLmluc3RhZ3JhbV9jb21tZW50X3ByaWNlIDogMDtcclxuICAgICAgICAgICAgICAgICAgcmVzX2RhdGFbaV0uaW5zdGFncmFtX2ZvbGxvd19wcmljZSAgICA9IHJlc19kYXRhW2ldLmluc3RhZ3JhbV9mb2xsb3dfcHJpY2UgPyByZXNfZGF0YVtpXS5pbnN0YWdyYW1fZm9sbG93X3ByaWNlIDogMDtcclxuICAgICAgICAgICAgICAgICAgcmVzX2RhdGFbaV0uaW5zdGFncmFtX2xpa2VfcHJpY2UgICAgICA9IHJlc19kYXRhW2ldLmluc3RhZ3JhbV9saWtlX3ByaWNlID8gcmVzX2RhdGFbaV0uaW5zdGFncmFtX2xpa2VfcHJpY2UgOiAwO1xyXG4gICAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgICAgcmVzX2RhdGFbaV0uZmFjZWJvb2tfcG9zdF9wcmljZSAgICAgICA9IHJlc19kYXRhW2ldLmZhY2Vib29rX3Bvc3RfcHJpY2UgPyByZXNfZGF0YVtpXS5mYWNlYm9va19wb3N0X3ByaWNlIDogMDtcclxuICAgICAgICAgICAgICAgICAgcmVzX2RhdGFbaV0uZmFjZWJvb2tfbGlrZV9wcmljZSAgICAgICA9IHJlc19kYXRhW2ldLmZhY2Vib29rX2xpa2VfcHJpY2UgPyByZXNfZGF0YVtpXS5mYWNlYm9va19saWtlX3ByaWNlIDogMDtcclxuICAgICAgICAgICAgICAgICAgcmVzX2RhdGFbaV0uZmFjZWJvb2tfZnJpZW5kX3ByaWNlICAgICA9IHJlc19kYXRhW2ldLmZhY2Vib29rX2ZyaWVuZF9wcmljZSA/IHJlc19kYXRhW2ldLmZhY2Vib29rX2ZyaWVuZF9wcmljZSA6IDA7XHJcbiAgICAgICAgICAgICAgICAgIHJlc19kYXRhW2ldLmZhY2Vib29rX2NvbW1lbnRfcHJpY2UgICAgPSByZXNfZGF0YVtpXS5mYWNlYm9va19jb21tZW50X3ByaWNlID8gcmVzX2RhdGFbaV0uZmFjZWJvb2tfY29tbWVudF9wcmljZSA6IDA7XHJcblxyXG4gICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgIHJlcy5qc29uKHtzdGF0dXM6XCJzdWNjZXNzXCIsc3RhdHVzQ29kZToyMDAsZGF0YTpyZXNfZGF0YX0pO1xyXG4gICAgICAgICAgICB9KVxyXG5cclxuICAgIH0pO1xyXG5cclxuICAgIHJvdXRlci5wb3N0KCcvZGVsZXRlSW5mbHVlbmNlcnMnLGZ1bmN0aW9uKHJlcSAsIHJlcyAsIG5leHQpe1xyXG5cclxuICAgICAgbGV0IGluZmx1ZW5jZXJfaWQgPSByZXEuYm9keS5pbmZsdWVuY2VyX2lkO1xyXG5cclxuICAgICAgaW5mbHVlbmNlcl9wb3N0cy5pbmZsdWVuY2VyX3Bvc3RzLmRlbGV0ZU1hbnkoeyBpbmZsdWVuY2VyaWQgOiBpbmZsdWVuY2VyX2lkIH0sZnVuY3Rpb24ocG9zdF9lcnJvciAsIGRhdGEpe1xyXG4gICAgICAgIGlmKHBvc3RfZXJyb3IpIHJlcy5qc29uKHtzdGF0dXM6XCJmYWlsdXJlXCIsc3RhdHVzQ29kZToxMDAsZGF0YTpwb3N0X2Vycm9yfSk7XHJcblxyXG4gICAgICAgIGluZmx1ZW5jZXJzX2RhdGEuaW5mbHVlbmNlcnNfZGF0YS5kZWxldGVNYW55KHtpbmZsdWVuY2VyaWQ6aW5mbHVlbmNlcl9pZH0sZnVuY3Rpb24oaW5mbHVlbmNlcl9lcnJvciAsIGRhdGEpe1xyXG4gICAgICAgICAgaWYoaW5mbHVlbmNlcl9lcnJvcikgcmVzLmpzb24oe3N0YXR1czpcImZhaWx1cmVcIixzdGF0dXNDb2RlOjEwMCxkYXRhOmVycm9yfSk7XHJcblxyXG4gICAgICAgICAgaW5mbHVlbmNlci5pbmZsdWVuY2Vycy5kZWxldGVPbmUoe19pZDppbmZsdWVuY2VyX2lkfSxmdW5jdGlvbihlcnJvciAsIGRhdGEpe1xyXG4gICAgICAgICAgICBpZihlcnJvcikgcmVzLmpzb24oe3N0YXR1czpcImZhaWx1cmVcIixzdGF0dXNDb2RlOjEwMCxkYXRhOmVycm9yfSk7XHJcbiAgXHJcbiAgXHJcbiAgICAgICAgICAgIHJlcy5qc29uKHtzdGF0dXNDb2RlOiAyMDAsIHN0YXR1czogJ3N1Y2Nlc3MnLCBkYXRhOiAnSW5mbHVlbmNlciBkZWxldGVkIHN1Y2Nlc3NmdWxseS4nfSk7XHJcbiAgICAgICAgICB9KVxyXG4gICAgICAgICAgLy9yZXMuanNvbih7c3RhdHVzQ29kZTogMjAwLCBzdGF0dXM6ICdzdWNjZXNzJywgZGF0YTogJ0luZmx1ZW5jZXIgZGVsZXRlZCBzdWNjZXNzZnVsbHkuJ30pO1xyXG4gICAgICAgIH0pXHJcbiAgICAgICAgLy9yZXMuanNvbih7c3RhdHVzQ29kZTogMjAwLCBzdGF0dXM6ICdzdWNjZXNzJywgZGF0YTogZGF0YX0pO1xyXG4gICAgICB9KVxyXG4gICAgfSk7XHJcblxyXG4gICAgcm91dGVyLmdldCgnL2dldE5vdGlmaWNhdGlvbnMnLGZ1bmN0aW9uKHJlcSwgcmVzLCBuZXh0KXtcclxuICAgICAgXHJcbiAgICAgIGxldCBpbmZsdWVuY2VyX2lkID0gcmVxLnF1ZXJ5LmluZmx1ZW5jZXJfaWQ7XHJcbiAgICAgIFxyXG4gICAgICBjaGVja291dC5jaGVja291dC5maW5kKHsgaW5mbHVlbmNlcmlkIDogaW5mbHVlbmNlcl9pZCB9KSAuc29ydChbWydfaWQnLCAtMV1dKS5leGVjKCBmdW5jdGlvbiggZXJyb3IgLCBhbGxfbm90aWZpY2F0aW9ucyl7XHJcbiAgICAgICAgXHJcbiAgICAgICAgaWYoZXJyb3IpIHJlcy5qc29uKHtzdGF0dXNDb2RlOiAyMDAsIHN0YXR1czogJ2Vycm9yJywgZGF0YTogZXJyb3J9KTtcclxuXHJcbiAgICAgICAgY2hlY2tvdXQuY2hlY2tvdXQudXBkYXRlTWFueSh7aW5mbHVlbmNlcmlkIDogaW5mbHVlbmNlcl9pZH0seyRzZXQ6eyBzdGF0dXMgOiAxIH19LGZ1bmN0aW9uKGVyciAsIHVwZGF0ZV9kdGEpe1xyXG5cclxuICAgICAgICB9KTtcclxuICAgICAgICBcclxuICAgICAgICByZXMuanNvbih7c3RhdHVzQ29kZTogMTAwLCBzdGF0dXM6ICdzdWNjZXNzJywgZGF0YTogYWxsX25vdGlmaWNhdGlvbnN9KTtcclxuXHJcblxyXG4gICAgICB9KVxyXG4gICAgfSk7XHJcbiAgICBcclxuICAgIHJvdXRlci5nZXQoJy9nZXROb3RpZmljYXRpb25VbnJlYWRDb3VudCcsZnVuY3Rpb24ocmVxLCByZXMsIG5leHQpe1xyXG4gICAgICBcclxuICAgICAgbGV0IGluZmx1ZW5jZXJfaWQgPSByZXEucXVlcnkuaW5mbHVlbmNlcl9pZDtcclxuICAgICAgXHJcbiAgICAgIGNoZWNrb3V0LmNoZWNrb3V0LmZpbmQoeyBpbmZsdWVuY2VyaWQgOiBpbmZsdWVuY2VyX2lkICxzdGF0dXMgOiAwfSkgLnNvcnQoW1snX2lkJywgLTFdXSkuZXhlYyggZnVuY3Rpb24oIGVycm9yICwgYWxsX25vdGlmaWNhdGlvbnMpe1xyXG4gICAgICAgIFxyXG4gICAgICAgIGlmKGVycm9yKSByZXMuanNvbih7c3RhdHVzQ29kZTogMjAwLCBzdGF0dXM6ICdlcnJvcicsIGRhdGE6IGVycm9yfSk7XHJcbiAgICAgICAgXHJcbiAgICAgICAgXHJcbiAgICAgICAgaWYoYWxsX25vdGlmaWNhdGlvbnMubGVuZ3RoKXtcclxuXHJcbiAgICAgICAgICByZXMuanNvbih7c3RhdHVzQ29kZTogMTAwLCBzdGF0dXM6ICdzdWNjZXNzJywgZGF0YTogYWxsX25vdGlmaWNhdGlvbnN9KTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgXHJcbiAgICAgICAgICByZXMuanNvbih7c3RhdHVzQ29kZTogMjAwLCBzdGF0dXM6ICdlcnJvcicsIGRhdGE6IFwiTm8gZGF0YSBmb3VuZFwifSk7XHJcbiAgICAgICAgfVxyXG4gICAgICB9KVxyXG4gICAgfSk7XHJcblxyXG4gICAgcm91dGVyLnBvc3QoJy9hZGRDYXJkJywgZnVuY3Rpb24ocmVxICwgcmVzKXtcclxuXHJcbiAgICAgIGNvbnNvbGUubG9nKFwicmVxLmJvZHlcIilcclxuICAgICAgY29uc29sZS5sb2cocmVxLmJvZHkpXHJcblxyXG4gICAgICBsZXQgY2FyZF9udW1iZXIgPSByZXEuYm9keS5jYXJkX251bWJlcjtcclxuICAgICAgbGV0IGV4cGlyeV9tb250aCA9IHJlcS5ib2R5LmV4cGlyeV9tb250aDtcclxuICAgICAgbGV0IGV4cGlyeV95ZWFyID0gcmVxLmJvZHkuZXhwaXJ5X3llYXI7XHJcbiAgICAgIGxldCBjdmMgPSByZXEuYm9keS5jdmM7XHJcbiAgICAgIGxldCBpbmZsdWVuY2VyX2lkID0gcmVxLmJvZHkuaW5mbHVlbmNlcl9pZDtcclxuICAgICAgbGV0IGVtYWlsID0gcmVxLmJvZHkuZW1haWw7XHJcbiAgICAgIFxyXG4gICAgICBcclxuXHJcbiAgICAgICAgICAgIC8vICBDcmVhdGUgdG9rZW5cclxuXHJcbiAgICAgICAgICAgIGNvbnN0IHRva2VuID0gIHN0cmlwZS50b2tlbnMuY3JlYXRlKHtcclxuXHJcbiAgICAgICAgICAgICAgY2FyZCAgOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIG51bWJlciAgICA6IGNhcmRfbnVtYmVyLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBleHBfbW9udGggOiBleHBpcnlfbW9udGgsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGV4cF95ZWFyICA6IGV4cGlyeV95ZWFyLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBjdmMgICAgICAgOiBjdmMsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGN1cnJlbmN5ICA6ICdVU0QnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgfSkudGhlbigodG9rZW4pID0+IHtcclxuICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICBjb25zdCBiYW5rQWNjb3VudCA9ICBzdHJpcGUuYWNjb3VudHMuY3JlYXRlRXh0ZXJuYWxBY2NvdW50KFxyXG4gICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICBhY2NvdW50X2lkLFxyXG4gICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICBleHRlcm5hbF9hY2NvdW50ICA6IHRva2VuLmlkLFxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICkudGhlbigoY2FyZF9yZXNwb25zZSkgPT4ge1xyXG5cclxuICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgLy8gQ3JhZXRlIEJhbmsgYWNjb3VudCBpZFxyXG5cclxuICAgICAgICAgICAgICAgIGNvbnN0IGFjY291bnQgPSAgc3RyaXBlLmFjY291bnRzLmNyZWF0ZSh7XHJcbiAgICAgIFxyXG4gICAgICAgICAgICAgICAgICB0eXBlICAgICAgICAgIDogJ2N1c3RvbScsXHJcbiAgICAgICAgICAgICAgICAgIGNvdW50cnkgICAgICAgOiAnVVMnLFxyXG4gICAgICAgICAgICAgICAgICBlbWFpbCAgICAgICAgIDogZW1haWwsXHJcbiAgICAgICAgICAgICAgICAgIGNhcGFiaWxpdGllcyAgOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhcmRfcGF5bWVudHMgOiB7cmVxdWVzdGVkOiB0cnVlfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHJhbnNmZXJzICAgICA6IHtyZXF1ZXN0ZWQ6IHRydWV9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgcmVxdWVzdGVkX2NhcGFiaWxpdGllczogWydjYXJkX3BheW1lbnRzJywgJ3RyYW5zZmVycyddXHJcbiAgICAgICAgICAgICAgICB9KS50aGVuKChhY2NvdW50X3JzcG9uc2UpID0+IHtcclxuXHJcbiAgICAgICAgICAgICAgICAgIHZhciBhY2NvdW50X2luZm8gICAgICAgICAgICAgICAgICAgICAgPSBuZXcgYWNjb3VudF9kYXRhLmFjY291bnRfZGF0YSgpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgYWNjb3VudF9pbmZvLmluZmx1ZW5jZXJpZCAgICAgICAgID0gaW5mbHVlbmNlcl9pZDtcclxuICAgICAgICAgICAgICAgICAgICAgIGFjY291bnRfaW5mby5iYW5rX2FjY291bnRfaWQgICAgICA9IGFjY291bnRfcnNwb25zZS5pZDtcclxuICAgICAgICAgICAgICAgICAgICAgIGFjY291bnRfaW5mby5jYXJkX2lkICAgICAgICAgICAgICA9IGNhcmRfcmVzcG9uc2UuaWQ7XHJcbiAgICAgICAgICAgICAgICAgICAgICBhY2NvdW50X2luZm8ubGFzdF80ICAgICAgICAgICAgICAgPSBjYXJkX3Jlc3BvbnNlLmxhc3Q0O1xyXG4gICAgICAgICAgICAgICAgICAgICAgYWNjb3VudF9pbmZvLmNhcmRfYWRkZWRfcmVzcG9uc2UgID0gSlNPTi5zdHJpbmdpZnkoY2FyZF9yZXNwb25zZSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICBhY2NvdW50X2luZm8uY3JlYXRlZF9hdCAgICAgICAgICAgPSBuZXcgRGF0ZSgpO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhhY2NvdW50X2luZm8pO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICAgIGFjY291bnRfaW5mby5zYXZlKGZ1bmN0aW9uKGFjY291bnRfaW5mb19lcnIsIGFjY291bnRfaW5mb19yZXNwb25zZSkge1xyXG4gICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmKGFjY291bnRfaW5mb19lcnIpIHJlcy5qc29uKHsgc3RhdHVzOidmYWlsdXJlJyAsIHN0YXR1c0NvZGUgOiAxMDAgLCBtc2cgOmFjY291bnRfaW5mb19lcnJ9KTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmVzLmpzb24oe3N0YXR1czpcInN1Y2Nlc3NcIixzdGF0dXNDb2RlOjIwMCxkYXRhOmFjY291bnRfaW5mbyxtc2c6XCJBY2NvdW50IGNyZWF0ZWQgc3VjY2Vzc2Z1bGx5XCJ9KTtcclxuICAgICAgICAgICAgICAgICAgICAgIH0pO1xyXG5cclxuICAgICAgICAgICAgICAgIH0pLmNhdGNoKChhY2NvdW50X2Vycm9yKSA9PiB7XHJcblxyXG4gICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnYWNjb3VudF9lcnJvJyk7XHJcbiAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGFjY291bnRfZXJyb3IpO1xyXG4gICAgICAgICAgICAgICAgICByZXMuc2VuZCh7c3RhdHVzOidmYWlsdXJlJyAsc3RhdHVzQ29kZToxMDAsbXNnOmFjY291bnRfZXJyb3IucmF3Lm1lc3NhZ2UgLCB0eXBlOlwiYWNjb3VudCBlcnJvclwifSk7XHJcbiAgICAgICAgICAgICAgICB9KTtcclxuXHJcblxyXG5cclxuICAgICAgICAgICAgICB9KS5jYXRjaCgoYmFua0FjY291bnRFcnJvcikgPT4ge1xyXG5cclxuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdiYW5rQWNjb3VudEVycm9yJyk7XHJcbiAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGJhbmtBY2NvdW50RXJyb3IpO1xyXG4gICAgICAgICAgICAgICAgcmVzLnNlbmQoe3N0YXR1czonZmFpbHVyZScgLHN0YXR1c0NvZGU6MTAwLG1zZzpiYW5rQWNjb3VudEVycm9yLnJhdy5tZXNzYWdlICwgdHlwZTpcImJhbmsgYWNjb3VudCBlcnJvclwifSk7XHJcbiAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIH0pLmNhdGNoKCh0b2tlbl9lcnIpID0+IHtcclxuICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICBjb25zb2xlLmxvZygndG9rZW5fZXJyJyk7XHJcbiAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHRva2VuX2Vycik7XHJcbiAgICAgICAgICAgICAgcmVzLnNlbmQoe3N0YXR1czonZmFpbHVyZScgLHN0YXR1c0NvZGU6MTAwLG1zZzp0b2tlbl9lcnIucmF3Lm1lc3NhZ2UgLCB0eXBlOlwidG9rZW4gZXJyb3JcIn0pO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgXHJcbiAgICB9KVxyXG4gIFxyXG4gICAgbW9kdWxlLmV4cG9ydHMgPSByb3V0ZXI7Il19",
    "map": {
      "version": 3,
      "sources": [
        "influencers.js"
      ],
      "names": [
        "express",
        "require",
        "router",
        "Router",
        "mongoose",
        "influencer",
        "influencers_data",
        "influencer_posts",
        "checkout",
        "account_data",
        "passwordHash",
        "ObjectId",
        "multer",
        "fileExtension",
        "fs",
        "path",
        "stripe_detail",
        "account_id",
        "Publishable_Key",
        "Secret_Key",
        "stripe",
        "storage",
        "diskStorage",
        "destination",
        "req",
        "file",
        "cb",
        "join",
        "__dirname",
        "filename",
        "fieldname",
        "Date",
        "now",
        "originalname",
        "upload",
        "limits",
        "fileSize",
        "fileFilter",
        "undefined",
        "post",
        "res",
        "influencerCreate",
        "influencers",
        "body",
        "influencer_signup",
        "influencerData",
        "datetime",
        "pass",
        "generate",
        "password",
        "joindate",
        "tiktok",
        "instagram",
        "insta",
        "facebook",
        "fb",
        "twitter",
        "twitterfollowers",
        "twitter_followers",
        "tiktokfollowers",
        "tiktok_followers",
        "facebookfollowers",
        "fb_followers",
        "instagramfollowers",
        "insta_followers",
        "tiktok_post_price",
        "tiktok_story_price",
        "facebook_post_price",
        "facebook_friend_price",
        "facebook_comment_price",
        "facebook_like_price",
        "twitter_tweet_price",
        "twitter_retweet_price",
        "twitter_comment_price",
        "twitter_like_price",
        "twitter_follow_price",
        "instagram_post_price",
        "instagram_story_price",
        "instagram_comment_price",
        "instagram_like_price",
        "instagram_follow_price",
        "findOne",
        "email",
        "err",
        "json",
        "status",
        "statusCode",
        "msg",
        "name",
        "save",
        "influencer_res_err",
        "influencer_res",
        "influencerid",
        "_id",
        "influencermatchid",
        "influencer_data_err",
        "influencer_data_res",
        "data",
        "get",
        "next",
        "aggregate",
        "res_data",
        "error",
        "i",
        "length",
        "user_id",
        "query",
        "influencer_data",
        "return_data",
        "price_data",
        "post_price",
        "story_price",
        "comment_price",
        "like_price",
        "follow_price",
        "friend_price",
        "tweet_price",
        "retweet_price",
        "profile_data",
        "followers",
        "posts",
        "vals",
        "profile_picture",
        "headers",
        "host",
        "find",
        "post_error",
        "post_value",
        "id",
        "influencer_id",
        "image",
        "post_name",
        "upload_type",
        "description",
        "price",
        "likes_count",
        "comments_count",
        "mydata",
        "user_data",
        "media_type",
        "update_data",
        "updateOne",
        "$set",
        "single",
        "Error",
        "httpStatusCode",
        "post_create",
        "send",
        "message",
        "post_id",
        "deleteOne",
        "update_dta",
        "deleteMany",
        "influencer_error",
        "sort",
        "exec",
        "all_notifications",
        "updateMany",
        "console",
        "log",
        "card_number",
        "expiry_month",
        "expiry_year",
        "cvc",
        "token",
        "tokens",
        "create",
        "card",
        "number",
        "exp_month",
        "exp_year",
        "currency",
        "then",
        "bankAccount",
        "accounts",
        "createExternalAccount",
        "external_account",
        "card_response",
        "account",
        "type",
        "country",
        "capabilities",
        "card_payments",
        "requested",
        "transfers",
        "requested_capabilities",
        "account_rsponse",
        "account_info",
        "bank_account_id",
        "card_id",
        "last_4",
        "last4",
        "card_added_response",
        "JSON",
        "stringify",
        "created_at",
        "account_info_err",
        "account_info_response",
        "catch",
        "account_error",
        "raw",
        "bankAccountError",
        "token_err",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "E:\\boomadvertisement\\serverapi\\routes\\",
      "sourcesContent": [
        "\r\nvar express             = require('express');\r\nvar router              = express.Router();\r\nvar mongoose            = require('mongoose');\r\nconst influencer        = require('../models/influencers');\r\nconst influencers_data  = require('../models/influencers_data');\r\nconst influencer_posts  = require('../models/influencers_posts');\r\nconst checkout          = require('../models/checkout');\r\nconst account_data      = require('../models/account_data');\r\n\r\nvar passwordHash        = require('password-hash');\r\nconst {ObjectId}        = require('mongodb'); \r\nconst multer            = require('multer');\r\nvar fileExtension       = require('file-extension')\r\nvar fs                  = require('fs');\r\nconst path              = require('path');\r\nconst stripe_detail     = require('../config/stripe');\r\n\r\nconst account_id        = stripe_detail.account_id; // get it from stripe's account profile info \r\nvar   Publishable_Key   = stripe_detail.Publishable_Key;\r\nvar   Secret_Key        = stripe_detail.Secret_Key;\r\n\r\n\r\nconst stripe = require('stripe')(Secret_Key);\r\n\r\n//process.env.NODE_TLS_REJECT_UNAUTHORIZED = \"1\";\r\n\r\nvar storage = multer.diskStorage({\r\n                                  // Setting directory on disk to save uploaded files\r\n                                  destination: function (req, file, cb) {\r\n                                      \r\n                                    //cb(null, './uploads')\r\n                                    cb(null, path.join(__dirname, '../uploads'))\r\n                                  },\r\n                                  // Setting name of file saved\r\n                                  filename: function (req, file, cb) {\r\n                                      \r\n                                    cb(null, file.fieldname + '-' + Date.now() + '.' + fileExtension(file.originalname))\r\n                                  }\r\n                                });\r\n\r\nvar upload = multer({\r\n  storage : storage,\r\n  limits  : {\r\n              fileSize: 200000000 // Setting Image Size Limit to 2MBs\r\n            },\r\n  fileFilter(req, file, cb) {\r\n      \r\n      // if (!file.originalname.match(/\\.(jpg|jpeg|png)$/)) {\r\n      //     //Error \r\n      //     cb(new Error('Please upload JPG and PNG images only!'))\r\n      // }\r\n      //Success \r\n      cb(undefined, true)\r\n  }\r\n})\r\n\r\n\r\nrouter.post('/register', async function(req,res) {\r\n\r\n      var influencerCreate =  new influencer.influencers(req.body.influencer_signup);\r\n      var influencerData =  new influencers_data.influencers_data(req.body.influencer_signup);\r\n\r\n      var datetime = new Date();\r\n      let pass = passwordHash.generate(req.body.influencer_signup.password)\r\n\r\n      influencerCreate.joindate = datetime\r\n      influencerCreate.password = pass\r\n      influencerCreate.tiktok = req.body.influencer_signup.tiktok\r\n      influencerCreate.instagram = req.body.influencer_signup.insta\r\n      influencerCreate.facebook = req.body.influencer_signup.fb\r\n      influencerCreate.twitter = req.body.influencer_signup.twitter\r\n\r\n      influencerData.twitterfollowers = req.body.influencer_signup.twitter_followers;\r\n      influencerData.tiktokfollowers = req.body.influencer_signup.tiktok_followers;\r\n      influencerData.facebookfollowers = req.body.influencer_signup.fb_followers;\r\n      influencerData.instagramfollowers = req.body.influencer_signup.insta_followers;\r\n\r\n      influencerData.tiktok_post_price = 0;\r\n      influencerData.tiktok_story_price = 0;\r\n      influencerData.facebook_post_price = 0;\r\n      influencerData.facebook_friend_price = 0;\r\n      influencerData.facebook_comment_price = 0;\r\n      influencerData.facebook_like_price = 0;\r\n      influencerData.twitter_tweet_price = 0;\r\n      influencerData.twitter_retweet_price = 0;\r\n      influencerData.twitter_comment_price = 0;\r\n      influencerData.twitter_like_price = 0;\r\n      influencerData.twitter_follow_price = 0;\r\n      influencerData.instagram_post_price = 0;\r\n      influencerData.instagram_story_price = 0;\r\n      influencerData.instagram_comment_price = 0;\r\n      influencerData.instagram_like_price = 0;\r\n      influencerData.instagram_follow_price = 0;\r\n     \r\n      \r\n      \r\n      influencer.influencers.findOne({email:req.body.influencer_signup.email}, function(err, influencers) {\r\n        if (err)  res.json({status:\"failure\",statusCode:100,msg:err});\r\n        \r\n        if(influencers){\r\n         \r\n          res.json({status:\"failure\",statusCode:100,msg:\"Email already exists!!\"});\r\n        }else{\r\n            influencer.influencers.findOne({name:req.body.influencer_signup.name}, function(err, influencers) {\r\n            if (err)  res.json({status:\"failure\",statusCode:100,msg:err});\r\n        \r\n            if(influencers){\r\n              \r\n              res.json({status:\"failure\",statusCode:100,msg:\"Username already exists!!\"});\r\n            }\r\n            else{\r\n\r\n              influencerCreate.save(function (influencer_res_err, influencer_res) {\r\n\r\n                influencerData.influencerid = influencer_res._id;\r\n                influencerData.influencermatchid = influencer_res._id;\r\n                influencerData.save(function (influencer_data_err, influencer_data_res) {\r\n\r\n                  if(influencer_res_err) res.json({ status:'failure' , statusCode : 100 , msg :influencer_res_err});\r\n                  res.json({status:\"success\",statusCode:200,data:influencer_res,msg:\"Signup & SignIn successfully!\"});\r\n              \r\n                });\r\n                \r\n              })\r\n              \r\n            }\r\n          })\r\n        }\r\n      }); \r\n      \r\n    });\r\n\r\n    router.get('/test', function(req,res) {\r\n      res.json(\"it worked vijay\");\r\n    });\r\n\r\n    router.get('/getInfluencers', function(req, res, next) {\r\n        influencers_data.influencers_data.aggregate([\r\n            { \"$lookup\": {\r\n                    \"from\": \"influencers\",\r\n                    \"localField\": \"influencerid\",\r\n                    \"foreignField\": \"_id\",\r\n                    \"as\": \"vals\"\r\n                  }\r\n            }\r\n\r\n            ], function(err, res_data) {\r\n\r\n\r\n              \r\n              if (err)  res.json({status:\"failure\",statusCode:100,error:err});\r\n\r\n\r\n\r\n                for(var i = 0; i < res_data.length; i++){\r\n\r\n                  res_data[i].tiktok_story_price    = res_data[i].tiktok_story_price ? res_data[i].tiktok_story_price : 0;\r\n                  res_data[i].tiktok_post_price     = res_data[i].tiktok_post_price ? res_data[i].tiktok_post_price : 0;\r\n\r\n                  res_data[i].twitter_tweet_price       = res_data[i].twitter_tweet_price ? res_data[i].twitter_tweet_price : 0;\r\n                  res_data[i].twitter_retweet_price     = res_data[i].twitter_retweet_price ? res_data[i].twitter_retweet_price : 0;\r\n                  res_data[i].twitter_like_price        = res_data[i].twitter_like_price ? res_data[i].twitter_like_price : 0;\r\n                  res_data[i].twitter_follow_price      = res_data[i].twitter_follow_price ? res_data[i].twitter_follow_price : 0;\r\n                  res_data[i].twitter_comment_price     = res_data[i].twitter_comment_price ? res_data[i].twitter_comment_price : 0;\r\n\r\n                  res_data[i].instagram_post_price      = res_data[i].instagram_post_price ? res_data[i].instagram_post_price : 0;\r\n                  res_data[i].instagram_story_price     = res_data[i].instagram_story_price ? res_data[i].instagram_story_price : 0;\r\n                  res_data[i].instagram_comment_price   = res_data[i].instagram_comment_price ? res_data[i].instagram_comment_price : 0;\r\n                  res_data[i].instagram_follow_price    = res_data[i].instagram_follow_price ? res_data[i].instagram_follow_price : 0;\r\n                  res_data[i].instagram_like_price      = res_data[i].instagram_like_price ? res_data[i].instagram_like_price : 0;\r\n                  \r\n                  res_data[i].facebook_post_price       = res_data[i].facebook_post_price ? res_data[i].facebook_post_price : 0;\r\n                  res_data[i].facebook_like_price       = res_data[i].facebook_like_price ? res_data[i].facebook_like_price : 0;\r\n                  res_data[i].facebook_friend_price     = res_data[i].facebook_friend_price ? res_data[i].facebook_friend_price : 0;\r\n                  res_data[i].facebook_comment_price    = res_data[i].facebook_comment_price ? res_data[i].facebook_comment_price : 0;\r\n\r\n                }\r\n\r\n                res.json({status:\"success\",statusCode:200,data:res_data});\r\n            })\r\n\r\n    });\r\n\r\n    /**** Trying to get all influencers data as first table influencers ***/\r\n      // router.get('/getInfluencers1', function(req, res, next) {\r\n      //       influencer.influencers.aggregate([\r\n      //         { \"$lookup\": {\r\n      //                 \"from\": \"influencers_data\",\r\n      //                 \"localField\": \"_id\",\r\n      //                 \"foreignField\": \"influencerid\",\r\n      //                 \"as\": \"vals\"\r\n      //               }\r\n      //         }\r\n      //         ], function(err, res_data) {\r\n      //             if (err)  res.json({status:\"failure\",statusCode:100,error:err});\r\n      //               res.json({status:\"success\",statusCode:200,data:res_data});\r\n      //             })\r\n      // });\r\n\r\n     router.get('/singleInfluencer', function(req, res) {\r\n\r\n      var  user_id = req.query.user_id;\r\n      \r\n        influencers_data.influencers_data.aggregate(\r\n            [\r\n              {\r\n                \"$lookup\":{\r\n\r\n                  \"from\": \"influencers\",\r\n                  \"localField\": \"influencerid\",\r\n                  \"foreignField\": \"_id\",\r\n                  \"as\": \"vals\"\r\n              }}\r\n              ,\r\n              {\r\n                \"$match\":{\r\n                  \"influencermatchid\" : user_id\r\n                }\r\n              }\r\n          ]\r\n            ,function(err,influencer_data){\r\n            if(err) res.json({status:\"failure\",statusCode:100,error:err});\r\n            \r\n            var return_data = {\r\n                                price_data:{\r\n                                  tiktok      : { post_price : 0, story_price : 0},\r\n                                  instagram   : { post_price : 0, story_price : 0, comment_price :10 , like_price : 20 , follow_price : 30},\r\n                                  facebook    : { post_price : 0, friend_price : 40 , comment_price : 50 ,like_price : 60},\r\n                                  twitter     : { tweet_price : 70, retweet_price : 80 , comment_price : 90 , like_price : 70 ,follow_price : 80},\r\n                                },\r\n                                profile_data  :\"\",\r\n                                followers   : 0,\r\n                                posts         :[],\r\n                              };\r\n            \r\n            \r\n\r\n            if(influencer_data[0]){\r\n              \r\n              return_data.price_data.tiktok.post_price      = influencer_data[0].tiktok_post_price ? influencer_data[0].tiktok_post_price : 0;\r\n              return_data.price_data.tiktok.story_price     = influencer_data[0].tiktok_story_price ? influencer_data[0].tiktok_story_price: 0;\r\n\r\n              return_data.price_data.facebook.post_price    = influencer_data[0].facebook_post_price ? influencer_data[0].facebook_post_price: 0;\r\n              return_data.price_data.facebook.friend_price  = influencer_data[0].facebook_friend_price ? influencer_data[0].facebook_friend_price : 0;\r\n              return_data.price_data.facebook.comment_price = influencer_data[0].facebook_comment_price ? influencer_data[0].facebook_comment_price : 0;\r\n              return_data.price_data.facebook.like_price    = influencer_data[0].facebook_like_price ? influencer_data[0].facebook_like_price : 0;\r\n              \r\n              return_data.price_data.instagram.post_price     = influencer_data[0].instagram_post_price ? influencer_data[0].instagram_post_price: 0;\r\n              return_data.price_data.instagram.story_price    = influencer_data[0].instagram_story_price ? influencer_data[0].instagram_story_price: 0;\r\n              return_data.price_data.instagram.comment_price  = influencer_data[0].instagram_comment_price ? influencer_data[0].instagram_comment_price: 0;\r\n              return_data.price_data.instagram.like_price     = influencer_data[0].instagram_follow_price ? influencer_data[0].instagram_follow_price: 0;\r\n              return_data.price_data.instagram.follow_price   = influencer_data[0].instagram_like_price ? influencer_data[0].instagram_like_price: 0;\r\n              \r\n              return_data.price_data.twitter.tweet_price    = influencer_data[0].twitter_tweet_price ? influencer_data[0].twitter_tweet_price: 0;\r\n              return_data.price_data.twitter.retweet_price  = influencer_data[0].twitter_retweet_price ? influencer_data[0].twitter_retweet_price: 0;\r\n              return_data.price_data.twitter.comment_price  = influencer_data[0].twitter_comment_price ? influencer_data[0].twitter_comment_price: 0;\r\n              return_data.price_data.twitter.like_price     = influencer_data[0].twitter_like_price ? influencer_data[0].twitter_like_price: 0;\r\n              return_data.price_data.twitter.follow_price   = influencer_data[0].twitter_follow_price ? influencer_data[0].twitter_follow_price: 0;\r\n              \r\n              return_data.followers     = influencer_data[0] ? influencer_data[0] : 0;\r\n              return_data.profile_data  = influencer_data[0].vals ? influencer_data[0].vals[0] : \"\";\r\n              \r\n            }\r\n\r\n            influencer.influencers.findOne({_id : user_id},function(err , profile_data){\r\n\r\n              if (err)  res.json({status:\"failure\",statusCode:100,msg:err});\r\n              \r\n              if(profile_data){\r\n                \r\n                \r\n                //profile_data.profile_picture =  profile_data.profile_picture ? \"http://\"+req.headers.host+\"/\"+profile_data.profile_picture : \"/assets/images/man-avatar-profile.jpg\";\r\n                profile_data.profile_picture =  profile_data.profile_picture ? \"http://\"+req.headers.host+\"/\"+profile_data.profile_picture : \"\";\r\n                \r\n              } \r\n              \r\n              return_data.profile_data = profile_data;\r\n              \r\n              influencer_posts.influencer_posts.find({influencerid:user_id}, function(post_error, posts) {\r\n                if (post_error)  res.json({status:\"failure\",statusCode:100,msg:post_error});\r\n                \r\n                \r\n                if(posts){\r\n                  \r\n                \r\n                  for(var i = 0 ; i < posts.length;i++){\r\n\r\n                    var post_value = { \r\n                                        id            : posts[i]._id ,\r\n                                        influencer_id : posts[i].influencerid ,\r\n                                        image         : \"http://\"+req.headers.host+\"/\"+posts[i].post_name,\r\n                                        upload_type   : posts[i].upload_type ? posts[i].upload_type : 'image',\r\n                                        //text_name     : \"@lorengray \"+posts[i].media_type+i,\r\n                                        description   : posts[i].description,\r\n                                        price         : posts[i].price,\r\n                                        likes_count   : \"50.8K\",\r\n                                        comments_count: \"20.8K\"\r\n                                      };\r\n    \r\n                    return_data.posts[i] = post_value; \r\n                    \r\n                  }\r\n\r\n                  //return_data.posts=posts;\r\n                  \r\n\r\n                  res.json({status:\"success\",statusCode:200,data:influencer_data,mydata:return_data});\r\n                } else {\r\n                  res.json({status:\"success\",statusCode:200,data:influencer_data,mydata:return_data});\r\n                }\r\n  \r\n              })\r\n\r\n            });\r\n            \r\n          });\r\n      });\r\n\r\n      router.post('/update_price', function(req , res){\r\n\r\n        var user_data = req.body;\r\n        \r\n\r\n        if(user_data.media_type == \"tiktok\"){\r\n          var update_data = {\r\n                              tiktok_post_price : user_data.post_price,\r\n                              tiktok_story_price : user_data.story_price,\r\n                              \r\n                            }\r\n        }else if(user_data.media_type == \"facebook\"){\r\n\r\n          var update_data = {\r\n                              facebook_post_price     : user_data.post_price,\r\n                              facebook_friend_price   : user_data.friend_price,\r\n                              facebook_comment_price  : user_data.comment_price,\r\n                              facebook_like_price     : user_data.like_price,\r\n                            }\r\n\r\n        }else if(user_data.media_type == \"instagram\"){\r\n\r\n          var update_data = {\r\n                              instagram_post_price : user_data.post_price,\r\n                              instagram_story_price : user_data.story_price,\r\n                              instagram_comment_price : user_data.comment_price,\r\n                              instagram_like_price : user_data.like_price,\r\n                              instagram_follow_price : user_data.follow_price,\r\n                            }\r\n\r\n        }else if(user_data.media_type == \"twitter\"){\r\n\r\n          var update_data = {\r\n                              twitter_tweet_price   : user_data.tweet_price,\r\n                              twitter_retweet_price : user_data.retweet_price,\r\n                              twitter_comment_price : user_data.comment_price,\r\n                              twitter_like_price    : user_data.like_price,\r\n                              twitter_follow_price  : user_data.follow_price,\r\n                            }\r\n\r\n        }\r\n\r\n        //console.log(update_data);return;\r\n        influencers_data.influencers_data.updateOne({influencerid : new ObjectId(user_data.user_id)} , {$set:update_data},function(err , data){\r\n\r\n          if(err){\r\n            res.json({status:\"failure\",statusCode:100,data:err});\r\n          }else{\r\n\r\n            res.json({status:\"success\",statusCode:200,data:data});\r\n          }\r\n        })\r\n\r\n      });\r\n\r\n      router.post('/update_profile',function(req , res){\r\n\r\n        let user_data = req.body;\r\n        var update_data = {\r\n                              name:user_data.name,\r\n                              //email:user_data.email,\r\n                          };\r\n        \r\n        influencer.influencers.updateOne({_id : user_data.user_id} , {$set:update_data},function(err , data){\r\n\r\n          if(err){\r\n            res.json({status:\"failure\",statusCode:100,data:err});\r\n          }else{\r\n\r\n            res.json({status:\"success\",statusCode:200,data:data});\r\n          }\r\n        });\r\n      });\r\n\r\n\r\n      router.post('/upload_post', upload.single('uploadedImage'), (req, res, next) => {\r\n        \r\n        const file = req.file\r\n        var user_data = req.body;\r\n        \r\n        if (!file) {\r\n            const error = new Error('Please upload a file')\r\n            error.httpStatusCode = 400\r\n            return next(error)\r\n        }\r\n\r\n        var post_create = new influencer_posts.influencer_posts();\r\n        \r\n        post_create.post_name     = file.filename;\r\n        post_create.influencerid  = user_data.user_id;\r\n        // post_create.media_type    = user_data.media_type;\r\n        // post_create.post_type     = user_data.post_type;\r\n        post_create.price         = user_data.price;\r\n        post_create.description   = user_data.description;\r\n        post_create.upload_type   = user_data.upload_type;\r\n        \r\n        \r\n        post_create.save(function(err ,data){\r\n\r\n          if (err)  res.json({status:\"failure\",statusCode:100,msg:err});\r\n          res.status(200).send({ statusCode: 200, status: 'success', data: file, })\r\n        });\r\n      \r\n      }, (error, req, res, next) => {\r\n        \r\n        res.status(400).send({ error: error.message })\r\n      });\r\n\r\n      router.get(\"/delete_post\",function(req , res){ \r\n\r\n        var  post_id = req.query.post_id;\r\n\r\n        influencer_posts.influencer_posts.deleteOne({_id:post_id},function(error , data){\r\n          if(error) res.json({status:\"failure\",statusCode:100,data:error});\r\n          res.json({statusCode: 200, status: 'success', data: data});\r\n        })\r\n      });\r\n\r\n\r\n      router.post('/upload_profile_image', upload.single('profileImage'), (req, res, next) => {\r\n        const file = req.file\r\n        var user_data = req.body;\r\n        \r\n        if (!file) {\r\n            const error = new Error('Please upload a file')\r\n            error.httpStatusCode = 400\r\n            return next(error)\r\n        }\r\n\r\n        let update_data = { profile_picture : file.filename };\r\n\r\n        influencer.influencers.updateOne({_id : user_data.user_id},{$set:update_data},function(err , update_dta){\r\n\r\n          if(err){\r\n            res.json({status:\"failure\",statusCode:100,data:err});\r\n          }else{\r\n\r\n            res.json({status:\"success\",statusCode:200,data:update_dta});\r\n          }\r\n        });\r\n        \r\n      \r\n      }, (error, req, res, next) => {\r\n        res.status(400).send({ error: error.message })\r\n      });\r\n\r\n      router.get('/influencers',function(req, res, next) {\r\n        influencers_data.influencers_data.aggregate([\r\n            { \"$lookup\": {\r\n                    \"from\": \"influencers\",\r\n                    \"localField\": \"influencerid\",\r\n                    \"foreignField\": \"_id\",\r\n                    \"as\": \"vals\"\r\n                  }\r\n            }\r\n\r\n            ], function(err, res_data) {\r\n              \r\n              if (err)  res.json({status:\"failure\",statusCode:100,error:err});\r\n\r\n                for(var i = 0; i < res_data.length; i++){\r\n\r\n                  res_data[i].twitterfollowers          = res_data[i].twitterfollowers ? res_data[i].twitterfollowers : 0;\r\n                  res_data[i].tiktokfollowers           = res_data[i].tiktokfollowers ? res_data[i].tiktokfollowers : 0;\r\n                  res_data[i].facebookfollowers         = res_data[i].facebookfollowers ? res_data[i].facebookfollowers : 0;\r\n                  res_data[i].instagramfollowers        = res_data[i].instagramfollowers ? res_data[i].instagramfollowers : 0;\r\n                  \r\n                  \r\n                  res_data[i].tiktok_story_price        = res_data[i].tiktok_story_price ? res_data[i].tiktok_story_price : 0;\r\n                  res_data[i].tiktok_post_price         = res_data[i].tiktok_post_price ? res_data[i].tiktok_post_price : 0;\r\n\r\n                  res_data[i].twitter_tweet_price       = res_data[i].twitter_tweet_price ? res_data[i].twitter_tweet_price : 0;\r\n                  res_data[i].twitter_retweet_price     = res_data[i].twitter_retweet_price ? res_data[i].twitter_retweet_price : 0;\r\n                  res_data[i].twitter_like_price        = res_data[i].twitter_like_price ? res_data[i].twitter_like_price : 0;\r\n                  res_data[i].twitter_follow_price      = res_data[i].twitter_follow_price ? res_data[i].twitter_follow_price : 0;\r\n                  res_data[i].twitter_comment_price     = res_data[i].twitter_comment_price ? res_data[i].twitter_comment_price : 0;\r\n\r\n                  res_data[i].instagram_post_price      = res_data[i].instagram_post_price ? res_data[i].instagram_post_price : 0;\r\n                  res_data[i].instagram_story_price     = res_data[i].instagram_story_price ? res_data[i].instagram_story_price : 0;\r\n                  res_data[i].instagram_comment_price   = res_data[i].instagram_comment_price ? res_data[i].instagram_comment_price : 0;\r\n                  res_data[i].instagram_follow_price    = res_data[i].instagram_follow_price ? res_data[i].instagram_follow_price : 0;\r\n                  res_data[i].instagram_like_price      = res_data[i].instagram_like_price ? res_data[i].instagram_like_price : 0;\r\n                  \r\n                  res_data[i].facebook_post_price       = res_data[i].facebook_post_price ? res_data[i].facebook_post_price : 0;\r\n                  res_data[i].facebook_like_price       = res_data[i].facebook_like_price ? res_data[i].facebook_like_price : 0;\r\n                  res_data[i].facebook_friend_price     = res_data[i].facebook_friend_price ? res_data[i].facebook_friend_price : 0;\r\n                  res_data[i].facebook_comment_price    = res_data[i].facebook_comment_price ? res_data[i].facebook_comment_price : 0;\r\n\r\n                }\r\n\r\n                res.json({status:\"success\",statusCode:200,data:res_data});\r\n            })\r\n\r\n    });\r\n\r\n    router.post('/deleteInfluencers',function(req , res , next){\r\n\r\n      let influencer_id = req.body.influencer_id;\r\n\r\n      influencer_posts.influencer_posts.deleteMany({ influencerid : influencer_id },function(post_error , data){\r\n        if(post_error) res.json({status:\"failure\",statusCode:100,data:post_error});\r\n\r\n        influencers_data.influencers_data.deleteMany({influencerid:influencer_id},function(influencer_error , data){\r\n          if(influencer_error) res.json({status:\"failure\",statusCode:100,data:error});\r\n\r\n          influencer.influencers.deleteOne({_id:influencer_id},function(error , data){\r\n            if(error) res.json({status:\"failure\",statusCode:100,data:error});\r\n  \r\n  \r\n            res.json({statusCode: 200, status: 'success', data: 'Influencer deleted successfully.'});\r\n          })\r\n          //res.json({statusCode: 200, status: 'success', data: 'Influencer deleted successfully.'});\r\n        })\r\n        //res.json({statusCode: 200, status: 'success', data: data});\r\n      })\r\n    });\r\n\r\n    router.get('/getNotifications',function(req, res, next){\r\n      \r\n      let influencer_id = req.query.influencer_id;\r\n      \r\n      checkout.checkout.find({ influencerid : influencer_id }) .sort([['_id', -1]]).exec( function( error , all_notifications){\r\n        \r\n        if(error) res.json({statusCode: 200, status: 'error', data: error});\r\n\r\n        checkout.checkout.updateMany({influencerid : influencer_id},{$set:{ status : 1 }},function(err , update_dta){\r\n\r\n        });\r\n        \r\n        res.json({statusCode: 100, status: 'success', data: all_notifications});\r\n\r\n\r\n      })\r\n    });\r\n    \r\n    router.get('/getNotificationUnreadCount',function(req, res, next){\r\n      \r\n      let influencer_id = req.query.influencer_id;\r\n      \r\n      checkout.checkout.find({ influencerid : influencer_id ,status : 0}) .sort([['_id', -1]]).exec( function( error , all_notifications){\r\n        \r\n        if(error) res.json({statusCode: 200, status: 'error', data: error});\r\n        \r\n        \r\n        if(all_notifications.length){\r\n\r\n          res.json({statusCode: 100, status: 'success', data: all_notifications});\r\n        } else {\r\n          \r\n          res.json({statusCode: 200, status: 'error', data: \"No data found\"});\r\n        }\r\n      })\r\n    });\r\n\r\n    router.post('/addCard', function(req , res){\r\n\r\n      console.log(\"req.body\")\r\n      console.log(req.body)\r\n\r\n      let card_number = req.body.card_number;\r\n      let expiry_month = req.body.expiry_month;\r\n      let expiry_year = req.body.expiry_year;\r\n      let cvc = req.body.cvc;\r\n      let influencer_id = req.body.influencer_id;\r\n      let email = req.body.email;\r\n      \r\n      \r\n\r\n            //  Create token\r\n\r\n            const token =  stripe.tokens.create({\r\n\r\n              card  : {\r\n                        number    : card_number,\r\n                        exp_month : expiry_month,\r\n                        exp_year  : expiry_year,\r\n                        cvc       : cvc,\r\n                        currency  : 'USD',\r\n                      },\r\n              \r\n            }).then((token) => {\r\n              \r\n              const bankAccount =  stripe.accounts.createExternalAccount(\r\n                \r\n                account_id,\r\n                {\r\n                  external_account  : token.id,\r\n                }\r\n              ).then((card_response) => {\r\n\r\n                \r\n                // Craete Bank account id\r\n\r\n                const account =  stripe.accounts.create({\r\n      \r\n                  type          : 'custom',\r\n                  country       : 'US',\r\n                  email         : email,\r\n                  capabilities  : {\r\n                                    card_payments : {requested: true},\r\n                                    transfers     : {requested: true},\r\n                                  },\r\n                  requested_capabilities: ['card_payments', 'transfers']\r\n                }).then((account_rsponse) => {\r\n\r\n                  var account_info                      = new account_data.account_data();\r\n                      account_info.influencerid         = influencer_id;\r\n                      account_info.bank_account_id      = account_rsponse.id;\r\n                      account_info.card_id              = card_response.id;\r\n                      account_info.last_4               = card_response.last4;\r\n                      account_info.card_added_response  = JSON.stringify(card_response);\r\n                      account_info.created_at           = new Date();\r\n\r\n                     \r\n                      console.log(account_info);\r\n\r\n                      account_info.save(function(account_info_err, account_info_response) {\r\n          \r\n                        if(account_info_err) res.json({ status:'failure' , statusCode : 100 , msg :account_info_err});\r\n                        res.json({status:\"success\",statusCode:200,data:account_info,msg:\"Account created successfully\"});\r\n                      });\r\n\r\n                }).catch((account_error) => {\r\n\r\n                  console.log('account_erro');\r\n                  console.log(account_error);\r\n                  res.send({status:'failure' ,statusCode:100,msg:account_error.raw.message , type:\"account error\"});\r\n                });\r\n\r\n\r\n\r\n              }).catch((bankAccountError) => {\r\n\r\n                console.log('bankAccountError');\r\n                  console.log(bankAccountError);\r\n                res.send({status:'failure' ,statusCode:100,msg:bankAccountError.raw.message , type:\"bank account error\"});\r\n              });\r\n              \r\n            }).catch((token_err) => {\r\n              \r\n              console.log('token_err');\r\n                  console.log(token_err);\r\n              res.send({status:'failure' ,statusCode:100,msg:token_err.raw.message , type:\"token error\"});\r\n            });\r\n            \r\n    })\r\n  \r\n    module.exports = router;"
      ]
    },
    "sourceType": "module",
    "mtime": 1624097263540
  },
  "{\"sourceRoot\":\"E:\\\\boomadvertisement\\\\serverapi\\\\models\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"E:\\\\boomadvertisement\\\\serverapi\",\"filename\":\"E:\\\\boomadvertisement\\\\serverapi\\\\models\\\\influencers.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"E:\\\\boomadvertisement\\\\serverapi\",\"plugins\":[],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "E:\\boomadvertisement\\serverapi\\models\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "E:\\boomadvertisement\\serverapi",
      "filename": "E:\\boomadvertisement\\serverapi\\models\\influencers.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "E:\\boomadvertisement\\serverapi",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "E:\\boomadvertisement\\serverapi\\models\\influencers.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "E:\\boomadvertisement\\serverapi\\models\\influencers.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "E:\\boomadvertisement\\serverapi\\models\\",
        "sourceFileName": "influencers.js"
      }
    },
    "ast": null,
    "code": "var mongoose = require('mongoose');\n\nconst Schema = mongoose.Schema;\nconst influencersSchema = new Schema({\n  id: String,\n  // String is shorthand for {type: String}\n  name: String,\n  email: String,\n  password: String,\n  profile_picture: String,\n  tiktok: Boolean,\n  instagram: Boolean,\n  facebook: Boolean,\n  twitter: Boolean,\n  joindate: Date\n});\nconst influencers = mongoose.model('influencers', influencersSchema);\nmodule.exports = {\n  influencers,\n  influencersSchema\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZmx1ZW5jZXJzLmpzIl0sIm5hbWVzIjpbIm1vbmdvb3NlIiwicmVxdWlyZSIsIlNjaGVtYSIsImluZmx1ZW5jZXJzU2NoZW1hIiwiaWQiLCJTdHJpbmciLCJuYW1lIiwiZW1haWwiLCJwYXNzd29yZCIsInByb2ZpbGVfcGljdHVyZSIsInRpa3RvayIsIkJvb2xlYW4iLCJpbnN0YWdyYW0iLCJmYWNlYm9vayIsInR3aXR0ZXIiLCJqb2luZGF0ZSIsIkRhdGUiLCJpbmZsdWVuY2VycyIsIm1vZGVsIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsSUFBSUEsUUFBUSxHQUFHQyxPQUFPLENBQUMsVUFBRCxDQUF0Qjs7QUFDQSxNQUFNQyxNQUFNLEdBQUdGLFFBQVEsQ0FBQ0UsTUFBeEI7QUFFQSxNQUFNQyxpQkFBaUIsR0FBRyxJQUFJRCxNQUFKLENBQVc7QUFDbkNFLEVBQUFBLEVBQUUsRUFBa0JDLE1BRGU7QUFDUDtBQUM1QkMsRUFBQUEsSUFBSSxFQUFnQkQsTUFGZTtBQUduQ0UsRUFBQUEsS0FBSyxFQUFlRixNQUhlO0FBSW5DRyxFQUFBQSxRQUFRLEVBQVlILE1BSmU7QUFLbkNJLEVBQUFBLGVBQWUsRUFBS0osTUFMZTtBQU1uQ0ssRUFBQUEsTUFBTSxFQUFjQyxPQU5lO0FBT25DQyxFQUFBQSxTQUFTLEVBQVdELE9BUGU7QUFRbkNFLEVBQUFBLFFBQVEsRUFBWUYsT0FSZTtBQVNuQ0csRUFBQUEsT0FBTyxFQUFhSCxPQVRlO0FBVW5DSSxFQUFBQSxRQUFRLEVBQVlDO0FBVmUsQ0FBWCxDQUExQjtBQWFBLE1BQU9DLFdBQVcsR0FBR2pCLFFBQVEsQ0FBQ2tCLEtBQVQsQ0FBZSxhQUFmLEVBQThCZixpQkFBOUIsQ0FBckI7QUFDQWdCLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQjtBQUFFSCxFQUFBQSxXQUFGO0FBQWNkLEVBQUFBO0FBQWQsQ0FBakIiLCJzb3VyY2VSb290IjoiRTpcXGJvb21hZHZlcnRpc2VtZW50XFxzZXJ2ZXJhcGlcXG1vZGVsc1xcIiwic291cmNlc0NvbnRlbnQiOlsidmFyIG1vbmdvb3NlID0gcmVxdWlyZSgnbW9uZ29vc2UnKTtcclxuY29uc3QgU2NoZW1hID0gbW9uZ29vc2UuU2NoZW1hO1xyXG5cclxuY29uc3QgaW5mbHVlbmNlcnNTY2hlbWEgPSBuZXcgU2NoZW1hKHtcclxuICBpZCAgICAgICAgICAgICAgOiAgIFN0cmluZywgLy8gU3RyaW5nIGlzIHNob3J0aGFuZCBmb3Ige3R5cGU6IFN0cmluZ31cclxuICBuYW1lICAgICAgICAgICAgOiAgIFN0cmluZyxcclxuICBlbWFpbCAgICAgICAgICAgOiAgIFN0cmluZyxcclxuICBwYXNzd29yZCAgICAgICAgOiAgIFN0cmluZyxcclxuICBwcm9maWxlX3BpY3R1cmUgOiAgIFN0cmluZyxcclxuICB0aWt0b2sgICAgICAgICAgOiAgIEJvb2xlYW4sXHJcbiAgaW5zdGFncmFtICAgICAgIDogICBCb29sZWFuLFxyXG4gIGZhY2Vib29rICAgICAgICA6ICAgQm9vbGVhbixcclxuICB0d2l0dGVyICAgICAgICAgOiAgIEJvb2xlYW4sXHJcbiAgam9pbmRhdGUgICAgICAgIDogICBEYXRlLFxyXG59XHJcbik7XHJcbmNvbnN0ICBpbmZsdWVuY2VycyA9IG1vbmdvb3NlLm1vZGVsKCdpbmZsdWVuY2VycycsIGluZmx1ZW5jZXJzU2NoZW1hKTtcclxubW9kdWxlLmV4cG9ydHMgPSB7IGluZmx1ZW5jZXJzLGluZmx1ZW5jZXJzU2NoZW1hIH0gOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "influencers.js"
      ],
      "names": [
        "mongoose",
        "require",
        "Schema",
        "influencersSchema",
        "id",
        "String",
        "name",
        "email",
        "password",
        "profile_picture",
        "tiktok",
        "Boolean",
        "instagram",
        "facebook",
        "twitter",
        "joindate",
        "Date",
        "influencers",
        "model",
        "module",
        "exports"
      ],
      "mappings": "AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAtB;;AACA,MAAMC,MAAM,GAAGF,QAAQ,CAACE,MAAxB;AAEA,MAAMC,iBAAiB,GAAG,IAAID,MAAJ,CAAW;AACnCE,EAAAA,EAAE,EAAkBC,MADe;AACP;AAC5BC,EAAAA,IAAI,EAAgBD,MAFe;AAGnCE,EAAAA,KAAK,EAAeF,MAHe;AAInCG,EAAAA,QAAQ,EAAYH,MAJe;AAKnCI,EAAAA,eAAe,EAAKJ,MALe;AAMnCK,EAAAA,MAAM,EAAcC,OANe;AAOnCC,EAAAA,SAAS,EAAWD,OAPe;AAQnCE,EAAAA,QAAQ,EAAYF,OARe;AASnCG,EAAAA,OAAO,EAAaH,OATe;AAUnCI,EAAAA,QAAQ,EAAYC;AAVe,CAAX,CAA1B;AAaA,MAAOC,WAAW,GAAGjB,QAAQ,CAACkB,KAAT,CAAe,aAAf,EAA8Bf,iBAA9B,CAArB;AACAgB,MAAM,CAACC,OAAP,GAAiB;AAAEH,EAAAA,WAAF;AAAcd,EAAAA;AAAd,CAAjB",
      "sourceRoot": "E:\\boomadvertisement\\serverapi\\models\\",
      "sourcesContent": [
        "var mongoose = require('mongoose');\r\nconst Schema = mongoose.Schema;\r\n\r\nconst influencersSchema = new Schema({\r\n  id              :   String, // String is shorthand for {type: String}\r\n  name            :   String,\r\n  email           :   String,\r\n  password        :   String,\r\n  profile_picture :   String,\r\n  tiktok          :   Boolean,\r\n  instagram       :   Boolean,\r\n  facebook        :   Boolean,\r\n  twitter         :   Boolean,\r\n  joindate        :   Date,\r\n}\r\n);\r\nconst  influencers = mongoose.model('influencers', influencersSchema);\r\nmodule.exports = { influencers,influencersSchema } ;"
      ]
    },
    "sourceType": "module",
    "mtime": 1611739716615
  },
  "{\"sourceRoot\":\"E:\\\\boomadvertisement\\\\serverapi\\\\models\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"E:\\\\boomadvertisement\\\\serverapi\",\"filename\":\"E:\\\\boomadvertisement\\\\serverapi\\\\models\\\\influencers_data.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"E:\\\\boomadvertisement\\\\serverapi\",\"plugins\":[],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "E:\\boomadvertisement\\serverapi\\models\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "E:\\boomadvertisement\\serverapi",
      "filename": "E:\\boomadvertisement\\serverapi\\models\\influencers_data.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "E:\\boomadvertisement\\serverapi",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "E:\\boomadvertisement\\serverapi\\models\\influencers_data.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "E:\\boomadvertisement\\serverapi\\models\\influencers_data.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "E:\\boomadvertisement\\serverapi\\models\\",
        "sourceFileName": "influencers_data.js"
      }
    },
    "ast": null,
    "code": "var mongoose = require('mongoose');\n\nconst Schema = mongoose.Schema;\nconst influencers_dataSchema = new Schema({\n  id: String,\n  // String is shorthand for {type: String}\n  influencerid: {\n    type: mongoose.Schema.ObjectId\n  },\n  influencermatchid: String,\n  tiktokfollowers: String,\n  instagramfollowers: String,\n  facebookfollowers: String,\n  twitterfollowers: String,\n  tiktok_post_price: String,\n  tiktok_story_price: String,\n  facebook_post_price: String,\n  facebook_friend_price: String,\n  facebook_comment_price: String,\n  facebook_like_price: String,\n  twitter_tweet_price: String,\n  twitter_retweet_price: String,\n  twitter_comment_price: String,\n  twitter_like_price: String,\n  twitter_follow_price: String,\n  instagram_post_price: String,\n  instagram_story_price: String,\n  instagram_comment_price: String,\n  instagram_like_price: String,\n  instagram_follow_price: String\n});\nconst influencers_data = mongoose.model('influencers_data', influencers_dataSchema);\nmodule.exports = {\n  influencers_data,\n  influencers_dataSchema\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZmx1ZW5jZXJzX2RhdGEuanMiXSwibmFtZXMiOlsibW9uZ29vc2UiLCJyZXF1aXJlIiwiU2NoZW1hIiwiaW5mbHVlbmNlcnNfZGF0YVNjaGVtYSIsImlkIiwiU3RyaW5nIiwiaW5mbHVlbmNlcmlkIiwidHlwZSIsIk9iamVjdElkIiwiaW5mbHVlbmNlcm1hdGNoaWQiLCJ0aWt0b2tmb2xsb3dlcnMiLCJpbnN0YWdyYW1mb2xsb3dlcnMiLCJmYWNlYm9va2ZvbGxvd2VycyIsInR3aXR0ZXJmb2xsb3dlcnMiLCJ0aWt0b2tfcG9zdF9wcmljZSIsInRpa3Rva19zdG9yeV9wcmljZSIsImZhY2Vib29rX3Bvc3RfcHJpY2UiLCJmYWNlYm9va19mcmllbmRfcHJpY2UiLCJmYWNlYm9va19jb21tZW50X3ByaWNlIiwiZmFjZWJvb2tfbGlrZV9wcmljZSIsInR3aXR0ZXJfdHdlZXRfcHJpY2UiLCJ0d2l0dGVyX3JldHdlZXRfcHJpY2UiLCJ0d2l0dGVyX2NvbW1lbnRfcHJpY2UiLCJ0d2l0dGVyX2xpa2VfcHJpY2UiLCJ0d2l0dGVyX2ZvbGxvd19wcmljZSIsImluc3RhZ3JhbV9wb3N0X3ByaWNlIiwiaW5zdGFncmFtX3N0b3J5X3ByaWNlIiwiaW5zdGFncmFtX2NvbW1lbnRfcHJpY2UiLCJpbnN0YWdyYW1fbGlrZV9wcmljZSIsImluc3RhZ3JhbV9mb2xsb3dfcHJpY2UiLCJpbmZsdWVuY2Vyc19kYXRhIiwibW9kZWwiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQSxJQUFJQSxRQUFRLEdBQUdDLE9BQU8sQ0FBQyxVQUFELENBQXRCOztBQUNBLE1BQU1DLE1BQU0sR0FBR0YsUUFBUSxDQUFDRSxNQUF4QjtBQUVBLE1BQU1DLHNCQUFzQixHQUFHLElBQUlELE1BQUosQ0FBVztBQUN4Q0UsRUFBQUEsRUFBRSxFQUFHQyxNQURtQztBQUMzQjtBQUNiQyxFQUFBQSxZQUFZLEVBQUU7QUFBRUMsSUFBQUEsSUFBSSxFQUFFUCxRQUFRLENBQUNFLE1BQVQsQ0FBZ0JNO0FBQXhCLEdBRjBCO0FBR3hDQyxFQUFBQSxpQkFBaUIsRUFBRUosTUFIcUI7QUFJeENLLEVBQUFBLGVBQWUsRUFBSUwsTUFKcUI7QUFLeENNLEVBQUFBLGtCQUFrQixFQUFJTixNQUxrQjtBQU14Q08sRUFBQUEsaUJBQWlCLEVBQUlQLE1BTm1CO0FBT3hDUSxFQUFBQSxnQkFBZ0IsRUFBSVIsTUFQb0I7QUFReENTLEVBQUFBLGlCQUFpQixFQUFHVCxNQVJvQjtBQVN4Q1UsRUFBQUEsa0JBQWtCLEVBQUdWLE1BVG1CO0FBVXhDVyxFQUFBQSxtQkFBbUIsRUFBR1gsTUFWa0I7QUFXeENZLEVBQUFBLHFCQUFxQixFQUFHWixNQVhnQjtBQVl4Q2EsRUFBQUEsc0JBQXNCLEVBQUdiLE1BWmU7QUFheENjLEVBQUFBLG1CQUFtQixFQUFHZCxNQWJrQjtBQWN4Q2UsRUFBQUEsbUJBQW1CLEVBQUdmLE1BZGtCO0FBZXhDZ0IsRUFBQUEscUJBQXFCLEVBQUdoQixNQWZnQjtBQWdCeENpQixFQUFBQSxxQkFBcUIsRUFBR2pCLE1BaEJnQjtBQWlCeENrQixFQUFBQSxrQkFBa0IsRUFBR2xCLE1BakJtQjtBQWtCeENtQixFQUFBQSxvQkFBb0IsRUFBR25CLE1BbEJpQjtBQW1CeENvQixFQUFBQSxvQkFBb0IsRUFBR3BCLE1BbkJpQjtBQW9CeENxQixFQUFBQSxxQkFBcUIsRUFBR3JCLE1BcEJnQjtBQXFCeENzQixFQUFBQSx1QkFBdUIsRUFBR3RCLE1BckJjO0FBc0J4Q3VCLEVBQUFBLG9CQUFvQixFQUFHdkIsTUF0QmlCO0FBdUJ4Q3dCLEVBQUFBLHNCQUFzQixFQUFHeEI7QUF2QmUsQ0FBWCxDQUEvQjtBQXlCQSxNQUFPeUIsZ0JBQWdCLEdBQUc5QixRQUFRLENBQUMrQixLQUFULENBQWUsa0JBQWYsRUFBbUM1QixzQkFBbkMsQ0FBMUI7QUFDQTZCLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQjtBQUFFSCxFQUFBQSxnQkFBRjtBQUFtQjNCLEVBQUFBO0FBQW5CLENBQWpCIiwic291cmNlUm9vdCI6IkU6XFxib29tYWR2ZXJ0aXNlbWVudFxcc2VydmVyYXBpXFxtb2RlbHNcXCIsInNvdXJjZXNDb250ZW50IjpbInZhciBtb25nb29zZSA9IHJlcXVpcmUoJ21vbmdvb3NlJyk7XHJcbmNvbnN0IFNjaGVtYSA9IG1vbmdvb3NlLlNjaGVtYTtcclxuXHJcbmNvbnN0IGluZmx1ZW5jZXJzX2RhdGFTY2hlbWEgPSBuZXcgU2NoZW1hKHtcclxuICBpZDogIFN0cmluZywgLy8gU3RyaW5nIGlzIHNob3J0aGFuZCBmb3Ige3R5cGU6IFN0cmluZ31cclxuICBpbmZsdWVuY2VyaWQ6IHsgdHlwZTogbW9uZ29vc2UuU2NoZW1hLk9iamVjdElkfSxcclxuICBpbmZsdWVuY2VybWF0Y2hpZDogU3RyaW5nLFxyXG4gIHRpa3Rva2ZvbGxvd2VyczogICBTdHJpbmcsXHJcbiAgaW5zdGFncmFtZm9sbG93ZXJzOiAgIFN0cmluZyxcclxuICBmYWNlYm9va2ZvbGxvd2VyczogICBTdHJpbmcsXHJcbiAgdHdpdHRlcmZvbGxvd2VyczogICBTdHJpbmcsXHJcbiAgdGlrdG9rX3Bvc3RfcHJpY2UgOiBTdHJpbmcsXHJcbiAgdGlrdG9rX3N0b3J5X3ByaWNlIDogU3RyaW5nLFxyXG4gIGZhY2Vib29rX3Bvc3RfcHJpY2UgOiBTdHJpbmcsXHJcbiAgZmFjZWJvb2tfZnJpZW5kX3ByaWNlIDogU3RyaW5nLFxyXG4gIGZhY2Vib29rX2NvbW1lbnRfcHJpY2UgOiBTdHJpbmcsXHJcbiAgZmFjZWJvb2tfbGlrZV9wcmljZSA6IFN0cmluZyxcclxuICB0d2l0dGVyX3R3ZWV0X3ByaWNlIDogU3RyaW5nLFxyXG4gIHR3aXR0ZXJfcmV0d2VldF9wcmljZSA6IFN0cmluZyxcclxuICB0d2l0dGVyX2NvbW1lbnRfcHJpY2UgOiBTdHJpbmcsXHJcbiAgdHdpdHRlcl9saWtlX3ByaWNlIDogU3RyaW5nLFxyXG4gIHR3aXR0ZXJfZm9sbG93X3ByaWNlIDogU3RyaW5nLFxyXG4gIGluc3RhZ3JhbV9wb3N0X3ByaWNlIDogU3RyaW5nLFxyXG4gIGluc3RhZ3JhbV9zdG9yeV9wcmljZSA6IFN0cmluZyxcclxuICBpbnN0YWdyYW1fY29tbWVudF9wcmljZSA6IFN0cmluZyxcclxuICBpbnN0YWdyYW1fbGlrZV9wcmljZSA6IFN0cmluZyxcclxuICBpbnN0YWdyYW1fZm9sbG93X3ByaWNlIDogU3RyaW5nLFxyXG59KTtcclxuY29uc3QgIGluZmx1ZW5jZXJzX2RhdGEgPSBtb25nb29zZS5tb2RlbCgnaW5mbHVlbmNlcnNfZGF0YScsIGluZmx1ZW5jZXJzX2RhdGFTY2hlbWEpO1xyXG5tb2R1bGUuZXhwb3J0cyA9IHsgaW5mbHVlbmNlcnNfZGF0YSxpbmZsdWVuY2Vyc19kYXRhU2NoZW1hIH0gOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "influencers_data.js"
      ],
      "names": [
        "mongoose",
        "require",
        "Schema",
        "influencers_dataSchema",
        "id",
        "String",
        "influencerid",
        "type",
        "ObjectId",
        "influencermatchid",
        "tiktokfollowers",
        "instagramfollowers",
        "facebookfollowers",
        "twitterfollowers",
        "tiktok_post_price",
        "tiktok_story_price",
        "facebook_post_price",
        "facebook_friend_price",
        "facebook_comment_price",
        "facebook_like_price",
        "twitter_tweet_price",
        "twitter_retweet_price",
        "twitter_comment_price",
        "twitter_like_price",
        "twitter_follow_price",
        "instagram_post_price",
        "instagram_story_price",
        "instagram_comment_price",
        "instagram_like_price",
        "instagram_follow_price",
        "influencers_data",
        "model",
        "module",
        "exports"
      ],
      "mappings": "AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAtB;;AACA,MAAMC,MAAM,GAAGF,QAAQ,CAACE,MAAxB;AAEA,MAAMC,sBAAsB,GAAG,IAAID,MAAJ,CAAW;AACxCE,EAAAA,EAAE,EAAGC,MADmC;AAC3B;AACbC,EAAAA,YAAY,EAAE;AAAEC,IAAAA,IAAI,EAAEP,QAAQ,CAACE,MAAT,CAAgBM;AAAxB,GAF0B;AAGxCC,EAAAA,iBAAiB,EAAEJ,MAHqB;AAIxCK,EAAAA,eAAe,EAAIL,MAJqB;AAKxCM,EAAAA,kBAAkB,EAAIN,MALkB;AAMxCO,EAAAA,iBAAiB,EAAIP,MANmB;AAOxCQ,EAAAA,gBAAgB,EAAIR,MAPoB;AAQxCS,EAAAA,iBAAiB,EAAGT,MARoB;AASxCU,EAAAA,kBAAkB,EAAGV,MATmB;AAUxCW,EAAAA,mBAAmB,EAAGX,MAVkB;AAWxCY,EAAAA,qBAAqB,EAAGZ,MAXgB;AAYxCa,EAAAA,sBAAsB,EAAGb,MAZe;AAaxCc,EAAAA,mBAAmB,EAAGd,MAbkB;AAcxCe,EAAAA,mBAAmB,EAAGf,MAdkB;AAexCgB,EAAAA,qBAAqB,EAAGhB,MAfgB;AAgBxCiB,EAAAA,qBAAqB,EAAGjB,MAhBgB;AAiBxCkB,EAAAA,kBAAkB,EAAGlB,MAjBmB;AAkBxCmB,EAAAA,oBAAoB,EAAGnB,MAlBiB;AAmBxCoB,EAAAA,oBAAoB,EAAGpB,MAnBiB;AAoBxCqB,EAAAA,qBAAqB,EAAGrB,MApBgB;AAqBxCsB,EAAAA,uBAAuB,EAAGtB,MArBc;AAsBxCuB,EAAAA,oBAAoB,EAAGvB,MAtBiB;AAuBxCwB,EAAAA,sBAAsB,EAAGxB;AAvBe,CAAX,CAA/B;AAyBA,MAAOyB,gBAAgB,GAAG9B,QAAQ,CAAC+B,KAAT,CAAe,kBAAf,EAAmC5B,sBAAnC,CAA1B;AACA6B,MAAM,CAACC,OAAP,GAAiB;AAAEH,EAAAA,gBAAF;AAAmB3B,EAAAA;AAAnB,CAAjB",
      "sourceRoot": "E:\\boomadvertisement\\serverapi\\models\\",
      "sourcesContent": [
        "var mongoose = require('mongoose');\r\nconst Schema = mongoose.Schema;\r\n\r\nconst influencers_dataSchema = new Schema({\r\n  id:  String, // String is shorthand for {type: String}\r\n  influencerid: { type: mongoose.Schema.ObjectId},\r\n  influencermatchid: String,\r\n  tiktokfollowers:   String,\r\n  instagramfollowers:   String,\r\n  facebookfollowers:   String,\r\n  twitterfollowers:   String,\r\n  tiktok_post_price : String,\r\n  tiktok_story_price : String,\r\n  facebook_post_price : String,\r\n  facebook_friend_price : String,\r\n  facebook_comment_price : String,\r\n  facebook_like_price : String,\r\n  twitter_tweet_price : String,\r\n  twitter_retweet_price : String,\r\n  twitter_comment_price : String,\r\n  twitter_like_price : String,\r\n  twitter_follow_price : String,\r\n  instagram_post_price : String,\r\n  instagram_story_price : String,\r\n  instagram_comment_price : String,\r\n  instagram_like_price : String,\r\n  instagram_follow_price : String,\r\n});\r\nconst  influencers_data = mongoose.model('influencers_data', influencers_dataSchema);\r\nmodule.exports = { influencers_data,influencers_dataSchema } ;"
      ]
    },
    "sourceType": "module",
    "mtime": 1614003019389
  },
  "{\"sourceRoot\":\"E:\\\\boomadvertisement\\\\serverapi\\\\models\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"E:\\\\boomadvertisement\\\\serverapi\",\"filename\":\"E:\\\\boomadvertisement\\\\serverapi\\\\models\\\\influencers_posts.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"E:\\\\boomadvertisement\\\\serverapi\",\"plugins\":[],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "E:\\boomadvertisement\\serverapi\\models\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "E:\\boomadvertisement\\serverapi",
      "filename": "E:\\boomadvertisement\\serverapi\\models\\influencers_posts.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "E:\\boomadvertisement\\serverapi",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "E:\\boomadvertisement\\serverapi\\models\\influencers_posts.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "E:\\boomadvertisement\\serverapi\\models\\influencers_posts.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "E:\\boomadvertisement\\serverapi\\models\\",
        "sourceFileName": "influencers_posts.js"
      }
    },
    "ast": null,
    "code": "var mongoose = require('mongoose');\n\nconst Schema = mongoose.Schema;\nconst influencer_posts_schema = new Schema({\n  id: String,\n  // String is shorthand for {type: String}\n  influencerid: {\n    type: mongoose.Schema.ObjectId\n  },\n  //media_type      :   String,\n  post_name: String,\n  //post_type       :   String,\n  price: String,\n  description: String,\n  upload_type: String\n});\nconst influencer_posts = mongoose.model('influencers_posts', influencer_posts_schema);\nmodule.exports = {\n  influencer_posts,\n  influencer_posts_schema\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZmx1ZW5jZXJzX3Bvc3RzLmpzIl0sIm5hbWVzIjpbIm1vbmdvb3NlIiwicmVxdWlyZSIsIlNjaGVtYSIsImluZmx1ZW5jZXJfcG9zdHNfc2NoZW1hIiwiaWQiLCJTdHJpbmciLCJpbmZsdWVuY2VyaWQiLCJ0eXBlIiwiT2JqZWN0SWQiLCJwb3N0X25hbWUiLCJwcmljZSIsImRlc2NyaXB0aW9uIiwidXBsb2FkX3R5cGUiLCJpbmZsdWVuY2VyX3Bvc3RzIiwibW9kZWwiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQSxJQUFJQSxRQUFRLEdBQUdDLE9BQU8sQ0FBQyxVQUFELENBQXRCOztBQUNBLE1BQU1DLE1BQU0sR0FBR0YsUUFBUSxDQUFDRSxNQUF4QjtBQUVBLE1BQU1DLHVCQUF1QixHQUFHLElBQUlELE1BQUosQ0FBVztBQUN2Q0UsRUFBQUEsRUFBRSxFQUFrQkMsTUFEbUI7QUFDWDtBQUM1QkMsRUFBQUEsWUFBWSxFQUFRO0FBQUVDLElBQUFBLElBQUksRUFBRVAsUUFBUSxDQUFDRSxNQUFULENBQWdCTTtBQUF4QixHQUZtQjtBQUd2QztBQUNBQyxFQUFBQSxTQUFTLEVBQVdKLE1BSm1CO0FBS3ZDO0FBQ0FLLEVBQUFBLEtBQUssRUFBZUwsTUFObUI7QUFPdkNNLEVBQUFBLFdBQVcsRUFBU04sTUFQbUI7QUFRdkNPLEVBQUFBLFdBQVcsRUFBU1A7QUFSbUIsQ0FBWCxDQUFoQztBQVdBLE1BQU1RLGdCQUFnQixHQUFHYixRQUFRLENBQUNjLEtBQVQsQ0FBZSxtQkFBZixFQUFvQ1gsdUJBQXBDLENBQXpCO0FBQ0FZLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQjtBQUFDSCxFQUFBQSxnQkFBRDtBQUFvQlYsRUFBQUE7QUFBcEIsQ0FBakIiLCJzb3VyY2VSb290IjoiRTpcXGJvb21hZHZlcnRpc2VtZW50XFxzZXJ2ZXJhcGlcXG1vZGVsc1xcIiwic291cmNlc0NvbnRlbnQiOlsidmFyIG1vbmdvb3NlID0gcmVxdWlyZSgnbW9uZ29vc2UnKTtcclxuY29uc3QgU2NoZW1hID0gbW9uZ29vc2UuU2NoZW1hO1xyXG5cclxuY29uc3QgaW5mbHVlbmNlcl9wb3N0c19zY2hlbWEgPSBuZXcgU2NoZW1hKHtcclxuICAgIGlkICAgICAgICAgICAgICA6ICAgU3RyaW5nLCAvLyBTdHJpbmcgaXMgc2hvcnRoYW5kIGZvciB7dHlwZTogU3RyaW5nfVxyXG4gICAgaW5mbHVlbmNlcmlkICAgIDogICB7IHR5cGU6IG1vbmdvb3NlLlNjaGVtYS5PYmplY3RJZH0sXHJcbiAgICAvL21lZGlhX3R5cGUgICAgICA6ICAgU3RyaW5nLFxyXG4gICAgcG9zdF9uYW1lICAgICAgIDogICBTdHJpbmcsXHJcbiAgICAvL3Bvc3RfdHlwZSAgICAgICA6ICAgU3RyaW5nLFxyXG4gICAgcHJpY2UgICAgICAgICAgIDogICBTdHJpbmcsXHJcbiAgICBkZXNjcmlwdGlvbiAgICAgOiAgIFN0cmluZyxcclxuICAgIHVwbG9hZF90eXBlICAgICA6ICAgU3RyaW5nLFxyXG59KTtcclxuXHJcbmNvbnN0IGluZmx1ZW5jZXJfcG9zdHMgPSBtb25nb29zZS5tb2RlbCgnaW5mbHVlbmNlcnNfcG9zdHMnLCBpbmZsdWVuY2VyX3Bvc3RzX3NjaGVtYSk7XHJcbm1vZHVsZS5leHBvcnRzID0ge2luZmx1ZW5jZXJfcG9zdHMgLCBpbmZsdWVuY2VyX3Bvc3RzX3NjaGVtYX07Il19",
    "map": {
      "version": 3,
      "sources": [
        "influencers_posts.js"
      ],
      "names": [
        "mongoose",
        "require",
        "Schema",
        "influencer_posts_schema",
        "id",
        "String",
        "influencerid",
        "type",
        "ObjectId",
        "post_name",
        "price",
        "description",
        "upload_type",
        "influencer_posts",
        "model",
        "module",
        "exports"
      ],
      "mappings": "AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAtB;;AACA,MAAMC,MAAM,GAAGF,QAAQ,CAACE,MAAxB;AAEA,MAAMC,uBAAuB,GAAG,IAAID,MAAJ,CAAW;AACvCE,EAAAA,EAAE,EAAkBC,MADmB;AACX;AAC5BC,EAAAA,YAAY,EAAQ;AAAEC,IAAAA,IAAI,EAAEP,QAAQ,CAACE,MAAT,CAAgBM;AAAxB,GAFmB;AAGvC;AACAC,EAAAA,SAAS,EAAWJ,MAJmB;AAKvC;AACAK,EAAAA,KAAK,EAAeL,MANmB;AAOvCM,EAAAA,WAAW,EAASN,MAPmB;AAQvCO,EAAAA,WAAW,EAASP;AARmB,CAAX,CAAhC;AAWA,MAAMQ,gBAAgB,GAAGb,QAAQ,CAACc,KAAT,CAAe,mBAAf,EAAoCX,uBAApC,CAAzB;AACAY,MAAM,CAACC,OAAP,GAAiB;AAACH,EAAAA,gBAAD;AAAoBV,EAAAA;AAApB,CAAjB",
      "sourceRoot": "E:\\boomadvertisement\\serverapi\\models\\",
      "sourcesContent": [
        "var mongoose = require('mongoose');\r\nconst Schema = mongoose.Schema;\r\n\r\nconst influencer_posts_schema = new Schema({\r\n    id              :   String, // String is shorthand for {type: String}\r\n    influencerid    :   { type: mongoose.Schema.ObjectId},\r\n    //media_type      :   String,\r\n    post_name       :   String,\r\n    //post_type       :   String,\r\n    price           :   String,\r\n    description     :   String,\r\n    upload_type     :   String,\r\n});\r\n\r\nconst influencer_posts = mongoose.model('influencers_posts', influencer_posts_schema);\r\nmodule.exports = {influencer_posts , influencer_posts_schema};"
      ]
    },
    "sourceType": "module",
    "mtime": 1615191330591
  },
  "{\"sourceRoot\":\"E:\\\\boomadvertisement\\\\serverapi\\\\models\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"E:\\\\boomadvertisement\\\\serverapi\",\"filename\":\"E:\\\\boomadvertisement\\\\serverapi\\\\models\\\\checkout.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"E:\\\\boomadvertisement\\\\serverapi\",\"plugins\":[],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "E:\\boomadvertisement\\serverapi\\models\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "E:\\boomadvertisement\\serverapi",
      "filename": "E:\\boomadvertisement\\serverapi\\models\\checkout.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "E:\\boomadvertisement\\serverapi",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "E:\\boomadvertisement\\serverapi\\models\\checkout.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "E:\\boomadvertisement\\serverapi\\models\\checkout.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "E:\\boomadvertisement\\serverapi\\models\\",
        "sourceFileName": "checkout.js"
      }
    },
    "ast": null,
    "code": "var mongoose = require('mongoose');\n\nconst Schema = mongoose.Schema;\nconst checkout_schema = new Schema({\n  id: String,\n  // String is shorthand for {type: String}\n  influencerid: {\n    type: mongoose.Schema.ObjectId\n  },\n  name: String,\n  email: String,\n  phone: String,\n  description: String,\n  media_type: String,\n  media_option: String,\n  response: String,\n  amount: String,\n  status: Number,\n  date: String,\n  created_at: Date //created_at      :   { type: Date, default: Date.now }\n\n});\nconst checkout = mongoose.model('checkout_data', checkout_schema);\nmodule.exports = {\n  checkout,\n  checkout_schema\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNoZWNrb3V0LmpzIl0sIm5hbWVzIjpbIm1vbmdvb3NlIiwicmVxdWlyZSIsIlNjaGVtYSIsImNoZWNrb3V0X3NjaGVtYSIsImlkIiwiU3RyaW5nIiwiaW5mbHVlbmNlcmlkIiwidHlwZSIsIk9iamVjdElkIiwibmFtZSIsImVtYWlsIiwicGhvbmUiLCJkZXNjcmlwdGlvbiIsIm1lZGlhX3R5cGUiLCJtZWRpYV9vcHRpb24iLCJyZXNwb25zZSIsImFtb3VudCIsInN0YXR1cyIsIk51bWJlciIsImRhdGUiLCJjcmVhdGVkX2F0IiwiRGF0ZSIsImNoZWNrb3V0IiwibW9kZWwiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQSxJQUFJQSxRQUFRLEdBQUdDLE9BQU8sQ0FBQyxVQUFELENBQXRCOztBQUNBLE1BQU1DLE1BQU0sR0FBR0YsUUFBUSxDQUFDRSxNQUF4QjtBQUVBLE1BQU1DLGVBQWUsR0FBRyxJQUFJRCxNQUFKLENBQVc7QUFDL0JFLEVBQUFBLEVBQUUsRUFBa0JDLE1BRFc7QUFDSDtBQUM1QkMsRUFBQUEsWUFBWSxFQUFRO0FBQUVDLElBQUFBLElBQUksRUFBRVAsUUFBUSxDQUFDRSxNQUFULENBQWdCTTtBQUF4QixHQUZXO0FBRy9CQyxFQUFBQSxJQUFJLEVBQWdCSixNQUhXO0FBSS9CSyxFQUFBQSxLQUFLLEVBQWVMLE1BSlc7QUFLL0JNLEVBQUFBLEtBQUssRUFBZU4sTUFMVztBQU0vQk8sRUFBQUEsV0FBVyxFQUFTUCxNQU5XO0FBTy9CUSxFQUFBQSxVQUFVLEVBQVVSLE1BUFc7QUFRL0JTLEVBQUFBLFlBQVksRUFBUVQsTUFSVztBQVMvQlUsRUFBQUEsUUFBUSxFQUFZVixNQVRXO0FBVS9CVyxFQUFBQSxNQUFNLEVBQWNYLE1BVlc7QUFXL0JZLEVBQUFBLE1BQU0sRUFBY0MsTUFYVztBQVkvQkMsRUFBQUEsSUFBSSxFQUFnQmQsTUFaVztBQWEvQmUsRUFBQUEsVUFBVSxFQUFVQyxJQWJXLENBYy9COztBQWQrQixDQUFYLENBQXhCO0FBaUJBLE1BQU1DLFFBQVEsR0FBR3RCLFFBQVEsQ0FBQ3VCLEtBQVQsQ0FBZSxlQUFmLEVBQWdDcEIsZUFBaEMsQ0FBakI7QUFDQXFCLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQjtBQUFDSCxFQUFBQSxRQUFEO0FBQVluQixFQUFBQTtBQUFaLENBQWpCIiwic291cmNlUm9vdCI6IkU6XFxib29tYWR2ZXJ0aXNlbWVudFxcc2VydmVyYXBpXFxtb2RlbHNcXCIsInNvdXJjZXNDb250ZW50IjpbInZhciBtb25nb29zZSA9IHJlcXVpcmUoJ21vbmdvb3NlJyk7XHJcbmNvbnN0IFNjaGVtYSA9IG1vbmdvb3NlLlNjaGVtYTtcclxuXHJcbmNvbnN0IGNoZWNrb3V0X3NjaGVtYSA9IG5ldyBTY2hlbWEoe1xyXG4gICAgaWQgICAgICAgICAgICAgIDogICBTdHJpbmcsIC8vIFN0cmluZyBpcyBzaG9ydGhhbmQgZm9yIHt0eXBlOiBTdHJpbmd9XHJcbiAgICBpbmZsdWVuY2VyaWQgICAgOiAgIHsgdHlwZTogbW9uZ29vc2UuU2NoZW1hLk9iamVjdElkfSxcclxuICAgIG5hbWUgICAgICAgICAgICA6ICAgU3RyaW5nLFxyXG4gICAgZW1haWwgICAgICAgICAgIDogICBTdHJpbmcsXHJcbiAgICBwaG9uZSAgICAgICAgICAgOiAgIFN0cmluZyxcclxuICAgIGRlc2NyaXB0aW9uICAgICA6ICAgU3RyaW5nLFxyXG4gICAgbWVkaWFfdHlwZSAgICAgIDogICBTdHJpbmcsXHJcbiAgICBtZWRpYV9vcHRpb24gICAgOiAgIFN0cmluZyxcclxuICAgIHJlc3BvbnNlICAgICAgICA6ICAgU3RyaW5nLFxyXG4gICAgYW1vdW50ICAgICAgICAgIDogICBTdHJpbmcsXHJcbiAgICBzdGF0dXMgICAgICAgICAgOiAgIE51bWJlcixcclxuICAgIGRhdGUgICAgICAgICAgICA6ICAgU3RyaW5nLFxyXG4gICAgY3JlYXRlZF9hdCAgICAgIDogICBEYXRlLFxyXG4gICAgLy9jcmVhdGVkX2F0ICAgICAgOiAgIHsgdHlwZTogRGF0ZSwgZGVmYXVsdDogRGF0ZS5ub3cgfVxyXG59KTtcclxuXHJcbmNvbnN0IGNoZWNrb3V0ID0gbW9uZ29vc2UubW9kZWwoJ2NoZWNrb3V0X2RhdGEnLCBjaGVja291dF9zY2hlbWEpO1xyXG5tb2R1bGUuZXhwb3J0cyA9IHtjaGVja291dCAsIGNoZWNrb3V0X3NjaGVtYX07Il19",
    "map": {
      "version": 3,
      "sources": [
        "checkout.js"
      ],
      "names": [
        "mongoose",
        "require",
        "Schema",
        "checkout_schema",
        "id",
        "String",
        "influencerid",
        "type",
        "ObjectId",
        "name",
        "email",
        "phone",
        "description",
        "media_type",
        "media_option",
        "response",
        "amount",
        "status",
        "Number",
        "date",
        "created_at",
        "Date",
        "checkout",
        "model",
        "module",
        "exports"
      ],
      "mappings": "AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAtB;;AACA,MAAMC,MAAM,GAAGF,QAAQ,CAACE,MAAxB;AAEA,MAAMC,eAAe,GAAG,IAAID,MAAJ,CAAW;AAC/BE,EAAAA,EAAE,EAAkBC,MADW;AACH;AAC5BC,EAAAA,YAAY,EAAQ;AAAEC,IAAAA,IAAI,EAAEP,QAAQ,CAACE,MAAT,CAAgBM;AAAxB,GAFW;AAG/BC,EAAAA,IAAI,EAAgBJ,MAHW;AAI/BK,EAAAA,KAAK,EAAeL,MAJW;AAK/BM,EAAAA,KAAK,EAAeN,MALW;AAM/BO,EAAAA,WAAW,EAASP,MANW;AAO/BQ,EAAAA,UAAU,EAAUR,MAPW;AAQ/BS,EAAAA,YAAY,EAAQT,MARW;AAS/BU,EAAAA,QAAQ,EAAYV,MATW;AAU/BW,EAAAA,MAAM,EAAcX,MAVW;AAW/BY,EAAAA,MAAM,EAAcC,MAXW;AAY/BC,EAAAA,IAAI,EAAgBd,MAZW;AAa/Be,EAAAA,UAAU,EAAUC,IAbW,CAc/B;;AAd+B,CAAX,CAAxB;AAiBA,MAAMC,QAAQ,GAAGtB,QAAQ,CAACuB,KAAT,CAAe,eAAf,EAAgCpB,eAAhC,CAAjB;AACAqB,MAAM,CAACC,OAAP,GAAiB;AAACH,EAAAA,QAAD;AAAYnB,EAAAA;AAAZ,CAAjB",
      "sourceRoot": "E:\\boomadvertisement\\serverapi\\models\\",
      "sourcesContent": [
        "var mongoose = require('mongoose');\r\nconst Schema = mongoose.Schema;\r\n\r\nconst checkout_schema = new Schema({\r\n    id              :   String, // String is shorthand for {type: String}\r\n    influencerid    :   { type: mongoose.Schema.ObjectId},\r\n    name            :   String,\r\n    email           :   String,\r\n    phone           :   String,\r\n    description     :   String,\r\n    media_type      :   String,\r\n    media_option    :   String,\r\n    response        :   String,\r\n    amount          :   String,\r\n    status          :   Number,\r\n    date            :   String,\r\n    created_at      :   Date,\r\n    //created_at      :   { type: Date, default: Date.now }\r\n});\r\n\r\nconst checkout = mongoose.model('checkout_data', checkout_schema);\r\nmodule.exports = {checkout , checkout_schema};"
      ]
    },
    "sourceType": "module",
    "mtime": 1615980842241
  },
  "{\"sourceRoot\":\"E:\\\\boomadvertisement\\\\serverapi\\\\models\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"E:\\\\boomadvertisement\\\\serverapi\",\"filename\":\"E:\\\\boomadvertisement\\\\serverapi\\\\models\\\\account_data.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"E:\\\\boomadvertisement\\\\serverapi\",\"plugins\":[],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "E:\\boomadvertisement\\serverapi\\models\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "E:\\boomadvertisement\\serverapi",
      "filename": "E:\\boomadvertisement\\serverapi\\models\\account_data.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "E:\\boomadvertisement\\serverapi",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "E:\\boomadvertisement\\serverapi\\models\\account_data.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "E:\\boomadvertisement\\serverapi\\models\\account_data.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "E:\\boomadvertisement\\serverapi\\models\\",
        "sourceFileName": "account_data.js"
      }
    },
    "ast": null,
    "code": "var mongoose = require('mongoose');\n\nconst Schema = mongoose.Schema;\nconst account_schema = new Schema({\n  id: String,\n  // String is shorthand for {type: String}\n  influencerid: {\n    type: mongoose.Schema.ObjectId\n  },\n  bank_account_id: String,\n  card_id: String,\n  last_4: String,\n  card_added_response: String,\n  created_at: Date //created_at      :   { type: Date, default: Date.now }\n\n});\nconst account_data = mongoose.model('account_data', account_schema);\nmodule.exports = {\n  account_data,\n  account_schema\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFjY291bnRfZGF0YS5qcyJdLCJuYW1lcyI6WyJtb25nb29zZSIsInJlcXVpcmUiLCJTY2hlbWEiLCJhY2NvdW50X3NjaGVtYSIsImlkIiwiU3RyaW5nIiwiaW5mbHVlbmNlcmlkIiwidHlwZSIsIk9iamVjdElkIiwiYmFua19hY2NvdW50X2lkIiwiY2FyZF9pZCIsImxhc3RfNCIsImNhcmRfYWRkZWRfcmVzcG9uc2UiLCJjcmVhdGVkX2F0IiwiRGF0ZSIsImFjY291bnRfZGF0YSIsIm1vZGVsIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsSUFBSUEsUUFBUSxHQUFHQyxPQUFPLENBQUMsVUFBRCxDQUF0Qjs7QUFDQSxNQUFNQyxNQUFNLEdBQUdGLFFBQVEsQ0FBQ0UsTUFBeEI7QUFFQSxNQUFNQyxjQUFjLEdBQUcsSUFBSUQsTUFBSixDQUFXO0FBQzlCRSxFQUFBQSxFQUFFLEVBQXNCQyxNQURNO0FBQ0U7QUFDaENDLEVBQUFBLFlBQVksRUFBWTtBQUFFQyxJQUFBQSxJQUFJLEVBQUVQLFFBQVEsQ0FBQ0UsTUFBVCxDQUFnQk07QUFBeEIsR0FGTTtBQUc5QkMsRUFBQUEsZUFBZSxFQUFTSixNQUhNO0FBSTlCSyxFQUFBQSxPQUFPLEVBQWlCTCxNQUpNO0FBSzlCTSxFQUFBQSxNQUFNLEVBQWtCTixNQUxNO0FBTTlCTyxFQUFBQSxtQkFBbUIsRUFBS1AsTUFOTTtBQU85QlEsRUFBQUEsVUFBVSxFQUFjQyxJQVBNLENBUTlCOztBQVI4QixDQUFYLENBQXZCO0FBV0EsTUFBTUMsWUFBWSxHQUFHZixRQUFRLENBQUNnQixLQUFULENBQWUsY0FBZixFQUErQmIsY0FBL0IsQ0FBckI7QUFDQWMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCO0FBQUNILEVBQUFBLFlBQUQ7QUFBZ0JaLEVBQUFBO0FBQWhCLENBQWpCIiwic291cmNlUm9vdCI6IkU6XFxib29tYWR2ZXJ0aXNlbWVudFxcc2VydmVyYXBpXFxtb2RlbHNcXCIsInNvdXJjZXNDb250ZW50IjpbInZhciBtb25nb29zZSA9IHJlcXVpcmUoJ21vbmdvb3NlJyk7XHJcbmNvbnN0IFNjaGVtYSA9IG1vbmdvb3NlLlNjaGVtYTtcclxuXHJcbmNvbnN0IGFjY291bnRfc2NoZW1hID0gbmV3IFNjaGVtYSh7XHJcbiAgICBpZCAgICAgICAgICAgICAgICAgIDogICBTdHJpbmcsIC8vIFN0cmluZyBpcyBzaG9ydGhhbmQgZm9yIHt0eXBlOiBTdHJpbmd9XHJcbiAgICBpbmZsdWVuY2VyaWQgICAgICAgIDogICB7IHR5cGU6IG1vbmdvb3NlLlNjaGVtYS5PYmplY3RJZH0sXHJcbiAgICBiYW5rX2FjY291bnRfaWQgICAgIDogICBTdHJpbmcsXHJcbiAgICBjYXJkX2lkICAgICAgICAgICAgIDogICBTdHJpbmcsXHJcbiAgICBsYXN0XzQgICAgICAgICAgICAgIDogICBTdHJpbmcsXHJcbiAgICBjYXJkX2FkZGVkX3Jlc3BvbnNlIDogICBTdHJpbmcsXHJcbiAgICBjcmVhdGVkX2F0ICAgICAgICAgIDogICBEYXRlLFxyXG4gICAgLy9jcmVhdGVkX2F0ICAgICAgOiAgIHsgdHlwZTogRGF0ZSwgZGVmYXVsdDogRGF0ZS5ub3cgfVxyXG59KTtcclxuXHJcbmNvbnN0IGFjY291bnRfZGF0YSA9IG1vbmdvb3NlLm1vZGVsKCdhY2NvdW50X2RhdGEnLCBhY2NvdW50X3NjaGVtYSk7XHJcbm1vZHVsZS5leHBvcnRzID0ge2FjY291bnRfZGF0YSAsIGFjY291bnRfc2NoZW1hfTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "account_data.js"
      ],
      "names": [
        "mongoose",
        "require",
        "Schema",
        "account_schema",
        "id",
        "String",
        "influencerid",
        "type",
        "ObjectId",
        "bank_account_id",
        "card_id",
        "last_4",
        "card_added_response",
        "created_at",
        "Date",
        "account_data",
        "model",
        "module",
        "exports"
      ],
      "mappings": "AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAtB;;AACA,MAAMC,MAAM,GAAGF,QAAQ,CAACE,MAAxB;AAEA,MAAMC,cAAc,GAAG,IAAID,MAAJ,CAAW;AAC9BE,EAAAA,EAAE,EAAsBC,MADM;AACE;AAChCC,EAAAA,YAAY,EAAY;AAAEC,IAAAA,IAAI,EAAEP,QAAQ,CAACE,MAAT,CAAgBM;AAAxB,GAFM;AAG9BC,EAAAA,eAAe,EAASJ,MAHM;AAI9BK,EAAAA,OAAO,EAAiBL,MAJM;AAK9BM,EAAAA,MAAM,EAAkBN,MALM;AAM9BO,EAAAA,mBAAmB,EAAKP,MANM;AAO9BQ,EAAAA,UAAU,EAAcC,IAPM,CAQ9B;;AAR8B,CAAX,CAAvB;AAWA,MAAMC,YAAY,GAAGf,QAAQ,CAACgB,KAAT,CAAe,cAAf,EAA+Bb,cAA/B,CAArB;AACAc,MAAM,CAACC,OAAP,GAAiB;AAACH,EAAAA,YAAD;AAAgBZ,EAAAA;AAAhB,CAAjB",
      "sourceRoot": "E:\\boomadvertisement\\serverapi\\models\\",
      "sourcesContent": [
        "var mongoose = require('mongoose');\r\nconst Schema = mongoose.Schema;\r\n\r\nconst account_schema = new Schema({\r\n    id                  :   String, // String is shorthand for {type: String}\r\n    influencerid        :   { type: mongoose.Schema.ObjectId},\r\n    bank_account_id     :   String,\r\n    card_id             :   String,\r\n    last_4              :   String,\r\n    card_added_response :   String,\r\n    created_at          :   Date,\r\n    //created_at      :   { type: Date, default: Date.now }\r\n});\r\n\r\nconst account_data = mongoose.model('account_data', account_schema);\r\nmodule.exports = {account_data , account_schema};"
      ]
    },
    "sourceType": "module",
    "mtime": 1619593102212
  },
  "{\"sourceRoot\":\"E:\\\\boomadvertisement\\\\serverapi\\\\config\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"E:\\\\boomadvertisement\\\\serverapi\",\"filename\":\"E:\\\\boomadvertisement\\\\serverapi\\\\config\\\\stripe.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"E:\\\\boomadvertisement\\\\serverapi\",\"plugins\":[],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "E:\\boomadvertisement\\serverapi\\config\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "E:\\boomadvertisement\\serverapi",
      "filename": "E:\\boomadvertisement\\serverapi\\config\\stripe.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "E:\\boomadvertisement\\serverapi",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "E:\\boomadvertisement\\serverapi\\config\\stripe.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "E:\\boomadvertisement\\serverapi\\config\\stripe.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "E:\\boomadvertisement\\serverapi\\config\\",
        "sourceFileName": "stripe.js"
      }
    },
    "ast": null,
    "code": "var config = {};\nconfig.account_id = 'acct_1HcUqfDnJHxQJk0M';\nconfig.Publishable_Key = 'pk_test_wtJVzJKpR9dbqN7Ml7vnR1lc00m9k1B0uR';\nconfig.Secret_Key = 'sk_test_STTTocdv5NxCwUDDwIBs5rZW00zadVbJnf';\nmodule.exports = config;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN0cmlwZS5qcyJdLCJuYW1lcyI6WyJjb25maWciLCJhY2NvdW50X2lkIiwiUHVibGlzaGFibGVfS2V5IiwiU2VjcmV0X0tleSIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBLElBQUlBLE1BQU0sR0FBRyxFQUFiO0FBRUFBLE1BQU0sQ0FBQ0MsVUFBUCxHQUEwQix1QkFBMUI7QUFDQUQsTUFBTSxDQUFDRSxlQUFQLEdBQTBCLDRDQUExQjtBQUNBRixNQUFNLENBQUNHLFVBQVAsR0FBMEIsNENBQTFCO0FBRUFDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQkwsTUFBakIiLCJzb3VyY2VSb290IjoiRTpcXGJvb21hZHZlcnRpc2VtZW50XFxzZXJ2ZXJhcGlcXGNvbmZpZ1xcIiwic291cmNlc0NvbnRlbnQiOlsidmFyIGNvbmZpZyA9IHt9O1xyXG5cclxuY29uZmlnLmFjY291bnRfaWQgICAgICAgPSAnYWNjdF8xSGNVcWZEbkpIeFFKazBNJztcclxuY29uZmlnLlB1Ymxpc2hhYmxlX0tleSAgPSAncGtfdGVzdF93dEpWekpLcFI5ZGJxTjdNbDd2blIxbGMwMG05azFCMHVSJztcclxuY29uZmlnLlNlY3JldF9LZXkgICAgICAgPSAnc2tfdGVzdF9TVFRUb2NkdjVOeEN3VUREd0lCczVyWlcwMHphZFZiSm5mJztcclxuXHJcbm1vZHVsZS5leHBvcnRzID0gY29uZmlnOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "stripe.js"
      ],
      "names": [
        "config",
        "account_id",
        "Publishable_Key",
        "Secret_Key",
        "module",
        "exports"
      ],
      "mappings": "AAAA,IAAIA,MAAM,GAAG,EAAb;AAEAA,MAAM,CAACC,UAAP,GAA0B,uBAA1B;AACAD,MAAM,CAACE,eAAP,GAA0B,4CAA1B;AACAF,MAAM,CAACG,UAAP,GAA0B,4CAA1B;AAEAC,MAAM,CAACC,OAAP,GAAiBL,MAAjB",
      "sourceRoot": "E:\\boomadvertisement\\serverapi\\config\\",
      "sourcesContent": [
        "var config = {};\r\n\r\nconfig.account_id       = 'acct_1HcUqfDnJHxQJk0M';\r\nconfig.Publishable_Key  = 'pk_test_wtJVzJKpR9dbqN7Ml7vnR1lc00m9k1B0uR';\r\nconfig.Secret_Key       = 'sk_test_STTTocdv5NxCwUDDwIBs5rZW00zadVbJnf';\r\n\r\nmodule.exports = config;"
      ]
    },
    "sourceType": "module",
    "mtime": 1619528338196
  },
  "{\"sourceRoot\":\"E:\\\\boomadvertisement\\\\serverapi\\\\routes\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"E:\\\\boomadvertisement\\\\serverapi\",\"filename\":\"E:\\\\boomadvertisement\\\\serverapi\\\\routes\\\\login.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"E:\\\\boomadvertisement\\\\serverapi\",\"plugins\":[],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "E:\\boomadvertisement\\serverapi\\routes\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "E:\\boomadvertisement\\serverapi",
      "filename": "E:\\boomadvertisement\\serverapi\\routes\\login.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "E:\\boomadvertisement\\serverapi",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "E:\\boomadvertisement\\serverapi\\routes\\login.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "E:\\boomadvertisement\\serverapi\\routes\\login.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "E:\\boomadvertisement\\serverapi\\routes\\",
        "sourceFileName": "login.js"
      }
    },
    "ast": null,
    "code": "var express = require('express');\n\nvar router = express.Router();\n\nvar mongoose = require('mongoose');\n\nconst promoters = require('../models/promoters');\n\nconst influencers = require('../models/influencers');\n\nconst checkout = require('../models/checkout');\n\nconst account_data = require('../models/account_data');\n\nvar passwordHash = require('password-hash');\n\nconst email = require('../config/email');\n\nconst nodemailer = require('nodemailer');\n\nconst path = require('path');\n\nvar account_id = 'acct_1HcUqfDnJHxQJk0M';\nvar Publishable_Key = 'pk_test_wtJVzJKpR9dbqN7Ml7vnR1lc00m9k1B0uR';\nvar Secret_Key = 'sk_test_STTTocdv5NxCwUDDwIBs5rZW00zadVbJnf'; //const account_id = 'acct_1HI9qMEXA7xfj1nH'; \n// var Publishable_Key = 'pk_test_51HI9qMEXA7xfj1nHVxgdLB9TapBg5XlzSdvp991XoqXlLhePzY4I8l54WyzzRyDpMfWG8ubnIqUq7llRkahqiOsi00BDEFDLGg'\n// var Secret_Key = 'sk_test_51HI9qMEXA7xfj1nHePxD4KlYqi9nUUlpjvpDmwNQhMEyQCeTMCiUGw6AFWuJ4YytCyVgr9Br1BkqohBvFJGG3skO00THMGx9Fv'\n\nconst stripe = require('stripe')(Secret_Key);\n\nconst unread = 0;\nconst read = 1; // Send Email Function \n\nvar sendEmail = function (to, subject, html) {\n  return new Promise(function (resolve, reject) {\n    var transporter = nodemailer.createTransport({\n      service: 'gmail',\n      port: 465,\n      auth: {\n        user: email.email,\n        pass: email.password\n      },\n      tls: {\n        // do not fail on invalid certs\n        rejectUnauthorized: false\n      }\n    });\n    var mailOptions = {\n      from: email.email + ' <http://boomadvertise.com/>',\n      to: to,\n      subject: subject,\n      html: html\n    };\n    transporter.sendMail(mailOptions, function (error, info) {\n      if (error) {\n        reject(error);\n      } else {\n        resolve(1);\n      }\n    });\n  });\n};\n\nrouter.post('/', function (req, res) {\n  if (req.body.signin.user_type == 0) {\n    if (!passwordHash.isHashed(req.body.signin.password)) {\n      var hashedPassword = passwordHash.generate(req.body.signin.password);\n      influencers.influencers.find({\n        $or: [{\n          name: req.body.signin.email\n        }, {\n          'email': req.body.signin.email\n        }]\n      }, function (err, influencers) {\n        if (err) {\n          res.json({\n            status: \"failure\",\n            statusCode: 600,\n            msg: err\n          });\n        } else if (influencers.length == 0) {\n          res.json({\n            status: \"failure\",\n            statusCode: 500,\n            msg: \"Invalid Credentials!!!\"\n          });\n        } else {\n          if (passwordHash.verify(req.body.signin.password, influencers[0].password)) {\n            res.json({\n              status: \"success\",\n              statusCode: 200,\n              data: influencers,\n              msg: \"Login successfully...\"\n            });\n          } else {\n            res.json({\n              status: \"failure\",\n              statusCode: 100,\n              msg: \"Invalid Credentials!!!\"\n            });\n          }\n        }\n      });\n    }\n  } else {\n    if (!passwordHash.isHashed(req.body.signin.password)) {\n      var hashedPassword = passwordHash.generate(req.body.signin.password);\n      promoters.promoters.find({\n        $or: [{\n          name: req.body.signin.email\n        }, {\n          'email': req.body.signin.email\n        }]\n      }, function (err, promoters) {\n        if (err) {\n          res.json({\n            status: \"failure\",\n            statusCode: 100,\n            msg: err\n          });\n        } else if (promoters.length == 0) {\n          res.json({\n            status: \"failure\",\n            statusCode: 100,\n            msg: \"Invalid Credentials!!!\"\n          });\n        } else {\n          if (passwordHash.verify(req.body.signin.password, promoters[0].password)) {\n            res.json({\n              status: \"success\",\n              statusCode: 200,\n              data: promoters,\n              msg: \"Login successfully...\"\n            });\n          } else {\n            res.json({\n              status: \"failure\",\n              statusCode: 100,\n              msg: \"Invalid Credentials!!!\"\n            });\n          }\n        }\n      });\n    }\n  } // else{\n  // promoters.promoters\n  // .find({ $or : [{name:req.body.signin.email},{'email':req.body.signin.email}]},function (err, promoters) {\n  //     if (err) {\n  //         res.json({status:\"failure\",statusCode:100,data:err});\n  //     }else if(promoters.length==0){\n  //       res.json({status:\"failure\",statusCode:100,data:\"Invalid Credentials!!!\"});\n  //       }\n  //       else{\n  //         if(passwordHash.verify(req.body.signin.password, promoters[0].password)){\n  //         \n  //           res.json({status:\"success\",statusCode:200,data:promoters});\n  //         }\n  //       }\n  //   });\n  // } \n\n});\nrouter.post(\"/payment\", async function (req, res) {\n  let email = req.body.email;\n  let name = req.body.name;\n  let password = req.body.password;\n  let phone = req.body.phone;\n  let description = req.body.description;\n  let total_amount = req.body.total_amount;\n  let influencer_email = req.body.influencer_email.trim();\n  let influencer_id = req.body.influencer_id;\n  let media_option = req.body.media_option;\n  let media_type = req.body.media_key;\n  let stripe_email = req.body.stripe_email;\n  let stripe_username = req.body.stripe_username;\n  let card_number = req.body.stripe_cardnumber;\n  let card_cvc = req.body.stripe_cvc;\n  let stripe_zipcode = req.body.stripe_zipcode;\n  let month_year = req.body.stripe_month_year.split('/');\n  let exp_month = month_year[0];\n  let exp_year = month_year[1] ? month_year[1] : '';\n  let date_ob = new Date();\n  let date = (\"0\" + date_ob.getDate()).slice(-2);\n  let month = (\"0\" + (date_ob.getMonth() + 1)).slice(-2);\n  let year = date_ob.getFullYear();\n  let hours = date_ob.getHours();\n  let minutes = date_ob.getMinutes();\n  let seconds = date_ob.getSeconds(); // prints date & time in YYYY-MM-DD HH:MM:SS format\n\n  let dateTime = year + \"-\" + month + \"-\" + date + \" \" + hours + \":\" + minutes + \":\" + seconds;\n  let commission = 20;\n  let to_admin_amount = commission / 100 * total_amount;\n  let to_influencer_amount = total_amount - to_admin_amount;\n  let checkout_data = new checkout.checkout();\n  checkout_data.influencerid = influencer_id;\n  checkout_data.influencer_id = influencer_id;\n  checkout_data.name = name;\n  checkout_data.email = email;\n  checkout_data.phone = phone;\n  checkout_data.description = description;\n  checkout_data.media_type = media_type;\n  checkout_data.media_option = media_option;\n  checkout_data.response = '';\n  checkout_data.amount = to_influencer_amount;\n  checkout_data.status = unread;\n  checkout_data.date = dateTime;\n  checkout_data.created_at = dateTime;\n  /*checkout_data.save(function(error , data){\r\n      let subject = 'Buy by user from Boomadvertisement';\r\n  \r\n    sendEmail(influencer_email , subject,description);\r\n    res.send({code:100,message: \"$\"+total_amount+\" payment has been successfully completed.\"}); \r\n    });\r\n    return false;*/\n\n  let bank_account_id = '';\n  await account_data.account_data.findOne({\n    influencerid: influencer_id\n  }, function (account_data_err, account_data_res) {\n    if (account_data_err) {\n      res.json({\n        code: 201,\n        message: \" Influencer's account does not exist'\"\n      });\n      return;\n    }\n\n    bank_account_id = account_data_res.bank_account_id;\n  });\n  let account_status = false;\n\n  if (!influencer_email) {\n    res.send({\n      code: 201,\n      message: \" Influencer doesn't have any email\"\n    });\n    return;\n  }\n\n  const account = await stripe.accounts.retrieve(bank_account_id);\n  account_status = account.capabilities.transfers == 'active' ? true : false; // if(!account_status){\n  //   res.send({code:201,message: \" Influencer's account not verified yet.\"});\n  //   return;\n  // }\n\n  const token = await stripe.tokens.create({\n    card: {\n      number: card_number,\n      exp_month: exp_month,\n      exp_year: exp_year,\n      cvc: card_cvc\n    }\n  }).then(token => {\n    let token_id = token.id;\n    stripe.customers.create({\n      email: stripe_email,\n      source: token_id,\n      name: stripe_username,\n      address: {\n        line1: 'TC 9/4 Old MES colony',\n        postal_code: stripe_zipcode,\n        city: 'Indore',\n        state: 'Madhya Pradesh',\n        country: 'India'\n      }\n    }).then(customer => {\n      return stripe.charges.create({\n        amount: to_admin_amount * 100,\n        // Charing Rs 25 \n        description: 'Web Development Product',\n        //currency: 'INR', \n        currency: 'USD',\n        customer: customer.id\n      });\n    }).then(charge => {\n      //Transfer into influencer's account \n      let transfer = stripe.transfers.create({\n        amount: to_influencer_amount * 100,\n        'currency': 'USD',\n        'destination': bank_account_id\n      }).then(result => {\n        console.log(\"vijay cheking start\");\n        console.log(result);\n        console.log(\"vijay cheking e nd\");\n      }).catch(err => {\n        console.log(err);\n        res.send({\n          code: 200,\n          message: err,\n          data: \"vijay cking\"\n        }); // If some error occurs \n      });\n      ;\n      return;\n      let checkout_data = new checkout.checkout();\n      checkout_data.influencerid = influencer_id;\n      checkout_data.influencer_id = influencer_id;\n      checkout_data.name = name;\n      checkout_data.email = email;\n      checkout_data.phone = phone;\n      checkout_data.description = description;\n      checkout_data.media_type = media_type;\n      checkout_data.media_option = media_option;\n      checkout_data.response = JSON.stringify(charge);\n      checkout_data.amount = total_amount;\n      checkout_data.status = unread;\n      checkout_data.date = dateTime;\n      checkout_data.created_at = dateTime;\n      checkout_data.save(function (error, data) {\n        let subject = 'Buy by user from Boomadvertisement';\n        sendEmail(influencer_email, subject, description);\n        res.send({\n          code: 100,\n          message: \"$\" + total_amount + \" payment has been successfully completed.\"\n        });\n      }); // If no error occurs \n    }).catch(err => {\n      console.log(err);\n      res.send({\n        code: 200,\n        message: err\n      }); // If some error occurs \n    });\n  }).catch(err => {\n    res.send({\n      code: 200,\n      message: err\n    }); // If some error occurs \n  });\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxvZ2luLmpzIl0sIm5hbWVzIjpbImV4cHJlc3MiLCJyZXF1aXJlIiwicm91dGVyIiwiUm91dGVyIiwibW9uZ29vc2UiLCJwcm9tb3RlcnMiLCJpbmZsdWVuY2VycyIsImNoZWNrb3V0IiwiYWNjb3VudF9kYXRhIiwicGFzc3dvcmRIYXNoIiwiZW1haWwiLCJub2RlbWFpbGVyIiwicGF0aCIsImFjY291bnRfaWQiLCJQdWJsaXNoYWJsZV9LZXkiLCJTZWNyZXRfS2V5Iiwic3RyaXBlIiwidW5yZWFkIiwicmVhZCIsInNlbmRFbWFpbCIsInRvIiwic3ViamVjdCIsImh0bWwiLCJQcm9taXNlIiwicmVzb2x2ZSIsInJlamVjdCIsInRyYW5zcG9ydGVyIiwiY3JlYXRlVHJhbnNwb3J0Iiwic2VydmljZSIsInBvcnQiLCJhdXRoIiwidXNlciIsInBhc3MiLCJwYXNzd29yZCIsInRscyIsInJlamVjdFVuYXV0aG9yaXplZCIsIm1haWxPcHRpb25zIiwiZnJvbSIsInNlbmRNYWlsIiwiZXJyb3IiLCJpbmZvIiwicG9zdCIsInJlcSIsInJlcyIsImJvZHkiLCJzaWduaW4iLCJ1c2VyX3R5cGUiLCJpc0hhc2hlZCIsImhhc2hlZFBhc3N3b3JkIiwiZ2VuZXJhdGUiLCJmaW5kIiwiJG9yIiwibmFtZSIsImVyciIsImpzb24iLCJzdGF0dXMiLCJzdGF0dXNDb2RlIiwibXNnIiwibGVuZ3RoIiwidmVyaWZ5IiwiZGF0YSIsInBob25lIiwiZGVzY3JpcHRpb24iLCJ0b3RhbF9hbW91bnQiLCJpbmZsdWVuY2VyX2VtYWlsIiwidHJpbSIsImluZmx1ZW5jZXJfaWQiLCJtZWRpYV9vcHRpb24iLCJtZWRpYV90eXBlIiwibWVkaWFfa2V5Iiwic3RyaXBlX2VtYWlsIiwic3RyaXBlX3VzZXJuYW1lIiwiY2FyZF9udW1iZXIiLCJzdHJpcGVfY2FyZG51bWJlciIsImNhcmRfY3ZjIiwic3RyaXBlX2N2YyIsInN0cmlwZV96aXBjb2RlIiwibW9udGhfeWVhciIsInN0cmlwZV9tb250aF95ZWFyIiwic3BsaXQiLCJleHBfbW9udGgiLCJleHBfeWVhciIsImRhdGVfb2IiLCJEYXRlIiwiZGF0ZSIsImdldERhdGUiLCJzbGljZSIsIm1vbnRoIiwiZ2V0TW9udGgiLCJ5ZWFyIiwiZ2V0RnVsbFllYXIiLCJob3VycyIsImdldEhvdXJzIiwibWludXRlcyIsImdldE1pbnV0ZXMiLCJzZWNvbmRzIiwiZ2V0U2Vjb25kcyIsImRhdGVUaW1lIiwiY29tbWlzc2lvbiIsInRvX2FkbWluX2Ftb3VudCIsInRvX2luZmx1ZW5jZXJfYW1vdW50IiwiY2hlY2tvdXRfZGF0YSIsImluZmx1ZW5jZXJpZCIsInJlc3BvbnNlIiwiYW1vdW50IiwiY3JlYXRlZF9hdCIsImJhbmtfYWNjb3VudF9pZCIsImZpbmRPbmUiLCJhY2NvdW50X2RhdGFfZXJyIiwiYWNjb3VudF9kYXRhX3JlcyIsImNvZGUiLCJtZXNzYWdlIiwiYWNjb3VudF9zdGF0dXMiLCJzZW5kIiwiYWNjb3VudCIsImFjY291bnRzIiwicmV0cmlldmUiLCJjYXBhYmlsaXRpZXMiLCJ0cmFuc2ZlcnMiLCJ0b2tlbiIsInRva2VucyIsImNyZWF0ZSIsImNhcmQiLCJudW1iZXIiLCJjdmMiLCJ0aGVuIiwidG9rZW5faWQiLCJpZCIsImN1c3RvbWVycyIsInNvdXJjZSIsImFkZHJlc3MiLCJsaW5lMSIsInBvc3RhbF9jb2RlIiwiY2l0eSIsInN0YXRlIiwiY291bnRyeSIsImN1c3RvbWVyIiwiY2hhcmdlcyIsImN1cnJlbmN5IiwiY2hhcmdlIiwidHJhbnNmZXIiLCJyZXN1bHQiLCJjb25zb2xlIiwibG9nIiwiY2F0Y2giLCJKU09OIiwic3RyaW5naWZ5Iiwic2F2ZSIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUNBLElBQUlBLE9BQU8sR0FBV0MsT0FBTyxDQUFDLFNBQUQsQ0FBN0I7O0FBQ0EsSUFBSUMsTUFBTSxHQUFZRixPQUFPLENBQUNHLE1BQVIsRUFBdEI7O0FBQ0EsSUFBTUMsUUFBUSxHQUFRSCxPQUFPLENBQUMsVUFBRCxD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QUFULEVBRGMsQ0FDd0I7QUFDdkMsR0E5Rm1CLENBQXBCO0FBaUdELENBek1EO0FBMk1BK0YsTUFBTSxDQUFDQyxPQUFQLEdBQWlCbkosTUFBakIiLCJzb3VyY2VSb290IjoiRTpcXGJvb21hZHZlcnRpc2VtZW50XFxzZXJ2ZXJhcGlcXHJvdXRlc1xcIiwic291cmNlc0NvbnRlbnQiOlsiXHJcbnZhciBleHByZXNzICAgICAgICAgPSByZXF1aXJlKCdleHByZXNzJyk7XHJcbnZhciByb3V0ZXIgICAgICAgICAgPSBleHByZXNzLlJvdXRlcigpO1xyXG52YXIgICBtb25nb29zZSAgICAgID0gcmVxdWlyZSgnbW9uZ29vc2UnKTtcclxuY29uc3QgcHJvbW90ZXJzICAgICA9IHJlcXVpcmUoJy4uL21vZGVscy9wcm9tb3RlcnMnKTtcclxuY29uc3QgaW5mbHVlbmNlcnMgICA9IHJlcXVpcmUoJy4uL21vZGVscy9pbmZsdWVuY2VycycpO1xyXG5jb25zdCBjaGVja291dCAgICAgID0gcmVxdWlyZSgnLi4vbW9kZWxzL2NoZWNrb3V0Jyk7XHJcbmNvbnN0IGFjY291bnRfZGF0YSAgPSByZXF1aXJlKCcuLi9tb2RlbHMvYWNjb3VudF9kYXRhJyk7XHJcbnZhciAgIHBhc3N3b3JkSGFzaCAgPSByZXF1aXJlKCdwYXNzd29yZC1oYXNoJyk7XHJcbmNvbnN0IGVtYWlsICAgICAgICAgPSByZXF1aXJlKCcuLi9jb25maWcvZW1haWwnKTtcclxuY29uc3Qgbm9kZW1haWxlciAgICA9IHJlcXVpcmUoJ25vZGVtYWlsZXInKTtcclxuY29uc3QgcGF0aCA9IHJlcXVpcmUoJ3BhdGgnKSBcclxuXHJcbnZhciBhY2NvdW50X2lkPSAnYWNjdF8xSGNVcWZEbkpIeFFKazBNJztcclxudmFyIFB1Ymxpc2hhYmxlX0tleSA9ICdwa190ZXN0X3d0SlZ6SktwUjlkYnFON01sN3ZuUjFsYzAwbTlrMUIwdVInO1xyXG52YXIgU2VjcmV0X0tleSA9ICdza190ZXN0X1NUVFRvY2R2NU54Q3dVRER3SUJzNXJaVzAwemFkVmJKbmYnO1xyXG4vL2NvbnN0IGFjY291bnRfaWQgPSAnYWNjdF8xSEk5cU1FWEE3eGZqMW5IJzsgXHJcbi8vIHZhciBQdWJsaXNoYWJsZV9LZXkgPSAncGtfdGVzdF81MUhJOXFNRVhBN3hmajFuSFZ4Z2RMQjlUYXBCZzVYbHpTZHZwOTkxWG9xWGxMaGVQelk0SThsNTRXeXp6UnlEcE1mV0c4dWJuSXFVcTdsbFJrYWhxaU9zaTAwQkRFRkRMR2cnXHJcbi8vIHZhciBTZWNyZXRfS2V5ID0gJ3NrX3Rlc3RfNTFISTlxTUVYQTd4ZmoxbkhlUHhENEtsWXFpOW5VVWxwanZwRG13TlFoTUV5UUNlVE1DaVVHdzZBRld1SjRZeXRDeVZncjlCcjFCa3FvaEJ2RkpHRzNza08wMFRITUd4OUZ2J1xyXG5cclxuY29uc3Qgc3RyaXBlID0gcmVxdWlyZSgnc3RyaXBlJykoU2VjcmV0X0tleSk7XHJcblxyXG5jb25zdCB1bnJlYWQgID0gMDtcclxuY29uc3QgcmVhZCAgICA9IDE7XHJcblxyXG4gIC8vIFNlbmQgRW1haWwgRnVuY3Rpb24gXHJcblxyXG4gIHZhciBzZW5kRW1haWwgPSBmdW5jdGlvbih0byxzdWJqZWN0LGh0bWwpIHtcclxuXHJcbiAgICBcclxuICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbihyZXNvbHZlLCByZWplY3QpIHtcclxuICAgICAgdmFyIHRyYW5zcG9ydGVyID0gbm9kZW1haWxlci5jcmVhdGVUcmFuc3BvcnQoe1xyXG4gICAgICAgIFxyXG4gICAgICAgIHNlcnZpY2U6ICdnbWFpbCcsIFxyXG4gICAgICAgIHBvcnQ6NDY1LFxyXG4gICAgICAgIGF1dGg6IHsgXHJcbiAgICAgICAgICB1c2VyOiBlbWFpbC5lbWFpbCxcclxuICAgICAgICAgIHBhc3M6IGVtYWlsLnBhc3N3b3JkXHJcbiAgICAgICAgfSAsXHJcbiAgICAgICAgdGxzOiB7XHJcbiAgICAgICAgICAvLyBkbyBub3QgZmFpbCBvbiBpbnZhbGlkIGNlcnRzXHJcbiAgICAgICAgICByZWplY3RVbmF1dGhvcml6ZWQ6IGZhbHNlXHJcbiAgICAgICAgfVxyXG4gICAgICB9KTtcclxuICAgIFxyXG4gICAgdmFyIG1haWxPcHRpb25zID0ge1xyXG4gICAgICBmcm9tOiBlbWFpbC5lbWFpbCsnIDxodHRwOi8vYm9vbWFkdmVydGlzZS5jb20vPicsXHJcbiAgICAgIHRvOiB0byxcclxuICAgICAgc3ViamVjdDogc3ViamVjdCxcclxuICAgICAgaHRtbDogaHRtbFxyXG4gICAgfTtcclxuXHJcbiAgICAgIHRyYW5zcG9ydGVyLnNlbmRNYWlsKG1haWxPcHRpb25zLCBmdW5jdGlvbihlcnJvciwgaW5mbyl7XHJcbiAgICAgIGlmIChlcnJvcikge1xyXG4gICAgICAgIHJlamVjdChlcnJvcik7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgIHJlc29sdmUoMSlcclxuICAgICAgfVxyXG4gICAgfSk7XHJcblxyXG4gICAgXHJcbiAgfSk7XHJcblxyXG4gIH1cclxuXHJcbiAgcm91dGVyLnBvc3QoJy8nLCBmdW5jdGlvbihyZXEsIHJlcykge1xyXG4gICAgXHJcbiAgICBpZihyZXEuYm9keS5zaWduaW4udXNlcl90eXBlID09IDApe1xyXG5cclxuICAgICAgaWYoIXBhc3N3b3JkSGFzaC5pc0hhc2hlZChyZXEuYm9keS5zaWduaW4ucGFzc3dvcmQpKXtcclxuICAgICAgICB2YXIgaGFzaGVkUGFzc3dvcmQgPSBwYXNzd29yZEhhc2guZ2VuZXJhdGUocmVxLmJvZHkuc2lnbmluLnBhc3N3b3JkKTtcclxuICAgICAgXHJcbiAgICAgICAgaW5mbHVlbmNlcnMuaW5mbHVlbmNlcnNcclxuICAgICAgICAgIC5maW5kKHsgJG9yIDogW3tuYW1lOnJlcS5ib2R5LnNpZ25pbi5lbWFpbH0seydlbWFpbCc6cmVxLmJvZHkuc2lnbmluLmVtYWlsfV19LGZ1bmN0aW9uIChlcnIsIGluZmx1ZW5jZXJzKSB7XHJcbiAgICAgICAgICBpZiAoZXJyKSB7XHJcbiAgICAgICAgICAgICAgcmVzLmpzb24oe3N0YXR1czpcImZhaWx1cmVcIixzdGF0dXNDb2RlOjYwMCxtc2c6ZXJyfSk7XHJcbiAgICAgICAgICB9ZWxzZSBpZihpbmZsdWVuY2Vycy5sZW5ndGg9PTApe1xyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAgcmVzLmpzb24oe3N0YXR1czpcImZhaWx1cmVcIixzdGF0dXNDb2RlOjUwMCxtc2c6XCJJbnZhbGlkIENyZWRlbnRpYWxzISEhXCJ9KTtcclxuICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZXtcclxuICAgICAgICAgICAgICBpZihwYXNzd29yZEhhc2gudmVyaWZ5KHJlcS5ib2R5LnNpZ25pbi5wYXNzd29yZCwgaW5mbHVlbmNlcnNbMF0ucGFzc3dvcmQpKXtcclxuICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgIHJlcy5qc29uKHtzdGF0dXM6XCJzdWNjZXNzXCIsc3RhdHVzQ29kZToyMDAsZGF0YTppbmZsdWVuY2Vycyxtc2c6XCJMb2dpbiBzdWNjZXNzZnVsbHkuLi5cIn0pO1xyXG4gICAgICAgICAgICAgIH1lbHNle1xyXG4gICAgICAgICAgICAgICAgcmVzLmpzb24oe3N0YXR1czpcImZhaWx1cmVcIixzdGF0dXNDb2RlOjEwMCxtc2c6XCJJbnZhbGlkIENyZWRlbnRpYWxzISEhXCJ9KTtcclxuICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgICAgfVxyXG5cclxuICAgIH1lbHNle1xyXG4gICAgICBpZighcGFzc3dvcmRIYXNoLmlzSGFzaGVkKHJlcS5ib2R5LnNpZ25pbi5wYXNzd29yZCkpe1xyXG4gICAgICAgIHZhciBoYXNoZWRQYXNzd29yZCA9IHBhc3N3b3JkSGFzaC5nZW5lcmF0ZShyZXEuYm9keS5zaWduaW4ucGFzc3dvcmQpO1xyXG4gICAgICAgIFxyXG4gICAgICAgIHByb21vdGVycy5wcm9tb3RlcnNcclxuICAgICAgICAgIC5maW5kKHsgJG9yIDogW3tuYW1lOnJlcS5ib2R5LnNpZ25pbi5lbWFpbH0seydlbWFpbCc6cmVxLmJvZHkuc2lnbmluLmVtYWlsfV19LGZ1bmN0aW9uIChlcnIsIHByb21vdGVycykge1xyXG4gICAgICAgICAgaWYgKGVycikge1xyXG4gICAgICAgICAgICAgIHJlcy5qc29uKHtzdGF0dXM6XCJmYWlsdXJlXCIsc3RhdHVzQ29kZToxMDAsbXNnOmVycn0pO1xyXG4gICAgICAgICAgfWVsc2UgaWYocHJvbW90ZXJzLmxlbmd0aD09MCl7XHJcbiAgICAgICAgICAgIHJlcy5qc29uKHtzdGF0dXM6XCJmYWlsdXJlXCIsc3RhdHVzQ29kZToxMDAsbXNnOlwiSW52YWxpZCBDcmVkZW50aWFscyEhIVwifSk7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2V7XHJcbiAgICAgICAgICAgICAgaWYocGFzc3dvcmRIYXNoLnZlcmlmeShyZXEuYm9keS5zaWduaW4ucGFzc3dvcmQsIHByb21vdGVyc1swXS5wYXNzd29yZCkpe1xyXG4gICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgcmVzLmpzb24oe3N0YXR1czpcInN1Y2Nlc3NcIixzdGF0dXNDb2RlOjIwMCxkYXRhOnByb21vdGVycyxtc2c6XCJMb2dpbiBzdWNjZXNzZnVsbHkuLi5cIn0pO1xyXG4gICAgICAgICAgICAgIH1lbHNle1xyXG4gICAgICAgICAgICAgICAgcmVzLmpzb24oe3N0YXR1czpcImZhaWx1cmVcIixzdGF0dXNDb2RlOjEwMCxtc2c6XCJJbnZhbGlkIENyZWRlbnRpYWxzISEhXCJ9KTtcclxuICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gICAgICAvLyBlbHNle1xyXG4gICAgICAvLyBwcm9tb3RlcnMucHJvbW90ZXJzXHJcbiAgICAgIC8vIC5maW5kKHsgJG9yIDogW3tuYW1lOnJlcS5ib2R5LnNpZ25pbi5lbWFpbH0seydlbWFpbCc6cmVxLmJvZHkuc2lnbmluLmVtYWlsfV19LGZ1bmN0aW9uIChlcnIsIHByb21vdGVycykge1xyXG4gICAgICAgIFxyXG4gICAgICAvLyAgICAgaWYgKGVycikge1xyXG4gICAgICAvLyAgICAgICAgIHJlcy5qc29uKHtzdGF0dXM6XCJmYWlsdXJlXCIsc3RhdHVzQ29kZToxMDAsZGF0YTplcnJ9KTtcclxuICAgICAgLy8gICAgIH1lbHNlIGlmKHByb21vdGVycy5sZW5ndGg9PTApe1xyXG4gICAgICAvLyAgICAgICByZXMuanNvbih7c3RhdHVzOlwiZmFpbHVyZVwiLHN0YXR1c0NvZGU6MTAwLGRhdGE6XCJJbnZhbGlkIENyZWRlbnRpYWxzISEhXCJ9KTtcclxuICAgICAgLy8gICAgICAgfVxyXG4gICAgICAvLyAgICAgICBlbHNle1xyXG4gICAgICAvLyAgICAgICAgIGlmKHBhc3N3b3JkSGFzaC52ZXJpZnkocmVxLmJvZHkuc2lnbmluLnBhc3N3b3JkLCBwcm9tb3RlcnNbMF0ucGFzc3dvcmQpKXtcclxuICAgICAgLy8gICAgICAgICBcclxuICAgICAgLy8gICAgICAgICAgIHJlcy5qc29uKHtzdGF0dXM6XCJzdWNjZXNzXCIsc3RhdHVzQ29kZToyMDAsZGF0YTpwcm9tb3RlcnN9KTtcclxuICAgICAgLy8gICAgICAgICB9XHJcbiAgICAgIC8vICAgICAgIH1cclxuICAgICAgLy8gICB9KTtcclxuICAgICAgLy8gfSBcclxuXHJcbiAgICAgIFxyXG4gIH0pO1xyXG5cclxuICByb3V0ZXIucG9zdChcIi9wYXltZW50XCIsYXN5bmMgZnVuY3Rpb24ocmVxICwgcmVzKXtcclxuXHJcbiAgICBcclxuICAgIGxldCBlbWFpbCAgICAgICAgICAgICA9IHJlcS5ib2R5LmVtYWlsO1xyXG4gICAgbGV0IG5hbWUgICAgICAgICAgICAgID0gcmVxLmJvZHkubmFtZTtcclxuICAgIGxldCBwYXNzd29yZCAgICAgICAgICA9IHJlcS5ib2R5LnBhc3N3b3JkO1xyXG4gICAgbGV0IHBob25lICAgICAgICAgICAgID0gcmVxLmJvZHkucGhvbmU7XHJcbiAgICBsZXQgZGVzY3JpcHRpb24gICAgICAgPSByZXEuYm9keS5kZXNjcmlwdGlvbjtcclxuICAgIGxldCB0b3RhbF9hbW91bnQgICAgICA9IHJlcS5ib2R5LnRvdGFsX2Ftb3VudDtcclxuICAgIGxldCBpbmZsdWVuY2VyX2VtYWlsICA9IHJlcS5ib2R5LmluZmx1ZW5jZXJfZW1haWwudHJpbSgpO1xyXG4gICAgbGV0IGluZmx1ZW5jZXJfaWQgICAgID0gcmVxLmJvZHkuaW5mbHVlbmNlcl9pZDtcclxuICAgIGxldCBtZWRpYV9vcHRpb24gICAgICA9IHJlcS5ib2R5Lm1lZGlhX29wdGlvbjtcclxuICAgIGxldCBtZWRpYV90eXBlICAgICAgICA9IHJlcS5ib2R5Lm1lZGlhX2tleTtcclxuXHJcbiAgICBsZXQgc3RyaXBlX2VtYWlsICAgID0gcmVxLmJvZHkuc3RyaXBlX2VtYWlsO1xyXG4gICAgbGV0IHN0cmlwZV91c2VybmFtZSA9IHJlcS5ib2R5LnN0cmlwZV91c2VybmFtZTtcclxuICAgIGxldCBjYXJkX251bWJlciAgICAgPSByZXEuYm9keS5zdHJpcGVfY2FyZG51bWJlcjtcclxuICAgIGxldCBjYXJkX2N2YyAgICAgICAgPSByZXEuYm9keS5zdHJpcGVfY3ZjO1xyXG4gICAgbGV0IHN0cmlwZV96aXBjb2RlICA9IHJlcS5ib2R5LnN0cmlwZV96aXBjb2RlO1xyXG4gICAgbGV0IG1vbnRoX3llYXIgICAgICA9IHJlcS5ib2R5LnN0cmlwZV9tb250aF95ZWFyLnNwbGl0KCcvJyk7XHJcblxyXG4gICAgbGV0IGV4cF9tb250aCAgICAgICA9IG1vbnRoX3llYXJbMF07XHJcbiAgICBsZXQgZXhwX3llYXIgICAgICAgID0gbW9udGhfeWVhclsxXSA/IG1vbnRoX3llYXJbMV06ICcnO1xyXG5cclxuICAgIGxldCBkYXRlX29iID0gbmV3IERhdGUoKTtcclxuXHJcblxyXG4gICAgbGV0IGRhdGUgPSAoXCIwXCIgKyBkYXRlX29iLmdldERhdGUoKSkuc2xpY2UoLTIpO1xyXG4gICAgbGV0IG1vbnRoID0gKFwiMFwiICsgKGRhdGVfb2IuZ2V0TW9udGgoKSArIDEpKS5zbGljZSgtMik7XHJcbiAgICBsZXQgeWVhciA9IGRhdGVfb2IuZ2V0RnVsbFllYXIoKTtcclxuICAgIGxldCBob3VycyA9IGRhdGVfb2IuZ2V0SG91cnMoKTtcclxuICAgIGxldCBtaW51dGVzID0gZGF0ZV9vYi5nZXRNaW51dGVzKCk7XHJcbiAgICBsZXQgc2Vjb25kcyA9IGRhdGVfb2IuZ2V0U2Vjb25kcygpO1xyXG4gICAgLy8gcHJpbnRzIGRhdGUgJiB0aW1lIGluIFlZWVktTU0tREQgSEg6TU06U1MgZm9ybWF0XHJcbiAgICBsZXQgZGF0ZVRpbWUgPSB5ZWFyICsgXCItXCIgKyBtb250aCArIFwiLVwiICsgZGF0ZSArIFwiIFwiICsgaG91cnMgKyBcIjpcIiArIG1pbnV0ZXMgKyBcIjpcIiArIHNlY29uZHM7XHJcblxyXG4gICAgbGV0IGNvbW1pc3Npb24gPSAyMDtcclxuXHJcbiAgICBsZXQgdG9fYWRtaW5fYW1vdW50ICAgICAgID0gKGNvbW1pc3Npb24vMTAwKSAqIHRvdGFsX2Ftb3VudDtcclxuICAgIGxldCB0b19pbmZsdWVuY2VyX2Ftb3VudCAgPSB0b3RhbF9hbW91bnQgLSB0b19hZG1pbl9hbW91bnQ7XHJcblxyXG5cclxuICAgIFxyXG4gICAgbGV0IGNoZWNrb3V0X2RhdGEgPSAgbmV3IGNoZWNrb3V0LmNoZWNrb3V0KCk7XHJcblxyXG4gICAgICAgIGNoZWNrb3V0X2RhdGEuaW5mbHVlbmNlcmlkICA9IGluZmx1ZW5jZXJfaWQ7XHJcbiAgICAgICAgY2hlY2tvdXRfZGF0YS5pbmZsdWVuY2VyX2lkID0gaW5mbHVlbmNlcl9pZDtcclxuICAgICAgICBjaGVja291dF9kYXRhLm5hbWUgICAgICAgICAgPSBuYW1lO1xyXG4gICAgICAgIGNoZWNrb3V0X2RhdGEuZW1haWwgICAgICAgICA9IGVtYWlsO1xyXG4gICAgICAgIGNoZWNrb3V0X2RhdGEucGhvbmUgICAgICAgICA9IHBob25lO1xyXG4gICAgICAgIGNoZWNrb3V0X2RhdGEuZGVzY3JpcHRpb24gICA9IGRlc2NyaXB0aW9uO1xyXG4gICAgICAgIGNoZWNrb3V0X2RhdGEubWVkaWFfdHlwZSAgICA9IG1lZGlhX3R5cGU7XHJcbiAgICAgICAgY2hlY2tvdXRfZGF0YS5tZWRpYV9vcHRpb24gID0gbWVkaWFfb3B0aW9uO1xyXG4gICAgICAgIGNoZWNrb3V0X2RhdGEucmVzcG9uc2UgICAgICA9ICcnO1xyXG4gICAgICAgIGNoZWNrb3V0X2RhdGEuYW1vdW50ICAgICAgICA9IHRvX2luZmx1ZW5jZXJfYW1vdW50O1xyXG4gICAgICAgIGNoZWNrb3V0X2RhdGEuc3RhdHVzICAgICAgICA9IHVucmVhZDtcclxuICAgICAgICBjaGVja291dF9kYXRhLmRhdGUgICAgICAgICAgPSBkYXRlVGltZTtcclxuICAgICAgICBjaGVja291dF9kYXRhLmNyZWF0ZWRfYXQgICAgPSBkYXRlVGltZTtcclxuXHJcbiAgICAgICAgXHJcbiAgICAgICAgLypjaGVja291dF9kYXRhLnNhdmUoZnVuY3Rpb24oZXJyb3IgLCBkYXRhKXtcclxuXHJcbiAgICAgICAgICBsZXQgc3ViamVjdCA9ICdCdXkgYnkgdXNlciBmcm9tIEJvb21hZHZlcnRpc2VtZW50JztcclxuICAgICAgICBcclxuICAgICAgICAgIHNlbmRFbWFpbChpbmZsdWVuY2VyX2VtYWlsICwgc3ViamVjdCxkZXNjcmlwdGlvbik7XHJcbiAgICAgICAgICByZXMuc2VuZCh7Y29kZToxMDAsbWVzc2FnZTogXCIkXCIrdG90YWxfYW1vdW50K1wiIHBheW1lbnQgaGFzIGJlZW4gc3VjY2Vzc2Z1bGx5IGNvbXBsZXRlZC5cIn0pOyBcclxuXHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIHJldHVybiBmYWxzZTsqL1xyXG5cclxuICAgIGxldCBiYW5rX2FjY291bnRfaWQgPSAnJztcclxuICAgIGF3YWl0IGFjY291bnRfZGF0YS5hY2NvdW50X2RhdGEuZmluZE9uZSh7IGluZmx1ZW5jZXJpZCA6IGluZmx1ZW5jZXJfaWR9ICwgZnVuY3Rpb24oYWNjb3VudF9kYXRhX2VyciAsICBhY2NvdW50X2RhdGFfcmVzKXtcclxuXHJcbiAgICAgIGlmIChhY2NvdW50X2RhdGFfZXJyKSB7XHJcblxyXG4gICAgICAgIHJlcy5qc29uKHtjb2RlOjIwMSxtZXNzYWdlOiBcIiBJbmZsdWVuY2VyJ3MgYWNjb3VudCBkb2VzIG5vdCBleGlzdCdcIn0pO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgICAgfSBcclxuXHJcbiAgICAgIGJhbmtfYWNjb3VudF9pZCA9IGFjY291bnRfZGF0YV9yZXMuYmFua19hY2NvdW50X2lkO1xyXG4gICAgXHJcbiAgICB9KTtcclxuXHJcblxyXG4gICAgXHJcbiAgICBsZXQgYWNjb3VudF9zdGF0dXMgPWZhbHNlO1xyXG4gICAgXHJcbiAgICBpZighaW5mbHVlbmNlcl9lbWFpbCl7XHJcbiAgICAgIHJlcy5zZW5kKHtjb2RlOjIwMSxtZXNzYWdlOiBcIiBJbmZsdWVuY2VyIGRvZXNuJ3QgaGF2ZSBhbnkgZW1haWxcIn0pO1xyXG4gICAgICByZXR1cm47XHJcbiAgICB9XHJcblxyXG4gICAgY29uc3QgYWNjb3VudCA9IGF3YWl0IHN0cmlwZS5hY2NvdW50cy5yZXRyaWV2ZShiYW5rX2FjY291bnRfaWQpO1xyXG5cclxuICAgIGFjY291bnRfc3RhdHVzID0gYWNjb3VudC5jYXBhYmlsaXRpZXMudHJhbnNmZXJzID09ICdhY3RpdmUnID8gdHJ1ZSA6IGZhbHNlO1xyXG5cclxuXHJcbiAgICAvLyBpZighYWNjb3VudF9zdGF0dXMpe1xyXG4gICAgICBcclxuICAgIC8vICAgcmVzLnNlbmQoe2NvZGU6MjAxLG1lc3NhZ2U6IFwiIEluZmx1ZW5jZXIncyBhY2NvdW50IG5vdCB2ZXJpZmllZCB5ZXQuXCJ9KTtcclxuICAgIC8vICAgcmV0dXJuO1xyXG4gICAgLy8gfVxyXG5cclxuICAgIGNvbnN0IHRva2VuID0gYXdhaXQgc3RyaXBlLnRva2Vucy5jcmVhdGUoe1xyXG4gICAgICAgIGNhcmQ6IHtcclxuICAgICAgICAgIG51bWJlcjogY2FyZF9udW1iZXIsXHJcbiAgICAgICAgICBleHBfbW9udGg6IGV4cF9tb250aCxcclxuICAgICAgICAgIGV4cF95ZWFyOiBleHBfeWVhcixcclxuICAgICAgICAgIGN2YzogY2FyZF9jdmMsXHJcbiAgICAgICAgfSxcclxuICAgIH0pXHJcbiAgICAudGhlbigodG9rZW4pID0+IHsgXHJcbiAgICAgICAgXHJcbiAgICAgICAgbGV0IHRva2VuX2lkID0gdG9rZW4uaWQ7XHJcbiAgICAgICAgc3RyaXBlLmN1c3RvbWVycy5jcmVhdGUoeyBcclxuICAgICAgICAgIGVtYWlsOiBzdHJpcGVfZW1haWwsIFxyXG4gICAgICAgICAgc291cmNlOiB0b2tlbl9pZCwgXHJcbiAgICAgICAgICBuYW1lOiBzdHJpcGVfdXNlcm5hbWUsIFxyXG4gICAgICAgICAgYWRkcmVzczogeyBcclxuICAgICAgICAgICAgICBsaW5lMTogJ1RDIDkvNCBPbGQgTUVTIGNvbG9ueScsIFxyXG4gICAgICAgICAgICAgIHBvc3RhbF9jb2RlOiBzdHJpcGVfemlwY29kZSwgXHJcbiAgICAgICAgICAgICAgY2l0eTogJ0luZG9yZScsIFxyXG4gICAgICAgICAgICAgIHN0YXRlOiAnTWFkaHlhIFByYWRlc2gnLCBcclxuICAgICAgICAgICAgICBjb3VudHJ5OiAnSW5kaWEnLCBcclxuICAgICAgICAgIH0gXHJcbiAgICAgIH0pIFxyXG4gICAgICAudGhlbigoY3VzdG9tZXIpID0+IHsgXHJcbiAgICAgICAgXHJcbiAgICAgICAgIFxyXG4gICAgICAgICAgcmV0dXJuIHN0cmlwZS5jaGFyZ2VzLmNyZWF0ZSh7IFxyXG4gICAgICAgICAgICAgIGFtb3VudDogdG9fYWRtaW5fYW1vdW50ICogMTAwLCAgICAgLy8gQ2hhcmluZyBScyAyNSBcclxuICAgICAgICAgICAgICBkZXNjcmlwdGlvbjogJ1dlYiBEZXZlbG9wbWVudCBQcm9kdWN0JywgXHJcbiAgICAgICAgICAgICAgLy9jdXJyZW5jeTogJ0lOUicsIFxyXG4gICAgICAgICAgICAgIGN1cnJlbmN5OiAnVVNEJywgXHJcbiAgICAgICAgICAgICAgY3VzdG9tZXI6IGN1c3RvbWVyLmlkIFxyXG4gICAgICAgICAgfSk7IFxyXG4gICAgICB9KSBcclxuICAgICAgLnRoZW4oKGNoYXJnZSkgPT4geyBcclxuICAgICAgICBcclxuICAgICAgICAvL1RyYW5zZmVyIGludG8gaW5mbHVlbmNlcidzIGFjY291bnQgXHJcbiAgICAgICAgXHJcbiAgICAgICAgbGV0IHRyYW5zZmVyID0gc3RyaXBlLnRyYW5zZmVycy5jcmVhdGUoXHJcbiAgICAgICAgICB7XHJcbiAgICAgICAgICAgIGFtb3VudDogdG9faW5mbHVlbmNlcl9hbW91bnQgKiAxMDAsXHJcbiAgICAgICAgICAgICdjdXJyZW5jeScgOiAnVVNEJyxcclxuICAgICAgICAgICAgJ2Rlc3RpbmF0aW9uJyA6IGJhbmtfYWNjb3VudF9pZFxyXG4gICAgICAgICAgfVxyXG4gICAgICAgICkudGhlbigocmVzdWx0KSA9PiB7XHJcbiBcclxuXHJcbiAgICAgICAgY29uc29sZS5sb2coXCJ2aWpheSBjaGVraW5nIHN0YXJ0XCIpO1xyXG4gICAgICAgIGNvbnNvbGUubG9nKHJlc3VsdCk7XHJcbiAgICAgICAgY29uc29sZS5sb2coXCJ2aWpheSBjaGVraW5nIGUgbmRcIik7XHJcbiAgICAgICAgfSkuY2F0Y2goKGVycikgPT4ge1xyXG4gICAgICAgIGNvbnNvbGUubG9nKGVycik7XHJcbiAgICAgICAgcmVzLnNlbmQoe2NvZGU6MjAwLG1lc3NhZ2U6ZXJyLGRhdGE6XCJ2aWpheSBja2luZ1wifSlcclxuICAgICAgICAgICAgLy8gSWYgc29tZSBlcnJvciBvY2N1cnMgXHJcbiAgICAgIH0pOztcclxuXHJcbiAgICAgICAgcmV0dXJuXHJcbiAgICAgICAgbGV0IGNoZWNrb3V0X2RhdGEgPSAgbmV3IGNoZWNrb3V0LmNoZWNrb3V0KCk7XHJcblxyXG4gICAgICAgIGNoZWNrb3V0X2RhdGEuaW5mbHVlbmNlcmlkICA9IGluZmx1ZW5jZXJfaWQ7XHJcbiAgICAgICAgY2hlY2tvdXRfZGF0YS5pbmZsdWVuY2VyX2lkICA9IGluZmx1ZW5jZXJfaWQ7XHJcbiAgICAgICAgY2hlY2tvdXRfZGF0YS5uYW1lICAgICAgICAgID0gbmFtZTtcclxuICAgICAgICBjaGVja291dF9kYXRhLmVtYWlsICAgICAgICAgPSBlbWFpbDtcclxuICAgICAgICBjaGVja291dF9kYXRhLnBob25lICAgICAgICAgPSBwaG9uZTtcclxuICAgICAgICBjaGVja291dF9kYXRhLmRlc2NyaXB0aW9uICAgPSBkZXNjcmlwdGlvbjtcclxuICAgICAgICBjaGVja291dF9kYXRhLm1lZGlhX3R5cGUgICAgPSBtZWRpYV90eXBlO1xyXG4gICAgICAgIGNoZWNrb3V0X2RhdGEubWVkaWFfb3B0aW9uICA9IG1lZGlhX29wdGlvbjtcclxuICAgICAgICBjaGVja291dF9kYXRhLnJlc3BvbnNlICAgICAgPSBKU09OLnN0cmluZ2lmeShjaGFyZ2UpO1xyXG4gICAgICAgIGNoZWNrb3V0X2RhdGEuYW1vdW50ICAgICAgICA9IHRvdGFsX2Ftb3VudDtcclxuICAgICAgICBjaGVja291dF9kYXRhLnN0YXR1cyAgICAgICAgPSB1bnJlYWQ7XHJcbiAgICAgICAgY2hlY2tvdXRfZGF0YS5kYXRlICAgICAgICAgID0gZGF0ZVRpbWU7XHJcbiAgICAgICAgY2hlY2tvdXRfZGF0YS5jcmVhdGVkX2F0ICAgID0gZGF0ZVRpbWU7XHJcblxyXG4gICAgICAgIFxyXG4gICAgICAgIGNoZWNrb3V0X2RhdGEuc2F2ZShmdW5jdGlvbihlcnJvciAsIGRhdGEpe1xyXG5cclxuICAgICAgICAgIGxldCBzdWJqZWN0ID0gJ0J1eSBieSB1c2VyIGZyb20gQm9vbWFkdmVydGlzZW1lbnQnO1xyXG4gICAgICAgIFxyXG4gICAgICAgICAgc2VuZEVtYWlsKGluZmx1ZW5jZXJfZW1haWwgLCBzdWJqZWN0LGRlc2NyaXB0aW9uKTtcclxuICAgICAgICAgIHJlcy5zZW5kKHtjb2RlOjEwMCxtZXNzYWdlOiBcIiRcIit0b3RhbF9hbW91bnQrXCIgcGF5bWVudCBoYXMgYmVlbiBzdWNjZXNzZnVsbHkgY29tcGxldGVkLlwifSk7IFxyXG5cclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgIC8vIElmIG5vIGVycm9yIG9jY3VycyBcclxuXHJcbiAgICAgIH0pIFxyXG4gICAgICAuY2F0Y2goKGVycikgPT4ge1xyXG4gICAgICAgIGNvbnNvbGUubG9nKGVycik7XHJcbiAgICAgICAgcmVzLnNlbmQoe2NvZGU6MjAwLG1lc3NhZ2U6ZXJyfSlcclxuICAgICAgICAgICAgLy8gSWYgc29tZSBlcnJvciBvY2N1cnMgXHJcbiAgICAgIH0pO1xyXG4gICAgfSkgXHJcbiAgICAuY2F0Y2goKGVycikgPT4ge1xyXG4gICAgICByZXMuc2VuZCh7Y29kZToyMDAsbWVzc2FnZTplcnJ9KSAgICAgIC8vIElmIHNvbWUgZXJyb3Igb2NjdXJzIFxyXG4gICAgfSk7XHJcblxyXG5cclxuICB9KTtcclxuXHJcbiAgbW9kdWxlLmV4cG9ydHMgPSByb3V0ZXI7Il19",
    "map": {
      "version": 3,
      "sources": [
        "login.js"
      ],
      "names": [
        "express",
        "require",
        "router",
        "Router",
        "mongoose",
        "promoters",
        "influencers",
        "checkout",
        "account_data",
        "passwordHash",
        "email",
        "nodemailer",
        "path",
        "account_id",
        "Publishable_Key",
        "Secret_Key",
        "stripe",
        "unread",
        "read",
        "sendEmail",
        "to",
        "subject",
        "html",
        "Promise",
        "resolve",
        "reject",
        "transporter",
        "createTransport",
        "service",
        "port",
        "auth",
        "user",
        "pass",
        "password",
        "tls",
        "rejectUnauthorized",
        "mailOptions",
        "from",
        "sendMail",
        "error",
        "info",
        "post",
        "req",
        "res",
        "body",
        "signin",
        "user_type",
        "isHashed",
        "hashedPassword",
        "generate",
        "find",
        "$or",
        "name",
        "err",
        "json",
        "status",
        "statusCode",
        "msg",
        "length",
        "verify",
        "data",
        "phone",
        "description",
        "total_amount",
        "influencer_email",
        "trim",
        "influencer_id",
        "media_option",
        "media_type",
        "media_key",
        "stripe_email",
        "stripe_username",
        "card_number",
        "stripe_cardnumber",
        "card_cvc",
        "stripe_cvc",
        "stripe_zipcode",
        "month_year",
        "stripe_month_year",
        "split",
        "exp_month",
        "exp_year",
        "date_ob",
        "Date",
        "date",
        "getDate",
        "slice",
        "month",
        "getMonth",
        "year",
        "getFullYear",
        "hours",
        "getHours",
        "minutes",
        "getMinutes",
        "seconds",
        "getSeconds",
        "dateTime",
        "commission",
        "to_admin_amount",
        "to_influencer_amount",
        "checkout_data",
        "influencerid",
        "response",
        "amount",
        "created_at",
        "bank_account_id",
        "findOne",
        "account_data_err",
        "account_data_res",
        "code",
        "message",
        "account_status",
        "send",
        "account",
        "accounts",
        "retrieve",
        "capabilities",
        "transfers",
        "token",
        "tokens",
        "create",
        "card",
        "number",
        "cvc",
        "then",
        "token_id",
        "id",
        "customers",
        "source",
        "address",
        "line1",
        "postal_code",
        "city",
        "state",
        "country",
        "customer",
        "charges",
        "currency",
        "charge",
        "transfer",
        "result",
        "console",
        "log",
        "catch",
        "JSON",
        "stringify",
        "save",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "E:\\boomadvertisement\\serverapi\\routes\\",
      "sourcesContent": [
        "\r\nvar express         = require('express');\r\nvar router          = express.Router();\r\nvar   mongoose      = require('mongoose');\r\nconst promoters     = require('../models/promoters');\r\nconst influencers   = require('../models/influencers');\r\nconst checkout      = require('../models/checkout');\r\nconst account_data  = require('../models/account_data');\r\nvar   passwordHash  = require('password-hash');\r\nconst email         = require('../config/email');\r\nconst nodemailer    = require('nodemailer');\r\nconst path = require('path') \r\n\r\nvar account_id= 'acct_1HcUqfDnJHxQJk0M';\r\nvar Publishable_Key = 'pk_test_wtJVzJKpR9dbqN7Ml7vnR1lc00m9k1B0uR';\r\nvar Secret_Key = 'sk_test_STTTocdv5NxCwUDDwIBs5rZW00zadVbJnf';\r\n//const account_id = 'acct_1HI9qMEXA7xfj1nH'; \r\n// var Publishable_Key = 'pk_test_51HI9qMEXA7xfj1nHVxgdLB9TapBg5XlzSdvp991XoqXlLhePzY4I8l54WyzzRyDpMfWG8ubnIqUq7llRkahqiOsi00BDEFDLGg'\r\n// var Secret_Key = 'sk_test_51HI9qMEXA7xfj1nHePxD4KlYqi9nUUlpjvpDmwNQhMEyQCeTMCiUGw6AFWuJ4YytCyVgr9Br1BkqohBvFJGG3skO00THMGx9Fv'\r\n\r\nconst stripe = require('stripe')(Secret_Key);\r\n\r\nconst unread  = 0;\r\nconst read    = 1;\r\n\r\n  // Send Email Function \r\n\r\n  var sendEmail = function(to,subject,html) {\r\n\r\n    \r\n    return new Promise(function(resolve, reject) {\r\n      var transporter = nodemailer.createTransport({\r\n        \r\n        service: 'gmail', \r\n        port:465,\r\n        auth: { \r\n          user: email.email,\r\n          pass: email.password\r\n        } ,\r\n        tls: {\r\n          // do not fail on invalid certs\r\n          rejectUnauthorized: false\r\n        }\r\n      });\r\n    \r\n    var mailOptions = {\r\n      from: email.email+' <http://boomadvertise.com/>',\r\n      to: to,\r\n      subject: subject,\r\n      html: html\r\n    };\r\n\r\n      transporter.sendMail(mailOptions, function(error, info){\r\n      if (error) {\r\n        reject(error);\r\n      } else {\r\n      resolve(1)\r\n      }\r\n    });\r\n\r\n    \r\n  });\r\n\r\n  }\r\n\r\n  router.post('/', function(req, res) {\r\n    \r\n    if(req.body.signin.user_type == 0){\r\n\r\n      if(!passwordHash.isHashed(req.body.signin.password)){\r\n        var hashedPassword = passwordHash.generate(req.body.signin.password);\r\n      \r\n        influencers.influencers\r\n          .find({ $or : [{name:req.body.signin.email},{'email':req.body.signin.email}]},function (err, influencers) {\r\n          if (err) {\r\n              res.json({status:\"failure\",statusCode:600,msg:err});\r\n          }else if(influencers.length==0){\r\n            \r\n            res.json({status:\"failure\",statusCode:500,msg:\"Invalid Credentials!!!\"});\r\n          }\r\n            else{\r\n              if(passwordHash.verify(req.body.signin.password, influencers[0].password)){\r\n              \r\n                res.json({status:\"success\",statusCode:200,data:influencers,msg:\"Login successfully...\"});\r\n              }else{\r\n                res.json({status:\"failure\",statusCode:100,msg:\"Invalid Credentials!!!\"});\r\n              }\r\n            }\r\n        });\r\n      }\r\n\r\n    }else{\r\n      if(!passwordHash.isHashed(req.body.signin.password)){\r\n        var hashedPassword = passwordHash.generate(req.body.signin.password);\r\n        \r\n        promoters.promoters\r\n          .find({ $or : [{name:req.body.signin.email},{'email':req.body.signin.email}]},function (err, promoters) {\r\n          if (err) {\r\n              res.json({status:\"failure\",statusCode:100,msg:err});\r\n          }else if(promoters.length==0){\r\n            res.json({status:\"failure\",statusCode:100,msg:\"Invalid Credentials!!!\"});\r\n          }\r\n            else{\r\n              if(passwordHash.verify(req.body.signin.password, promoters[0].password)){\r\n              \r\n                res.json({status:\"success\",statusCode:200,data:promoters,msg:\"Login successfully...\"});\r\n              }else{\r\n                res.json({status:\"failure\",statusCode:100,msg:\"Invalid Credentials!!!\"});\r\n              }\r\n            }\r\n        });\r\n      }\r\n    }\r\n      // else{\r\n      // promoters.promoters\r\n      // .find({ $or : [{name:req.body.signin.email},{'email':req.body.signin.email}]},function (err, promoters) {\r\n        \r\n      //     if (err) {\r\n      //         res.json({status:\"failure\",statusCode:100,data:err});\r\n      //     }else if(promoters.length==0){\r\n      //       res.json({status:\"failure\",statusCode:100,data:\"Invalid Credentials!!!\"});\r\n      //       }\r\n      //       else{\r\n      //         if(passwordHash.verify(req.body.signin.password, promoters[0].password)){\r\n      //         \r\n      //           res.json({status:\"success\",statusCode:200,data:promoters});\r\n      //         }\r\n      //       }\r\n      //   });\r\n      // } \r\n\r\n      \r\n  });\r\n\r\n  router.post(\"/payment\",async function(req , res){\r\n\r\n    \r\n    let email             = req.body.email;\r\n    let name              = req.body.name;\r\n    let password          = req.body.password;\r\n    let phone             = req.body.phone;\r\n    let description       = req.body.description;\r\n    let total_amount      = req.body.total_amount;\r\n    let influencer_email  = req.body.influencer_email.trim();\r\n    let influencer_id     = req.body.influencer_id;\r\n    let media_option      = req.body.media_option;\r\n    let media_type        = req.body.media_key;\r\n\r\n    let stripe_email    = req.body.stripe_email;\r\n    let stripe_username = req.body.stripe_username;\r\n    let card_number     = req.body.stripe_cardnumber;\r\n    let card_cvc        = req.body.stripe_cvc;\r\n    let stripe_zipcode  = req.body.stripe_zipcode;\r\n    let month_year      = req.body.stripe_month_year.split('/');\r\n\r\n    let exp_month       = month_year[0];\r\n    let exp_year        = month_year[1] ? month_year[1]: '';\r\n\r\n    let date_ob = new Date();\r\n\r\n\r\n    let date = (\"0\" + date_ob.getDate()).slice(-2);\r\n    let month = (\"0\" + (date_ob.getMonth() + 1)).slice(-2);\r\n    let year = date_ob.getFullYear();\r\n    let hours = date_ob.getHours();\r\n    let minutes = date_ob.getMinutes();\r\n    let seconds = date_ob.getSeconds();\r\n    // prints date & time in YYYY-MM-DD HH:MM:SS format\r\n    let dateTime = year + \"-\" + month + \"-\" + date + \" \" + hours + \":\" + minutes + \":\" + seconds;\r\n\r\n    let commission = 20;\r\n\r\n    let to_admin_amount       = (commission/100) * total_amount;\r\n    let to_influencer_amount  = total_amount - to_admin_amount;\r\n\r\n\r\n    \r\n    let checkout_data =  new checkout.checkout();\r\n\r\n        checkout_data.influencerid  = influencer_id;\r\n        checkout_data.influencer_id = influencer_id;\r\n        checkout_data.name          = name;\r\n        checkout_data.email         = email;\r\n        checkout_data.phone         = phone;\r\n        checkout_data.description   = description;\r\n        checkout_data.media_type    = media_type;\r\n        checkout_data.media_option  = media_option;\r\n        checkout_data.response      = '';\r\n        checkout_data.amount        = to_influencer_amount;\r\n        checkout_data.status        = unread;\r\n        checkout_data.date          = dateTime;\r\n        checkout_data.created_at    = dateTime;\r\n\r\n        \r\n        /*checkout_data.save(function(error , data){\r\n\r\n          let subject = 'Buy by user from Boomadvertisement';\r\n        \r\n          sendEmail(influencer_email , subject,description);\r\n          res.send({code:100,message: \"$\"+total_amount+\" payment has been successfully completed.\"}); \r\n\r\n        });\r\n\r\n        return false;*/\r\n\r\n    let bank_account_id = '';\r\n    await account_data.account_data.findOne({ influencerid : influencer_id} , function(account_data_err ,  account_data_res){\r\n\r\n      if (account_data_err) {\r\n\r\n        res.json({code:201,message: \" Influencer's account does not exist'\"});\r\n        return;\r\n      } \r\n\r\n      bank_account_id = account_data_res.bank_account_id;\r\n    \r\n    });\r\n\r\n\r\n    \r\n    let account_status =false;\r\n    \r\n    if(!influencer_email){\r\n      res.send({code:201,message: \" Influencer doesn't have any email\"});\r\n      return;\r\n    }\r\n\r\n    const account = await stripe.accounts.retrieve(bank_account_id);\r\n\r\n    account_status = account.capabilities.transfers == 'active' ? true : false;\r\n\r\n\r\n    // if(!account_status){\r\n      \r\n    //   res.send({code:201,message: \" Influencer's account not verified yet.\"});\r\n    //   return;\r\n    // }\r\n\r\n    const token = await stripe.tokens.create({\r\n        card: {\r\n          number: card_number,\r\n          exp_month: exp_month,\r\n          exp_year: exp_year,\r\n          cvc: card_cvc,\r\n        },\r\n    })\r\n    .then((token) => { \r\n        \r\n        let token_id = token.id;\r\n        stripe.customers.create({ \r\n          email: stripe_email, \r\n          source: token_id, \r\n          name: stripe_username, \r\n          address: { \r\n              line1: 'TC 9/4 Old MES colony', \r\n              postal_code: stripe_zipcode, \r\n              city: 'Indore', \r\n              state: 'Madhya Pradesh', \r\n              country: 'India', \r\n          } \r\n      }) \r\n      .then((customer) => { \r\n        \r\n         \r\n          return stripe.charges.create({ \r\n              amount: to_admin_amount * 100,     // Charing Rs 25 \r\n              description: 'Web Development Product', \r\n              //currency: 'INR', \r\n              currency: 'USD', \r\n              customer: customer.id \r\n          }); \r\n      }) \r\n      .then((charge) => { \r\n        \r\n        //Transfer into influencer's account \r\n        \r\n        let transfer = stripe.transfers.create(\r\n          {\r\n            amount: to_influencer_amount * 100,\r\n            'currency' : 'USD',\r\n            'destination' : bank_account_id\r\n          }\r\n        ).then((result) => {\r\n \r\n\r\n        console.log(\"vijay cheking start\");\r\n        console.log(result);\r\n        console.log(\"vijay cheking e nd\");\r\n        }).catch((err) => {\r\n        console.log(err);\r\n        res.send({code:200,message:err,data:\"vijay cking\"})\r\n            // If some error occurs \r\n      });;\r\n\r\n        return\r\n        let checkout_data =  new checkout.checkout();\r\n\r\n        checkout_data.influencerid  = influencer_id;\r\n        checkout_data.influencer_id  = influencer_id;\r\n        checkout_data.name          = name;\r\n        checkout_data.email         = email;\r\n        checkout_data.phone         = phone;\r\n        checkout_data.description   = description;\r\n        checkout_data.media_type    = media_type;\r\n        checkout_data.media_option  = media_option;\r\n        checkout_data.response      = JSON.stringify(charge);\r\n        checkout_data.amount        = total_amount;\r\n        checkout_data.status        = unread;\r\n        checkout_data.date          = dateTime;\r\n        checkout_data.created_at    = dateTime;\r\n\r\n        \r\n        checkout_data.save(function(error , data){\r\n\r\n          let subject = 'Buy by user from Boomadvertisement';\r\n        \r\n          sendEmail(influencer_email , subject,description);\r\n          res.send({code:100,message: \"$\"+total_amount+\" payment has been successfully completed.\"}); \r\n\r\n        });\r\n\r\n         // If no error occurs \r\n\r\n      }) \r\n      .catch((err) => {\r\n        console.log(err);\r\n        res.send({code:200,message:err})\r\n            // If some error occurs \r\n      });\r\n    }) \r\n    .catch((err) => {\r\n      res.send({code:200,message:err})      // If some error occurs \r\n    });\r\n\r\n\r\n  });\r\n\r\n  module.exports = router;"
      ]
    },
    "sourceType": "module",
    "mtime": 1624097264969
  },
  "{\"sourceRoot\":\"E:\\\\boomadvertisement\\\\serverapi\\\\routes\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"E:\\\\boomadvertisement\\\\serverapi\",\"filename\":\"E:\\\\boomadvertisement\\\\serverapi\\\\routes\\\\test.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"E:\\\\boomadvertisement\\\\serverapi\",\"plugins\":[],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "E:\\boomadvertisement\\serverapi\\routes\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "E:\\boomadvertisement\\serverapi",
      "filename": "E:\\boomadvertisement\\serverapi\\routes\\test.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "E:\\boomadvertisement\\serverapi",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "E:\\boomadvertisement\\serverapi\\routes\\test.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "E:\\boomadvertisement\\serverapi\\routes\\test.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "E:\\boomadvertisement\\serverapi\\routes\\",
        "sourceFileName": "test.js"
      }
    },
    "ast": null,
    "code": "var express = require('express');\n\nvar router = express.Router();\n\nvar mongoose = require('mongoose');\n\nconst promoters = require('../models/promoters');\n\nconst influencers = require('../models/influencers');\n\nconst checkout = require('../models/checkout');\n\nvar passwordHash = require('password-hash');\n\nconst email = require('../config/email');\n\nconst nodemailer = require('nodemailer');\n\nconst path = require('path'); // dimpy@codenomad.net account using for Stripe \n\n\nconst account_id = 'acct_1HcUqfDnJHxQJk0M'; // get it from stripe's account profile info \n\nvar Publishable_Key = 'pk_test_51HI9qMEXA7xfj1nHVxgdLB9TapBg5XlzSdvp991XoqXlLhePzY4I8l54WyzzRyDpMfWG8ubnIqUq7llRkahqiOsi00BDEFDLGg';\nvar Secret_Key = 'sk_test_STTTocdv5NxCwUDDwIBs5rZW00zadVbJnf';\n\nconst stripe = require('stripe')(Secret_Key); // const account_id = 'acct_1HI9qMEXA7xfj1nH'; // get it from stripe's account profile info \n// var Publishable_Key = 'pk_test_51HI9qMEXA7xfj1nHVxgdLB9TapBg5XlzSdvp991XoqXlLhePzY4I8l54WyzzRyDpMfWG8ubnIqUq7llRkahqiOsi00BDEFDLGg'\n// var Secret_Key = 'sk_test_51HI9qMEXA7xfj1nHePxD4KlYqi9nUUlpjvpDmwNQhMEyQCeTMCiUGw6AFWuJ4YytCyVgr9Br1BkqohBvFJGG3skO00THMGx9Fv';\n// const stripe = require('stripe')(Secret_Key);\n\n\nrouter.post(\"/account\", async function (req, res) {\n  let card_number = req.body.stripe_cardnumber;\n  let card_cvc = req.body.stripe_cvc;\n  let month_year = req.body.stripe_month_year.split('/');\n  let exp_month = month_year[0];\n  let exp_year = month_year[1] ? month_year[1] : '';\n  let bank_account_id = 'acct_1IlAXp2Ro4VhpXru';\n  let account_status = false;\n  const account = await stripe.accounts.retrieve(bank_account_id);\n  account_status = account.capabilities.transfers == 'active' ? true : false;\n  return;\n  const token = await stripe.tokens.create({\n    card: {\n      number: card_number,\n      exp_month: exp_month,\n      exp_year: exp_year,\n      cvc: card_cvc,\n      currency: 'USD'\n    }\n  }).then(token => {\n    console.log(token.id);\n    var bankAccount = stripe.accounts.createExternalAccount(account_id, {\n      //external_account:\"tok_1IkVLfCe7ZPGJJ1Pu1VPe2BI\",\n      external_account: token.id\n    }).then(details => {\n      console.log(details);\n      res.send({\n        code: 100,\n        message: JSON.stringify(details)\n      });\n    }).catch(err => {\n      res.send({\n        code: 200,\n        message: err\n      }); // If some error occurs \n    });\n    console.log(bankAccount);\n  }).catch(err => {\n    res.send({\n      code: 200,\n      message: err\n    }); // If some error occurs \n  });\n});\nrouter.post(\"/craete-account\", async function (req, res) {\n  var email = req.body.email;\n  const account = await stripe.accounts.create({\n    type: 'custom',\n    country: 'US',\n    email: email,\n    capabilities: {\n      card_payments: {\n        requested: true\n      },\n      transfers: {\n        requested: true\n      }\n    }\n  });\n  console.log(\"viay\");\n  console.log(account);\n  res.send({\n    code: 100,\n    message: account\n  });\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "test.js"
      ],
      "names": [
        "express",
        "require",
        "router",
        "Router",
        "mongoose",
        "promoters",
        "influencers",
        "checkout",
        "passwordHash",
        "email",
        "nodemailer",
        "path",
        "account_id",
        "Publishable_Key",
        "Secret_Key",
        "stripe",
        "post",
        "req",
        "res",
        "card_number",
        "body",
        "stripe_cardnumber",
        "card_cvc",
        "stripe_cvc",
        "month_year",
        "stripe_month_year",
        "split",
        "exp_month",
        "exp_year",
        "bank_account_id",
        "account_status",
        "account",
        "accounts",
        "retrieve",
        "capabilities",
        "transfers",
        "token",
        "tokens",
        "create",
        "card",
        "number",
        "cvc",
        "currency",
        "then",
        "console",
        "log",
        "id",
        "bankAccount",
        "createExternalAccount",
        "external_account",
        "details",
        "send",
        "code",
        "message",
        "JSON",
        "stringify",
        "catch",
        "err",
        "type",
        "country",
        "card_payments",
        "requested",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "E:\\boomadvertisement\\serverapi\\routes\\",
      "sourcesContent": [
        "\r\nvar express         = require('express');\r\nvar router          = express.Router();\r\nvar   mongoose      = require('mongoose');\r\nconst promoters     = require('../models/promoters');\r\nconst influencers   = require('../models/influencers');\r\nconst checkout      = require('../models/checkout');\r\nvar   passwordHash  = require('password-hash');\r\nconst email         = require('../config/email');\r\nconst nodemailer    = require('nodemailer');\r\nconst path = require('path') \r\n\r\n// dimpy@codenomad.net account using for Stripe \r\nconst account_id = 'acct_1HcUqfDnJHxQJk0M'; // get it from stripe's account profile info \r\nvar Publishable_Key = 'pk_test_51HI9qMEXA7xfj1nHVxgdLB9TapBg5XlzSdvp991XoqXlLhePzY4I8l54WyzzRyDpMfWG8ubnIqUq7llRkahqiOsi00BDEFDLGg'\r\nvar Secret_Key = 'sk_test_STTTocdv5NxCwUDDwIBs5rZW00zadVbJnf';\r\nconst stripe = require('stripe')(Secret_Key);\r\n\r\n// const account_id = 'acct_1HI9qMEXA7xfj1nH'; // get it from stripe's account profile info \r\n// var Publishable_Key = 'pk_test_51HI9qMEXA7xfj1nHVxgdLB9TapBg5XlzSdvp991XoqXlLhePzY4I8l54WyzzRyDpMfWG8ubnIqUq7llRkahqiOsi00BDEFDLGg'\r\n// var Secret_Key = 'sk_test_51HI9qMEXA7xfj1nHePxD4KlYqi9nUUlpjvpDmwNQhMEyQCeTMCiUGw6AFWuJ4YytCyVgr9Br1BkqohBvFJGG3skO00THMGx9Fv';\r\n// const stripe = require('stripe')(Secret_Key);\r\n\r\n\r\n  router.post(\"/account\",async function(req , res){\r\n    \r\n    let card_number     = req.body.stripe_cardnumber;\r\n    let card_cvc        = req.body.stripe_cvc;\r\n    let month_year      = req.body.stripe_month_year.split('/');\r\n    let exp_month       = month_year[0];\r\n    let exp_year        = month_year[1] ? month_year[1]: '';\r\n\r\n    let bank_account_id = 'acct_1IlAXp2Ro4VhpXru';\r\n    let account_status =false;\r\n    const account = await stripe.accounts.retrieve(\r\n      bank_account_id\r\n    );\r\n\r\n    account_status = account.capabilities.transfers == 'active' ? true : false;\r\n\r\n    \r\n    return;\r\n\r\n    const token = await stripe.tokens.create({\r\n      card: {\r\n        number: card_number,\r\n        exp_month: exp_month,\r\n        exp_year: exp_year,\r\n        cvc: card_cvc,\r\n        currency: 'USD',\r\n      },\r\n      \r\n  })\r\n  .then((token) => {\r\n    console.log(token.id);\r\n\r\n    var bankAccount =  stripe.accounts.createExternalAccount(\r\n      account_id,\r\n      {\r\n        //external_account:\"tok_1IkVLfCe7ZPGJJ1Pu1VPe2BI\",\r\n        external_account:token.id,\r\n      },\r\n    ).then((details) => {\r\n      console.log(details)\r\n      res.send({code:100,message:JSON.stringify(details)})  \r\n    }).catch((err)=>{\r\n\r\n      res.send({code:200,message:err})      // If some error occurs \r\n    });\r\n\r\n    console.log(bankAccount);\r\n  }) \r\n  .catch((err) => {\r\n    res.send({code:200,message:err})      // If some error occurs \r\n  });\r\n  });\r\n\r\n  router.post(\"/craete-account\",async function(req , res){\r\n\r\n    var email = req.body.email;\r\n    const account = await stripe.accounts.create({\r\n      type: 'custom',\r\n      country: 'US',\r\n      email: email,\r\n      capabilities: {\r\n        card_payments: {requested: true},\r\n        transfers: {requested: true},\r\n      },\r\n    });\r\n\r\n    console.log(\"viay\");\r\n    console.log(account);\r\n    res.send({code:100,message:account})\r\n  });\r\n  module.exports = router;"
      ]
    },
    "sourceType": "module",
    "mtime": 1619690006029
  },
  "{\"sourceRoot\":\"E:\\\\boomadvertisement\\\\serverapi\\\\routes\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"E:\\\\boomadvertisement\\\\serverapi\",\"filename\":\"E:\\\\boomadvertisement\\\\serverapi\\\\routes\\\\sessionsController.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"E:\\\\boomadvertisement\\\\serverapi\",\"plugins\":[],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "E:\\boomadvertisement\\serverapi\\routes\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "E:\\boomadvertisement\\serverapi",
      "filename": "E:\\boomadvertisement\\serverapi\\routes\\sessionsController.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "E:\\boomadvertisement\\serverapi",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "E:\\boomadvertisement\\serverapi\\routes\\sessionsController.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "E:\\boomadvertisement\\serverapi\\routes\\sessionsController.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "E:\\boomadvertisement\\serverapi\\routes\\",
        "sourceFileName": "sessionsController.js"
      }
    },
    "ast": null,
    "code": "const express = require('express');\n\nconst router = express.Router();\n\nconst CryptoJS = require(\"crypto-js\");\n\nconst oauth = require('oauth');\n\nconst _twitterConsumerKey = process.env.TWITTER_CONSUMER_KEY;\nconst _twitterConsumerSecret = process.env.TWITTER_CONSUMER_SECRET;\nconst twitterCallbackUrl = process.env.TWITTER_CALLBACK_URL;\nconst consumer = new oauth.OAuth(\"https://twitter.com/oauth/request_token\", \"https://twitter.com/oauth/access_token\", _twitterConsumerKey, _twitterConsumerSecret, \"1.0A\", twitterCallbackUrl, \"HMAC-SHA1\");\n\nconst influencers_data = require('../models/influencers_data');\n\nconst Twitter = require('twit');\n\nvar ObjectID = require('mongodb').ObjectID; //var url = require('url');\n//var url_parts = url.parse(request.url, true);\n//var query = url_parts.query;\n\n\nrouter.get('/connect', (req, res) => {\n  consumer.getOAuthRequestToken(function (error, oauthToken, oauthTokenSecret, results) {\n    if (error) {\n      res.send(error, 500);\n    } else {\n      req.session.oauthRequestToken = oauthToken;\n      req.session.oauthRequestTokenSecret = oauthTokenSecret;\n      const redirect = {\n        redirectUrl: `https://twitter.com/oauth/authorize?oauth_token=${req.session.oauthRequestToken}`\n      };\n      res.send(redirect);\n    }\n  });\n});\nrouter.post('/saveAccessTokens', (req, res) => {\n  consumer.getOAuthAccessToken(req.body.oauth_token, req.session.oauthRequestTokenSecret, req.body.oauth_verifier, (error, oauthAccessToken, oauthAccessTokenSecret, results) => {\n    if (error) {\n      // logger.error(error);\n      res.send(error, 500);\n    } else {\n      // req.session.oauthAccessToken = oauthAccessToken;\n      //req.session.oauthAccessTokenSecret = oauthAccessTokenSecret\n      // return res.send({ message: 'token saved' });\n      const client = new Twitter({\n        consumer_key: _twitterConsumerKey,\n        consumer_secret: _twitterConsumerSecret,\n        access_token: oauthAccessToken,\n        access_token_secret: oauthAccessTokenSecret\n      });\n      client.get('account/verify_credentials').then(user => {\n        //  res.send(user)\n        live_twitter_follower = user.data.followers_count;\n        /*******update twitter data */\n\n        influencers_data.influencers_data.updateOne({\n          \"influencerid\": new ObjectID(req.body._id)\n        }, {\n          $set: {\n            \"twitterfollowers\": live_twitter_follower\n          }\n        }, function (err, result) {\n          if (err) {\n            res.json({\n              status: \"failure\",\n              statusCode: 100,\n              error: 'could not save data'\n            });\n          } else {\n            res.json({\n              status: \"success\",\n              statusCode: 200,\n              data: result,\n              twt: user\n            });\n          }\n        });\n        /*******update twitter data */\n      }).catch(error => {\n        res.send(error);\n      });\n    }\n  });\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "sessionsController.js"
      ],
      "names": [
        "express",
        "require",
        "router",
        "Router",
        "CryptoJS",
        "oauth",
        "_twitterConsumerKey",
        "process",
        "env",
        "TWITTER_CONSUMER_KEY",
        "_twitterConsumerSecret",
        "TWITTER_CONSUMER_SECRET",
        "twitterCallbackUrl",
        "TWITTER_CALLBACK_URL",
        "consumer",
        "OAuth",
        "influencers_data",
        "Twitter",
        "ObjectID",
        "get",
        "req",
        "res",
        "getOAuthRequestToken",
        "error",
        "oauthToken",
        "oauthTokenSecret",
        "results",
        "send",
        "session",
        "oauthRequestToken",
        "oauthRequestTokenSecret",
        "redirect",
        "redirectUrl",
        "post",
        "getOAuthAccessToken",
        "body",
        "oauth_token",
        "oauth_verifier",
        "oauthAccessToken",
        "oauthAccessTokenSecret",
        "client",
        "consumer_key",
        "consumer_secret",
        "access_token",
        "access_token_secret",
        "then",
        "user",
        "live_twitter_follower",
        "data",
        "followers_count",
        "updateOne",
        "_id",
        "$set",
        "err",
        "result",
        "json",
        "status",
        "statusCode",
        "twt",
        "catch",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "E:\\boomadvertisement\\serverapi\\routes\\",
      "sourcesContent": [
        "const express = require('express');\r\nconst router = express.Router();\r\nconst CryptoJS = require(\"crypto-js\");\r\nconst oauth = require('oauth');\r\nconst _twitterConsumerKey = process.env.TWITTER_CONSUMER_KEY;\r\nconst _twitterConsumerSecret = process.env.TWITTER_CONSUMER_SECRET;\r\nconst twitterCallbackUrl = process.env.TWITTER_CALLBACK_URL;\r\nconst consumer = new oauth.OAuth(\"https://twitter.com/oauth/request_token\", \"https://twitter.com/oauth/access_token\",_twitterConsumerKey, _twitterConsumerSecret, \"1.0A\", twitterCallbackUrl, \"HMAC-SHA1\");\r\nconst influencers_data = require('../models/influencers_data');\r\nconst Twitter = require('twit');\r\nvar ObjectID = require('mongodb').ObjectID;\r\n\r\n\r\n//var url = require('url');\r\n//var url_parts = url.parse(request.url, true);\r\n//var query = url_parts.query;\r\n\r\nrouter.get('/connect', (req, res) => {\r\n  \r\n  \r\n\r\n  consumer.getOAuthRequestToken(function (error, oauthToken,   oauthTokenSecret, results) {\r\n    \r\n    if (error) {\r\n      res.send(error, 500);\r\n    } else {\r\n      req.session.oauthRequestToken = oauthToken;\r\n      req.session.oauthRequestTokenSecret = oauthTokenSecret;\r\n      const redirect = { \r\nredirectUrl: `https://twitter.com/oauth/authorize?oauth_token=${req.session.oauthRequestToken}`\r\n    }\r\n      res.send(redirect);\r\n    }\r\n  });\r\n});\r\nrouter.post('/saveAccessTokens', (req, res) => {\r\n  consumer.getOAuthAccessToken(\r\n  req.body.oauth_token,\r\n  req.session.oauthRequestTokenSecret,\r\n  req.body.oauth_verifier,\r\n  (error, oauthAccessToken, oauthAccessTokenSecret, results) => {\r\n    if (error) {\r\n     // logger.error(error);\r\n      res.send(error, 500);\r\n    }\r\n    else {\r\n     // req.session.oauthAccessToken = oauthAccessToken;\r\n      //req.session.oauthAccessTokenSecret = oauthAccessTokenSecret\r\n     // return res.send({ message: 'token saved' });\r\n\r\n      const client = new Twitter({\r\n        consumer_key: _twitterConsumerKey,\r\n        consumer_secret: _twitterConsumerSecret,\r\n        access_token: oauthAccessToken,\r\n        access_token_secret: oauthAccessTokenSecret\r\n      });\r\n\r\n      client.get('account/verify_credentials').then(user => {\r\n      //  res.send(user)\r\n            \r\n            live_twitter_follower = user.data.followers_count;\r\n\r\n                        /*******update twitter data */\r\n                influencers_data.influencers_data.updateOne(\r\n                  { \"influencerid\": new ObjectID(req.body._id) },\r\n                  {\r\n                    $set: { \"twitterfollowers\" : live_twitter_follower },\r\n                  },\r\n                  function(err,result){ \r\n                    if (err) {\r\n                      \r\n                      res.json({status:\"failure\",statusCode:100,error:'could not save data'});\r\n                    }\r\n                    else{\r\n                      \r\n                    res.json({status:\"success\",statusCode:200,data:result,twt:user});\r\n                    }\r\n                  });\r\n                /*******update twitter data */\r\n\r\n      }).catch(error => {\r\n        res.send(error);\r\n      });\r\n\r\n\r\n\r\n    }\r\n  });\r\n});\r\nmodule.exports = router;"
      ]
    },
    "sourceType": "module",
    "mtime": 1613986002344
  }
}